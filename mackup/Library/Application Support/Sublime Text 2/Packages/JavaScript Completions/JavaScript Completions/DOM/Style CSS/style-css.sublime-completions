{
  "scope": "source.js",

  "completions":
  [
    {
      "trigger": "style\tStyle CSS",
      "contents": "style"
    },
    {
      "trigger": "style.$0 = ''\tStyle CSS",
      "contents": "style.$0 = ''"
    },
    {
      "trigger": "style.alignContent\tStyle CSS",
      "contents": "style.alignContent"
    },
    {
      "trigger": "alignContent\tStyle CSS",
      "contents": "alignContent"
    },
    {
      "trigger": "style.alignContent = '$0'\tStyle CSS",
      "contents": "style.alignContent = '$0'"
    },
    {
      "trigger": "alignContent = '$0'\tStyle CSS",
      "contents": "alignContent = '$0'"
    },
    {
      "trigger": "style.alignContent = 'stretch'\tStyle CSS",
      "contents": "style.alignContent = 'stretch'"
    },
    {
      "trigger": "alignContent = 'stretch'\tStyle CSS",
      "contents": "alignContent = 'stretch'"
    },
    {
      "trigger": "style.alignContent = 'center'\tStyle CSS",
      "contents": "style.alignContent = 'center'"
    },
    {
      "trigger": "alignContent = 'center'\tStyle CSS",
      "contents": "alignContent = 'center'"
    },
    {
      "trigger": "style.alignContent = 'flex-start'\tStyle CSS",
      "contents": "style.alignContent = 'flex-start'"
    },
    {
      "trigger": "alignContent = 'flex-start'\tStyle CSS",
      "contents": "alignContent = 'flex-start'"
    },
    {
      "trigger": "style.alignContent = 'flex-end'\tStyle CSS",
      "contents": "style.alignContent = 'flex-end'"
    },
    {
      "trigger": "alignContent = 'flex-end'\tStyle CSS",
      "contents": "alignContent = 'flex-end'"
    },
    {
      "trigger": "style.alignContent = 'space-between'\tStyle CSS",
      "contents": "style.alignContent = 'space-between'"
    },
    {
      "trigger": "alignContent = 'space-between'\tStyle CSS",
      "contents": "alignContent = 'space-between'"
    },
    {
      "trigger": "style.alignContent = 'space-around'\tStyle CSS",
      "contents": "style.alignContent = 'space-around'"
    },
    {
      "trigger": "alignContent = 'space-around'\tStyle CSS",
      "contents": "alignContent = 'space-around'"
    },
    {
      "trigger": "style.alignContent = 'initial'\tStyle CSS",
      "contents": "style.alignContent = 'initial'"
    },
    {
      "trigger": "alignContent = 'initial'\tStyle CSS",
      "contents": "alignContent = 'initial'"
    },
    {
      "trigger": "style.alignContent = 'inherit'\tStyle CSS",
      "contents": "style.alignContent = 'inherit'"
    },
    {
      "trigger": "alignContent = 'inherit'\tStyle CSS",
      "contents": "alignContent = 'inherit'"
    },
    {
      "trigger": "style.alignItems\tStyle CSS",
      "contents": "style.alignItems"
    },
    {
      "trigger": "alignItems\tStyle CSS",
      "contents": "alignItems"
    },
    {
      "trigger": "style.alignItems = '$0'\tStyle CSS",
      "contents": "style.alignItems = '$0'"
    },
    {
      "trigger": "alignItems = '$0'\tStyle CSS",
      "contents": "alignItems = '$0'"
    },
    {
      "trigger": "style.alignItems = 'stretch'\tStyle CSS",
      "contents": "style.alignItems = 'stretch'"
    },
    {
      "trigger": "alignItems = 'stretch'\tStyle CSS",
      "contents": "alignItems = 'stretch'"
    },
    {
      "trigger": "style.alignItems = 'center'\tStyle CSS",
      "contents": "style.alignItems = 'center'"
    },
    {
      "trigger": "alignItems = 'center'\tStyle CSS",
      "contents": "alignItems = 'center'"
    },
    {
      "trigger": "style.alignItems = 'flex-start'\tStyle CSS",
      "contents": "style.alignItems = 'flex-start'"
    },
    {
      "trigger": "alignItems = 'flex-start'\tStyle CSS",
      "contents": "alignItems = 'flex-start'"
    },
    {
      "trigger": "style.alignItems = 'flex-end'\tStyle CSS",
      "contents": "style.alignItems = 'flex-end'"
    },
    {
      "trigger": "alignItems = 'flex-end'\tStyle CSS",
      "contents": "alignItems = 'flex-end'"
    },
    {
      "trigger": "style.alignItems = 'baseline'\tStyle CSS",
      "contents": "style.alignItems = 'baseline'"
    },
    {
      "trigger": "alignItems = 'baseline'\tStyle CSS",
      "contents": "alignItems = 'baseline'"
    },
    {
      "trigger": "style.alignItems = 'initial'\tStyle CSS",
      "contents": "style.alignItems = 'initial'"
    },
    {
      "trigger": "alignItems = 'initial'\tStyle CSS",
      "contents": "alignItems = 'initial'"
    },
    {
      "trigger": "style.alignItems = 'inherit'\tStyle CSS",
      "contents": "style.alignItems = 'inherit'"
    },
    {
      "trigger": "alignItems = 'inherit'\tStyle CSS",
      "contents": "alignItems = 'inherit'"
    },
    {
      "trigger": "style.alignSelf\tStyle CSS",
      "contents": "style.alignSelf"
    },
    {
      "trigger": "alignSelf\tStyle CSS",
      "contents": "alignSelf"
    },
    {
      "trigger": "style.alignSelf = '$0'\tStyle CSS",
      "contents": "style.alignSelf = '$0'"
    },
    {
      "trigger": "alignSelf = '$0'\tStyle CSS",
      "contents": "alignSelf = '$0'"
    },
    {
      "trigger": "style.alignSelf = 'auto'\tStyle CSS",
      "contents": "style.alignSelf = 'auto'"
    },
    {
      "trigger": "alignSelf = 'auto'\tStyle CSS",
      "contents": "alignSelf = 'auto'"
    },
    {
      "trigger": "style.alignSelf = 'stretch'\tStyle CSS",
      "contents": "style.alignSelf = 'stretch'"
    },
    {
      "trigger": "alignSelf = 'stretch'\tStyle CSS",
      "contents": "alignSelf = 'stretch'"
    },
    {
      "trigger": "style.alignSelf = 'center'\tStyle CSS",
      "contents": "style.alignSelf = 'center'"
    },
    {
      "trigger": "alignSelf = 'center'\tStyle CSS",
      "contents": "alignSelf = 'center'"
    },
    {
      "trigger": "style.alignSelf = 'flex-start'\tStyle CSS",
      "contents": "style.alignSelf = 'flex-start'"
    },
    {
      "trigger": "alignSelf = 'flex-start'\tStyle CSS",
      "contents": "alignSelf = 'flex-start'"
    },
    {
      "trigger": "style.alignSelf = 'flex-end'\tStyle CSS",
      "contents": "style.alignSelf = 'flex-end'"
    },
    {
      "trigger": "alignSelf = 'flex-end'\tStyle CSS",
      "contents": "alignSelf = 'flex-end'"
    },
    {
      "trigger": "style.alignSelf = 'baseline'\tStyle CSS",
      "contents": "style.alignSelf = 'baseline'"
    },
    {
      "trigger": "alignSelf = 'baseline'\tStyle CSS",
      "contents": "alignSelf = 'baseline'"
    },
    {
      "trigger": "style.alignSelf = 'initial'\tStyle CSS",
      "contents": "style.alignSelf = 'initial'"
    },
    {
      "trigger": "alignSelf = 'initial'\tStyle CSS",
      "contents": "alignSelf = 'initial'"
    },
    {
      "trigger": "style.alignSelf = 'inherit'\tStyle CSS",
      "contents": "style.alignSelf = 'inherit'"
    },
    {
      "trigger": "alignSelf = 'inherit'\tStyle CSS",
      "contents": "alignSelf = 'inherit'"
    },
    {
      "trigger": "style.animation\tStyle CSS",
      "contents": "style.animation"
    },
    {
      "trigger": "animation\tStyle CSS",
      "contents": "animation"
    },
    {
      "trigger": "style.animation = '$0'\tStyle CSS",
      "contents": "style.animation = '$0'"
    },
    {
      "trigger": "animation = '$0'\tStyle CSS",
      "contents": "animation = '$0'"
    },
    {
      "trigger": "style.animation = 'initial'\tStyle CSS",
      "contents": "style.animation = 'initial'"
    },
    {
      "trigger": "animation = 'initial'\tStyle CSS",
      "contents": "animation = 'initial'"
    },
    {
      "trigger": "style.animation = 'inherit'\tStyle CSS",
      "contents": "style.animation = 'inherit'"
    },
    {
      "trigger": "animation = 'inherit'\tStyle CSS",
      "contents": "animation = 'inherit'"
    },
    {
      "trigger": "style.animationDelay\tStyle CSS",
      "contents": "style.animationDelay"
    },
    {
      "trigger": "animationDelay\tStyle CSS",
      "contents": "animationDelay"
    },
    {
      "trigger": "style.animationDelay = '$0'\tStyle CSS",
      "contents": "style.animationDelay = '$0'"
    },
    {
      "trigger": "animationDelay = '$0'\tStyle CSS",
      "contents": "animationDelay = '$0'"
    },
    {
      "trigger": "style.animationDelay = 'initial'\tStyle CSS",
      "contents": "style.animationDelay = 'initial'"
    },
    {
      "trigger": "animationDelay = 'initial'\tStyle CSS",
      "contents": "animationDelay = 'initial'"
    },
    {
      "trigger": "style.animationDelay = 'inherit'\tStyle CSS",
      "contents": "style.animationDelay = 'inherit'"
    },
    {
      "trigger": "animationDelay = 'inherit'\tStyle CSS",
      "contents": "animationDelay = 'inherit'"
    },
    {
      "trigger": "style.animationDirection\tStyle CSS",
      "contents": "style.animationDirection"
    },
    {
      "trigger": "animationDirection\tStyle CSS",
      "contents": "animationDirection"
    },
    {
      "trigger": "style.animationDirection = '$0'\tStyle CSS",
      "contents": "style.animationDirection = '$0'"
    },
    {
      "trigger": "animationDirection = '$0'\tStyle CSS",
      "contents": "animationDirection = '$0'"
    },
    {
      "trigger": "style.animationDirection = 'normal'\tStyle CSS",
      "contents": "style.animationDirection = 'normal'"
    },
    {
      "trigger": "animationDirection = 'normal'\tStyle CSS",
      "contents": "animationDirection = 'normal'"
    },
    {
      "trigger": "style.animationDirection = 'reverse'\tStyle CSS",
      "contents": "style.animationDirection = 'reverse'"
    },
    {
      "trigger": "animationDirection = 'reverse'\tStyle CSS",
      "contents": "animationDirection = 'reverse'"
    },
    {
      "trigger": "style.animationDirection = 'alternate'\tStyle CSS",
      "contents": "style.animationDirection = 'alternate'"
    },
    {
      "trigger": "animationDirection = 'alternate'\tStyle CSS",
      "contents": "animationDirection = 'alternate'"
    },
    {
      "trigger": "style.animationDirection = 'alternate-reverse'\tStyle CSS",
      "contents": "style.animationDirection = 'alternate-reverse'"
    },
    {
      "trigger": "animationDirection = 'alternate-reverse'\tStyle CSS",
      "contents": "animationDirection = 'alternate-reverse'"
    },
    {
      "trigger": "style.animationDirection = 'initial'\tStyle CSS",
      "contents": "style.animationDirection = 'initial'"
    },
    {
      "trigger": "animationDirection = 'initial'\tStyle CSS",
      "contents": "animationDirection = 'initial'"
    },
    {
      "trigger": "style.animationDirection = 'inherit'\tStyle CSS",
      "contents": "style.animationDirection = 'inherit'"
    },
    {
      "trigger": "animationDirection = 'inherit'\tStyle CSS",
      "contents": "animationDirection = 'inherit'"
    },
    {
      "trigger": "style.animationDuration\tStyle CSS",
      "contents": "style.animationDuration"
    },
    {
      "trigger": "animationDuration\tStyle CSS",
      "contents": "animationDuration"
    },
    {
      "trigger": "style.animationDuration = '$0'\tStyle CSS",
      "contents": "style.animationDuration = '$0'"
    },
    {
      "trigger": "animationDuration = '$0'\tStyle CSS",
      "contents": "animationDuration = '$0'"
    },
    {
      "trigger": "style.animationDuration = 'initial'\tStyle CSS",
      "contents": "style.animationDuration = 'initial'"
    },
    {
      "trigger": "animationDuration = 'initial'\tStyle CSS",
      "contents": "animationDuration = 'initial'"
    },
    {
      "trigger": "style.animationDuration = 'inherit'\tStyle CSS",
      "contents": "style.animationDuration = 'inherit'"
    },
    {
      "trigger": "animationDuration = 'inherit'\tStyle CSS",
      "contents": "animationDuration = 'inherit'"
    },
    {
      "trigger": "style.animationFillMode\tStyle CSS",
      "contents": "style.animationFillMode"
    },
    {
      "trigger": "animationFillMode\tStyle CSS",
      "contents": "animationFillMode"
    },
    {
      "trigger": "style.animationFillMode = '$0'\tStyle CSS",
      "contents": "style.animationFillMode = '$0'"
    },
    {
      "trigger": "animationFillMode = '$0'\tStyle CSS",
      "contents": "animationFillMode = '$0'"
    },
    {
      "trigger": "style.animationFillMode = 'none'\tStyle CSS",
      "contents": "style.animationFillMode = 'none'"
    },
    {
      "trigger": "animationFillMode = 'none'\tStyle CSS",
      "contents": "animationFillMode = 'none'"
    },
    {
      "trigger": "style.animationFillMode = 'forwards'\tStyle CSS",
      "contents": "style.animationFillMode = 'forwards'"
    },
    {
      "trigger": "animationFillMode = 'forwards'\tStyle CSS",
      "contents": "animationFillMode = 'forwards'"
    },
    {
      "trigger": "style.animationFillMode = 'backwards'\tStyle CSS",
      "contents": "style.animationFillMode = 'backwards'"
    },
    {
      "trigger": "animationFillMode = 'backwards'\tStyle CSS",
      "contents": "animationFillMode = 'backwards'"
    },
    {
      "trigger": "style.animationFillMode = 'both'\tStyle CSS",
      "contents": "style.animationFillMode = 'both'"
    },
    {
      "trigger": "animationFillMode = 'both'\tStyle CSS",
      "contents": "animationFillMode = 'both'"
    },
    {
      "trigger": "style.animationFillMode = 'initial'\tStyle CSS",
      "contents": "style.animationFillMode = 'initial'"
    },
    {
      "trigger": "animationFillMode = 'initial'\tStyle CSS",
      "contents": "animationFillMode = 'initial'"
    },
    {
      "trigger": "style.animationFillMode = 'inherit'\tStyle CSS",
      "contents": "style.animationFillMode = 'inherit'"
    },
    {
      "trigger": "animationFillMode = 'inherit'\tStyle CSS",
      "contents": "animationFillMode = 'inherit'"
    },
    {
      "trigger": "style.animationIterationCount\tStyle CSS",
      "contents": "style.animationIterationCount"
    },
    {
      "trigger": "animationIterationCount\tStyle CSS",
      "contents": "animationIterationCount"
    },
    {
      "trigger": "style.animationIterationCount = '$0'\tStyle CSS",
      "contents": "style.animationIterationCount = '$0'"
    },
    {
      "trigger": "animationIterationCount = '$0'\tStyle CSS",
      "contents": "animationIterationCount = '$0'"
    },
    {
      "trigger": "style.animationIterationCount = '1$0'\tStyle CSS",
      "contents": "style.animationIterationCount = '1$0'"
    },
    {
      "trigger": "animationIterationCount = '1$0'\tStyle CSS",
      "contents": "animationIterationCount = '1$0'"
    },
    {
      "trigger": "style.animationIterationCount = 'infinite'\tStyle CSS",
      "contents": "style.animationIterationCount = 'infinite'"
    },
    {
      "trigger": "animationIterationCount = 'infinite'\tStyle CSS",
      "contents": "animationIterationCount = 'infinite'"
    },
    {
      "trigger": "style.animationIterationCount = 'initial'\tStyle CSS",
      "contents": "style.animationIterationCount = 'initial'"
    },
    {
      "trigger": "animationIterationCount = 'initial'\tStyle CSS",
      "contents": "animationIterationCount = 'initial'"
    },
    {
      "trigger": "style.animationIterationCount = 'inherit'\tStyle CSS",
      "contents": "style.animationIterationCount = 'inherit'"
    },
    {
      "trigger": "animationIterationCount = 'inherit'\tStyle CSS",
      "contents": "animationIterationCount = 'inherit'"
    },
    {
      "trigger": "style.animationName\tStyle CSS",
      "contents": "style.animationName"
    },
    {
      "trigger": "animationName\tStyle CSS",
      "contents": "animationName"
    },
    {
      "trigger": "style.animationName = '$0'\tStyle CSS",
      "contents": "style.animationName = '$0'"
    },
    {
      "trigger": "animationName = '$0'\tStyle CSS",
      "contents": "animationName = '$0'"
    },
    {
      "trigger": "style.animationName = 'none'\tStyle CSS",
      "contents": "style.animationName = 'none'"
    },
    {
      "trigger": "animationName = 'none'\tStyle CSS",
      "contents": "animationName = 'none'"
    },
    {
      "trigger": "style.animationName = 'initial'\tStyle CSS",
      "contents": "style.animationName = 'initial'"
    },
    {
      "trigger": "animationName = 'initial'\tStyle CSS",
      "contents": "animationName = 'initial'"
    },
    {
      "trigger": "style.animationName = 'inherit'\tStyle CSS",
      "contents": "style.animationName = 'inherit'"
    },
    {
      "trigger": "animationName = 'inherit'\tStyle CSS",
      "contents": "animationName = 'inherit'"
    },
    {
      "trigger": "style.animationTimingFunction\tStyle CSS",
      "contents": "style.animationTimingFunction"
    },
    {
      "trigger": "animationTimingFunction\tStyle CSS",
      "contents": "animationTimingFunction"
    },
    {
      "trigger": "style.animationTimingFunction = '$0'\tStyle CSS",
      "contents": "style.animationTimingFunction = '$0'"
    },
    {
      "trigger": "animationTimingFunction = '$0'\tStyle CSS",
      "contents": "animationTimingFunction = '$0'"
    },
    {
      "trigger": "style.animationTimingFunction = 'linear'\tStyle CSS",
      "contents": "style.animationTimingFunction = 'linear'"
    },
    {
      "trigger": "animationTimingFunction = 'linear'\tStyle CSS",
      "contents": "animationTimingFunction = 'linear'"
    },
    {
      "trigger": "style.animationTimingFunction = 'ease'\tStyle CSS",
      "contents": "style.animationTimingFunction = 'ease'"
    },
    {
      "trigger": "animationTimingFunction = 'ease'\tStyle CSS",
      "contents": "animationTimingFunction = 'ease'"
    },
    {
      "trigger": "style.animationTimingFunction = 'ease-in'\tStyle CSS",
      "contents": "style.animationTimingFunction = 'ease-in'"
    },
    {
      "trigger": "animationTimingFunction = 'ease-in'\tStyle CSS",
      "contents": "animationTimingFunction = 'ease-in'"
    },
    {
      "trigger": "style.animationTimingFunction = 'ease-out'\tStyle CSS",
      "contents": "style.animationTimingFunction = 'ease-out'"
    },
    {
      "trigger": "animationTimingFunction = 'ease-out'\tStyle CSS",
      "contents": "animationTimingFunction = 'ease-out'"
    },
    {
      "trigger": "style.animationTimingFunction = 'ease-in-out'\tStyle CSS",
      "contents": "style.animationTimingFunction = 'ease-in-out'"
    },
    {
      "trigger": "animationTimingFunction = 'ease-in-out'\tStyle CSS",
      "contents": "animationTimingFunction = 'ease-in-out'"
    },
    {
      "trigger": "style.animationTimingFunction = 'cubic-bezier($0n,n,n,n)'\tStyle CSS",
      "contents": "style.animationTimingFunction = 'cubic-bezier($0n,n,n,n)'"
    },
    {
      "trigger": "animationTimingFunction = 'cubic-bezier($0n,n,n,n)'\tStyle CSS",
      "contents": "animationTimingFunction = 'cubic-bezier($0n,n,n,n)'"
    },
    {
      "trigger": "style.animationTimingFunction = 'initial'\tStyle CSS",
      "contents": "style.animationTimingFunction = 'initial'"
    },
    {
      "trigger": "animationTimingFunction = 'initial'\tStyle CSS",
      "contents": "animationTimingFunction = 'initial'"
    },
    {
      "trigger": "style.animationTimingFunction = 'inherit'\tStyle CSS",
      "contents": "style.animationTimingFunction = 'inherit'"
    },
    {
      "trigger": "animationTimingFunction = 'inherit'\tStyle CSS",
      "contents": "animationTimingFunction = 'inherit'"
    },
    {
      "trigger": "style.animationPlayState\tStyle CSS",
      "contents": "style.animationPlayState"
    },
    {
      "trigger": "animationPlayState\tStyle CSS",
      "contents": "animationPlayState"
    },
    {
      "trigger": "style.animationPlayState = '$0'\tStyle CSS",
      "contents": "style.animationPlayState = '$0'"
    },
    {
      "trigger": "animationPlayState = '$0'\tStyle CSS",
      "contents": "animationPlayState = '$0'"
    },
    {
      "trigger": "style.animationPlayState = 'running'\tStyle CSS",
      "contents": "style.animationPlayState = 'running'"
    },
    {
      "trigger": "animationPlayState = 'running'\tStyle CSS",
      "contents": "animationPlayState = 'running'"
    },
    {
      "trigger": "style.animationPlayState = 'paused'\tStyle CSS",
      "contents": "style.animationPlayState = 'paused'"
    },
    {
      "trigger": "animationPlayState = 'paused'\tStyle CSS",
      "contents": "animationPlayState = 'paused'"
    },
    {
      "trigger": "style.animationPlayState = 'initial'\tStyle CSS",
      "contents": "style.animationPlayState = 'initial'"
    },
    {
      "trigger": "animationPlayState = 'initial'\tStyle CSS",
      "contents": "animationPlayState = 'initial'"
    },
    {
      "trigger": "style.animationPlayState = 'inherit'\tStyle CSS",
      "contents": "style.animationPlayState = 'inherit'"
    },
    {
      "trigger": "animationPlayState = 'inherit'\tStyle CSS",
      "contents": "animationPlayState = 'inherit'"
    },
    {
      "trigger": "style.background\tStyle CSS",
      "contents": "style.background"
    },
    {
      "trigger": "background\tStyle CSS",
      "contents": "background"
    },
    {
      "trigger": "style.background = '$0'\tStyle CSS",
      "contents": "style.background = '$0'"
    },
    {
      "trigger": "background = '$0'\tStyle CSS",
      "contents": "background = '$0'"
    },
    {
      "trigger": "style.background = 'initial'\tStyle CSS",
      "contents": "style.background = 'initial'"
    },
    {
      "trigger": "background = 'initial'\tStyle CSS",
      "contents": "background = 'initial'"
    },
    {
      "trigger": "style.background = 'inherit'\tStyle CSS",
      "contents": "style.background = 'inherit'"
    },
    {
      "trigger": "background = 'inherit'\tStyle CSS",
      "contents": "background = 'inherit'"
    },
    {
      "trigger": "style.backgroundAttachment\tStyle CSS",
      "contents": "style.backgroundAttachment"
    },
    {
      "trigger": "backgroundAttachment\tStyle CSS",
      "contents": "backgroundAttachment"
    },
    {
      "trigger": "style.backgroundAttachment = '$0'\tStyle CSS",
      "contents": "style.backgroundAttachment = '$0'"
    },
    {
      "trigger": "backgroundAttachment = '$0'\tStyle CSS",
      "contents": "backgroundAttachment = '$0'"
    },
    {
      "trigger": "style.backgroundAttachment = 'scroll'\tStyle CSS",
      "contents": "style.backgroundAttachment = 'scroll'"
    },
    {
      "trigger": "backgroundAttachment = 'scroll'\tStyle CSS",
      "contents": "backgroundAttachment = 'scroll'"
    },
    {
      "trigger": "style.backgroundAttachment = 'fixed'\tStyle CSS",
      "contents": "style.backgroundAttachment = 'fixed'"
    },
    {
      "trigger": "backgroundAttachment = 'fixed'\tStyle CSS",
      "contents": "backgroundAttachment = 'fixed'"
    },
    {
      "trigger": "style.backgroundAttachment = 'local'\tStyle CSS",
      "contents": "style.backgroundAttachment = 'local'"
    },
    {
      "trigger": "backgroundAttachment = 'local'\tStyle CSS",
      "contents": "backgroundAttachment = 'local'"
    },
    {
      "trigger": "style.backgroundAttachment = 'initial'\tStyle CSS",
      "contents": "style.backgroundAttachment = 'initial'"
    },
    {
      "trigger": "backgroundAttachment = 'initial'\tStyle CSS",
      "contents": "backgroundAttachment = 'initial'"
    },
    {
      "trigger": "style.backgroundAttachment = 'inherit'\tStyle CSS",
      "contents": "style.backgroundAttachment = 'inherit'"
    },
    {
      "trigger": "backgroundAttachment = 'inherit'\tStyle CSS",
      "contents": "backgroundAttachment = 'inherit'"
    },
    {
      "trigger": "style.backgroundColor\tStyle CSS",
      "contents": "style.backgroundColor"
    },
    {
      "trigger": "backgroundColor\tStyle CSS",
      "contents": "backgroundColor"
    },
    {
      "trigger": "style.backgroundColor = '$0'\tStyle CSS",
      "contents": "style.backgroundColor = '$0'"
    },
    {
      "trigger": "backgroundColor = '$0'\tStyle CSS",
      "contents": "backgroundColor = '$0'"
    },
    {
      "trigger": "style.backgroundColor = 'transparent'\tStyle CSS",
      "contents": "style.backgroundColor = 'transparent'"
    },
    {
      "trigger": "backgroundColor = 'transparent'\tStyle CSS",
      "contents": "backgroundColor = 'transparent'"
    },
    {
      "trigger": "style.backgroundColor = 'initial'\tStyle CSS",
      "contents": "style.backgroundColor = 'initial'"
    },
    {
      "trigger": "backgroundColor = 'initial'\tStyle CSS",
      "contents": "backgroundColor = 'initial'"
    },
    {
      "trigger": "style.backgroundColor = 'inherit'\tStyle CSS",
      "contents": "style.backgroundColor = 'inherit'"
    },
    {
      "trigger": "backgroundColor = 'inherit'\tStyle CSS",
      "contents": "backgroundColor = 'inherit'"
    },
    {
      "trigger": "style.backgroundImage\tStyle CSS",
      "contents": "style.backgroundImage"
    },
    {
      "trigger": "backgroundImage\tStyle CSS",
      "contents": "backgroundImage"
    },
    {
      "trigger": "style.backgroundImage = '$0'\tStyle CSS",
      "contents": "style.backgroundImage = '$0'"
    },
    {
      "trigger": "backgroundImage = '$0'\tStyle CSS",
      "contents": "backgroundImage = '$0'"
    },
    {
      "trigger": "style.backgroundImage = 'url($0)'\tStyle CSS",
      "contents": "style.backgroundImage = 'url($0)'"
    },
    {
      "trigger": "backgroundImage = 'url($0)'\tStyle CSS",
      "contents": "backgroundImage = 'url($0)'"
    },
    {
      "trigger": "style.backgroundImage = 'none'\tStyle CSS",
      "contents": "style.backgroundImage = 'none'"
    },
    {
      "trigger": "backgroundImage = 'none'\tStyle CSS",
      "contents": "backgroundImage = 'none'"
    },
    {
      "trigger": "style.backgroundImage = 'initial'\tStyle CSS",
      "contents": "style.backgroundImage = 'initial'"
    },
    {
      "trigger": "backgroundImage = 'initial'\tStyle CSS",
      "contents": "backgroundImage = 'initial'"
    },
    {
      "trigger": "style.backgroundImage = 'inherit'\tStyle CSS",
      "contents": "style.backgroundImage = 'inherit'"
    },
    {
      "trigger": "backgroundImage = 'inherit'\tStyle CSS",
      "contents": "backgroundImage = 'inherit'"
    },
    {
      "trigger": "style.backgroundPosition\tStyle CSS",
      "contents": "style.backgroundPosition"
    },
    {
      "trigger": "backgroundPosition\tStyle CSS",
      "contents": "backgroundPosition"
    },
    {
      "trigger": "style.backgroundPosition = '$0'\tStyle CSS",
      "contents": "style.backgroundPosition = '$0'"
    },
    {
      "trigger": "backgroundPosition = '$0'\tStyle CSS",
      "contents": "backgroundPosition = '$0'"
    },
    {
      "trigger": "style.backgroundPosition = 'top left'\tStyle CSS",
      "contents": "style.backgroundPosition = 'top left'"
    },
    {
      "trigger": "backgroundPosition = 'top left'\tStyle CSS",
      "contents": "backgroundPosition = 'top left'"
    },
    {
      "trigger": "style.backgroundPosition = 'top center'\tStyle CSS",
      "contents": "style.backgroundPosition = 'top center'"
    },
    {
      "trigger": "backgroundPosition = 'top center'\tStyle CSS",
      "contents": "backgroundPosition = 'top center'"
    },
    {
      "trigger": "style.backgroundPosition = 'top right'\tStyle CSS",
      "contents": "style.backgroundPosition = 'top right'"
    },
    {
      "trigger": "backgroundPosition = 'top right'\tStyle CSS",
      "contents": "backgroundPosition = 'top right'"
    },
    {
      "trigger": "style.backgroundPosition = 'center left'\tStyle CSS",
      "contents": "style.backgroundPosition = 'center left'"
    },
    {
      "trigger": "backgroundPosition = 'center left'\tStyle CSS",
      "contents": "backgroundPosition = 'center left'"
    },
    {
      "trigger": "style.backgroundPosition = 'center center'\tStyle CSS",
      "contents": "style.backgroundPosition = 'center center'"
    },
    {
      "trigger": "backgroundPosition = 'center center'\tStyle CSS",
      "contents": "backgroundPosition = 'center center'"
    },
    {
      "trigger": "style.backgroundPosition = 'center right'\tStyle CSS",
      "contents": "style.backgroundPosition = 'center right'"
    },
    {
      "trigger": "backgroundPosition = 'center right'\tStyle CSS",
      "contents": "backgroundPosition = 'center right'"
    },
    {
      "trigger": "style.backgroundPosition = 'bottom left'\tStyle CSS",
      "contents": "style.backgroundPosition = 'bottom left'"
    },
    {
      "trigger": "backgroundPosition = 'bottom left'\tStyle CSS",
      "contents": "backgroundPosition = 'bottom left'"
    },
    {
      "trigger": "style.backgroundPosition = 'bottom center'\tStyle CSS",
      "contents": "style.backgroundPosition = 'bottom center'"
    },
    {
      "trigger": "backgroundPosition = 'bottom center'\tStyle CSS",
      "contents": "backgroundPosition = 'bottom center'"
    },
    {
      "trigger": "style.backgroundPosition = 'bottom right'\tStyle CSS",
      "contents": "style.backgroundPosition = 'bottom right'"
    },
    {
      "trigger": "backgroundPosition = 'bottom right'\tStyle CSS",
      "contents": "backgroundPosition = 'bottom right'"
    },
    {
      "trigger": "style.backgroundPosition = 'initial'\tStyle CSS",
      "contents": "style.backgroundPosition = 'initial'"
    },
    {
      "trigger": "backgroundPosition = 'initial'\tStyle CSS",
      "contents": "backgroundPosition = 'initial'"
    },
    {
      "trigger": "style.backgroundPosition = 'inherit'\tStyle CSS",
      "contents": "style.backgroundPosition = 'inherit'"
    },
    {
      "trigger": "backgroundPosition = 'inherit'\tStyle CSS",
      "contents": "backgroundPosition = 'inherit'"
    },
    {
      "trigger": "style.backgroundRepeat\tStyle CSS",
      "contents": "style.backgroundRepeat"
    },
    {
      "trigger": "backgroundRepeat\tStyle CSS",
      "contents": "backgroundRepeat"
    },
    {
      "trigger": "style.backgroundRepeat = '$0'\tStyle CSS",
      "contents": "style.backgroundRepeat = '$0'"
    },
    {
      "trigger": "backgroundRepeat = '$0'\tStyle CSS",
      "contents": "backgroundRepeat = '$0'"
    },
    {
      "trigger": "style.backgroundRepeat = 'repeat'\tStyle CSS",
      "contents": "style.backgroundRepeat = 'repeat'"
    },
    {
      "trigger": "backgroundRepeat = 'repeat'\tStyle CSS",
      "contents": "backgroundRepeat = 'repeat'"
    },
    {
      "trigger": "style.backgroundRepeat = 'repeat-x'\tStyle CSS",
      "contents": "style.backgroundRepeat = 'repeat-x'"
    },
    {
      "trigger": "backgroundRepeat = 'repeat-x'\tStyle CSS",
      "contents": "backgroundRepeat = 'repeat-x'"
    },
    {
      "trigger": "style.backgroundRepeat = 'repeat-y'\tStyle CSS",
      "contents": "style.backgroundRepeat = 'repeat-y'"
    },
    {
      "trigger": "backgroundRepeat = 'repeat-y'\tStyle CSS",
      "contents": "backgroundRepeat = 'repeat-y'"
    },
    {
      "trigger": "style.backgroundRepeat = 'no-repeat'\tStyle CSS",
      "contents": "style.backgroundRepeat = 'no-repeat'"
    },
    {
      "trigger": "backgroundRepeat = 'no-repeat'\tStyle CSS",
      "contents": "backgroundRepeat = 'no-repeat'"
    },
    {
      "trigger": "style.backgroundRepeat = 'initial'\tStyle CSS",
      "contents": "style.backgroundRepeat = 'initial'"
    },
    {
      "trigger": "backgroundRepeat = 'initial'\tStyle CSS",
      "contents": "backgroundRepeat = 'initial'"
    },
    {
      "trigger": "style.backgroundRepeat = 'inherit'\tStyle CSS",
      "contents": "style.backgroundRepeat = 'inherit'"
    },
    {
      "trigger": "backgroundRepeat = 'inherit'\tStyle CSS",
      "contents": "backgroundRepeat = 'inherit'"
    },
    {
      "trigger": "style.backgroundClip\tStyle CSS",
      "contents": "style.backgroundClip"
    },
    {
      "trigger": "backgroundClip\tStyle CSS",
      "contents": "backgroundClip"
    },
    {
      "trigger": "style.backgroundClip = '$0'\tStyle CSS",
      "contents": "style.backgroundClip = '$0'"
    },
    {
      "trigger": "backgroundClip = '$0'\tStyle CSS",
      "contents": "backgroundClip = '$0'"
    },
    {
      "trigger": "style.backgroundClip = 'border-box'\tStyle CSS",
      "contents": "style.backgroundClip = 'border-box'"
    },
    {
      "trigger": "backgroundClip = 'border-box'\tStyle CSS",
      "contents": "backgroundClip = 'border-box'"
    },
    {
      "trigger": "style.backgroundClip = 'padding-box'\tStyle CSS",
      "contents": "style.backgroundClip = 'padding-box'"
    },
    {
      "trigger": "backgroundClip = 'padding-box'\tStyle CSS",
      "contents": "backgroundClip = 'padding-box'"
    },
    {
      "trigger": "style.backgroundClip = 'content-box'\tStyle CSS",
      "contents": "style.backgroundClip = 'content-box'"
    },
    {
      "trigger": "backgroundClip = 'content-box'\tStyle CSS",
      "contents": "backgroundClip = 'content-box'"
    },
    {
      "trigger": "style.backgroundClip = 'initial'\tStyle CSS",
      "contents": "style.backgroundClip = 'initial'"
    },
    {
      "trigger": "backgroundClip = 'initial'\tStyle CSS",
      "contents": "backgroundClip = 'initial'"
    },
    {
      "trigger": "style.backgroundClip = 'inherit'\tStyle CSS",
      "contents": "style.backgroundClip = 'inherit'"
    },
    {
      "trigger": "backgroundClip = 'inherit'\tStyle CSS",
      "contents": "backgroundClip = 'inherit'"
    },
    {
      "trigger": "style.backgroundOrigin\tStyle CSS",
      "contents": "style.backgroundOrigin"
    },
    {
      "trigger": "backgroundOrigin\tStyle CSS",
      "contents": "backgroundOrigin"
    },
    {
      "trigger": "style.backgroundOrigin = '$0'\tStyle CSS",
      "contents": "style.backgroundOrigin = '$0'"
    },
    {
      "trigger": "backgroundOrigin = '$0'\tStyle CSS",
      "contents": "backgroundOrigin = '$0'"
    },
    {
      "trigger": "style.backgroundOrigin = 'padding-box'\tStyle CSS",
      "contents": "style.backgroundOrigin = 'padding-box'"
    },
    {
      "trigger": "backgroundOrigin = 'padding-box'\tStyle CSS",
      "contents": "backgroundOrigin = 'padding-box'"
    },
    {
      "trigger": "style.backgroundOrigin = 'border-box'\tStyle CSS",
      "contents": "style.backgroundOrigin = 'border-box'"
    },
    {
      "trigger": "backgroundOrigin = 'border-box'\tStyle CSS",
      "contents": "backgroundOrigin = 'border-box'"
    },
    {
      "trigger": "style.backgroundOrigin = 'content-box'\tStyle CSS",
      "contents": "style.backgroundOrigin = 'content-box'"
    },
    {
      "trigger": "backgroundOrigin = 'content-box'\tStyle CSS",
      "contents": "backgroundOrigin = 'content-box'"
    },
    {
      "trigger": "style.backgroundOrigin = 'initial'\tStyle CSS",
      "contents": "style.backgroundOrigin = 'initial'"
    },
    {
      "trigger": "backgroundOrigin = 'initial'\tStyle CSS",
      "contents": "backgroundOrigin = 'initial'"
    },
    {
      "trigger": "style.backgroundOrigin = 'inherit'\tStyle CSS",
      "contents": "style.backgroundOrigin = 'inherit'"
    },
    {
      "trigger": "backgroundOrigin = 'inherit'\tStyle CSS",
      "contents": "backgroundOrigin = 'inherit'"
    },
    {
      "trigger": "style.backgroundSize\tStyle CSS",
      "contents": "style.backgroundSize"
    },
    {
      "trigger": "backgroundSize\tStyle CSS",
      "contents": "backgroundSize"
    },
    {
      "trigger": "style.backgroundSize = '$0'\tStyle CSS",
      "contents": "style.backgroundSize = '$0'"
    },
    {
      "trigger": "backgroundSize = '$0'\tStyle CSS",
      "contents": "backgroundSize = '$0'"
    },
    {
      "trigger": "style.backgroundSize = 'auto'\tStyle CSS",
      "contents": "style.backgroundSize = 'auto'"
    },
    {
      "trigger": "backgroundSize = 'auto'\tStyle CSS",
      "contents": "backgroundSize = 'auto'"
    },
    {
      "trigger": "style.backgroundSize = 'cover'\tStyle CSS",
      "contents": "style.backgroundSize = 'cover'"
    },
    {
      "trigger": "backgroundSize = 'cover'\tStyle CSS",
      "contents": "backgroundSize = 'cover'"
    },
    {
      "trigger": "style.backgroundSize = 'contain'\tStyle CSS",
      "contents": "style.backgroundSize = 'contain'"
    },
    {
      "trigger": "backgroundSize = 'contain'\tStyle CSS",
      "contents": "backgroundSize = 'contain'"
    },
    {
      "trigger": "style.backgroundSize = 'initial'\tStyle CSS",
      "contents": "style.backgroundSize = 'initial'"
    },
    {
      "trigger": "backgroundSize = 'initial'\tStyle CSS",
      "contents": "backgroundSize = 'initial'"
    },
    {
      "trigger": "style.backgroundSize = 'inherit'\tStyle CSS",
      "contents": "style.backgroundSize = 'inherit'"
    },
    {
      "trigger": "backgroundSize = 'inherit'\tStyle CSS",
      "contents": "backgroundSize = 'inherit'"
    },
    {
      "trigger": "style.backfaceVisibility\tStyle CSS",
      "contents": "style.backfaceVisibility"
    },
    {
      "trigger": "backfaceVisibility\tStyle CSS",
      "contents": "backfaceVisibility"
    },
    {
      "trigger": "style.backfaceVisibility = '$0'\tStyle CSS",
      "contents": "style.backfaceVisibility = '$0'"
    },
    {
      "trigger": "backfaceVisibility = '$0'\tStyle CSS",
      "contents": "backfaceVisibility = '$0'"
    },
    {
      "trigger": "style.backfaceVisibility = 'visible'\tStyle CSS",
      "contents": "style.backfaceVisibility = 'visible'"
    },
    {
      "trigger": "backfaceVisibility = 'visible'\tStyle CSS",
      "contents": "backfaceVisibility = 'visible'"
    },
    {
      "trigger": "style.backfaceVisibility = 'hidden'\tStyle CSS",
      "contents": "style.backfaceVisibility = 'hidden'"
    },
    {
      "trigger": "backfaceVisibility = 'hidden'\tStyle CSS",
      "contents": "backfaceVisibility = 'hidden'"
    },
    {
      "trigger": "style.backfaceVisibility = 'initial'\tStyle CSS",
      "contents": "style.backfaceVisibility = 'initial'"
    },
    {
      "trigger": "backfaceVisibility = 'initial'\tStyle CSS",
      "contents": "backfaceVisibility = 'initial'"
    },
    {
      "trigger": "style.backfaceVisibility = 'inherit'\tStyle CSS",
      "contents": "style.backfaceVisibility = 'inherit'"
    },
    {
      "trigger": "backfaceVisibility = 'inherit'\tStyle CSS",
      "contents": "backfaceVisibility = 'inherit'"
    },
    {
      "trigger": "style.border\tStyle CSS",
      "contents": "style.border"
    },
    {
      "trigger": "border\tStyle CSS",
      "contents": "border"
    },
    {
      "trigger": "style.border = '$0'\tStyle CSS",
      "contents": "style.border = '$0'"
    },
    {
      "trigger": "border = '$0'\tStyle CSS",
      "contents": "border = '$0'"
    },
    {
      "trigger": "style.border = 'initial'\tStyle CSS",
      "contents": "style.border = 'initial'"
    },
    {
      "trigger": "border = 'initial'\tStyle CSS",
      "contents": "border = 'initial'"
    },
    {
      "trigger": "style.border = 'inherit'\tStyle CSS",
      "contents": "style.border = 'inherit'"
    },
    {
      "trigger": "border = 'inherit'\tStyle CSS",
      "contents": "border = 'inherit'"
    },
    {
      "trigger": "style.borderBottom\tStyle CSS",
      "contents": "style.borderBottom"
    },
    {
      "trigger": "borderBottom\tStyle CSS",
      "contents": "borderBottom"
    },
    {
      "trigger": "style.borderBottom = '$0'\tStyle CSS",
      "contents": "style.borderBottom = '$0'"
    },
    {
      "trigger": "borderBottom = '$0'\tStyle CSS",
      "contents": "borderBottom = '$0'"
    },
    {
      "trigger": "style.borderBottom = 'initial'\tStyle CSS",
      "contents": "style.borderBottom = 'initial'"
    },
    {
      "trigger": "borderBottom = 'initial'\tStyle CSS",
      "contents": "borderBottom = 'initial'"
    },
    {
      "trigger": "style.borderBottom = 'inherit'\tStyle CSS",
      "contents": "style.borderBottom = 'inherit'"
    },
    {
      "trigger": "borderBottom = 'inherit'\tStyle CSS",
      "contents": "borderBottom = 'inherit'"
    },
    {
      "trigger": "style.borderBottomColor\tStyle CSS",
      "contents": "style.borderBottomColor"
    },
    {
      "trigger": "borderBottomColor\tStyle CSS",
      "contents": "borderBottomColor"
    },
    {
      "trigger": "style.borderBottomColor = '$0'\tStyle CSS",
      "contents": "style.borderBottomColor = '$0'"
    },
    {
      "trigger": "borderBottomColor = '$0'\tStyle CSS",
      "contents": "borderBottomColor = '$0'"
    },
    {
      "trigger": "style.borderBottomColor = 'transparent'\tStyle CSS",
      "contents": "style.borderBottomColor = 'transparent'"
    },
    {
      "trigger": "borderBottomColor = 'transparent'\tStyle CSS",
      "contents": "borderBottomColor = 'transparent'"
    },
    {
      "trigger": "style.borderBottomColor = 'initial'\tStyle CSS",
      "contents": "style.borderBottomColor = 'initial'"
    },
    {
      "trigger": "borderBottomColor = 'initial'\tStyle CSS",
      "contents": "borderBottomColor = 'initial'"
    },
    {
      "trigger": "style.borderBottomColor = 'inherit'\tStyle CSS",
      "contents": "style.borderBottomColor = 'inherit'"
    },
    {
      "trigger": "borderBottomColor = 'inherit'\tStyle CSS",
      "contents": "borderBottomColor = 'inherit'"
    },
    {
      "trigger": "style.borderBottomLeftRadius\tStyle CSS",
      "contents": "style.borderBottomLeftRadius"
    },
    {
      "trigger": "borderBottomLeftRadius\tStyle CSS",
      "contents": "borderBottomLeftRadius"
    },
    {
      "trigger": "style.borderBottomLeftRadius = '$0'\tStyle CSS",
      "contents": "style.borderBottomLeftRadius = '$0'"
    },
    {
      "trigger": "borderBottomLeftRadius = '$0'\tStyle CSS",
      "contents": "borderBottomLeftRadius = '$0'"
    },
    {
      "trigger": "style.borderBottomLeftRadius = 'initial'\tStyle CSS",
      "contents": "style.borderBottomLeftRadius = 'initial'"
    },
    {
      "trigger": "borderBottomLeftRadius = 'initial'\tStyle CSS",
      "contents": "borderBottomLeftRadius = 'initial'"
    },
    {
      "trigger": "style.borderBottomLeftRadius = 'inherit'\tStyle CSS",
      "contents": "style.borderBottomLeftRadius = 'inherit'"
    },
    {
      "trigger": "borderBottomLeftRadius = 'inherit'\tStyle CSS",
      "contents": "borderBottomLeftRadius = 'inherit'"
    },
    {
      "trigger": "style.borderBottomRightRadius\tStyle CSS",
      "contents": "style.borderBottomRightRadius"
    },
    {
      "trigger": "borderBottomRightRadius\tStyle CSS",
      "contents": "borderBottomRightRadius"
    },
    {
      "trigger": "style.borderBottomRightRadius = '$0'\tStyle CSS",
      "contents": "style.borderBottomRightRadius = '$0'"
    },
    {
      "trigger": "borderBottomRightRadius = '$0'\tStyle CSS",
      "contents": "borderBottomRightRadius = '$0'"
    },
    {
      "trigger": "style.borderBottomRightRadius = 'initial'\tStyle CSS",
      "contents": "style.borderBottomRightRadius = 'initial'"
    },
    {
      "trigger": "borderBottomRightRadius = 'initial'\tStyle CSS",
      "contents": "borderBottomRightRadius = 'initial'"
    },
    {
      "trigger": "style.borderBottomRightRadius = 'inherit'\tStyle CSS",
      "contents": "style.borderBottomRightRadius = 'inherit'"
    },
    {
      "trigger": "borderBottomRightRadius = 'inherit'\tStyle CSS",
      "contents": "borderBottomRightRadius = 'inherit'"
    },
    {
      "trigger": "style.borderBottomStyle\tStyle CSS",
      "contents": "style.borderBottomStyle"
    },
    {
      "trigger": "borderBottomStyle\tStyle CSS",
      "contents": "borderBottomStyle"
    },
    {
      "trigger": "style.borderBottomStyle = '$0'\tStyle CSS",
      "contents": "style.borderBottomStyle = '$0'"
    },
    {
      "trigger": "borderBottomStyle = '$0'\tStyle CSS",
      "contents": "borderBottomStyle = '$0'"
    },
    {
      "trigger": "style.borderBottomStyle = 'none'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'none'"
    },
    {
      "trigger": "borderBottomStyle = 'none'\tStyle CSS",
      "contents": "borderBottomStyle = 'none'"
    },
    {
      "trigger": "style.borderBottomStyle = 'hidden'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'hidden'"
    },
    {
      "trigger": "borderBottomStyle = 'hidden'\tStyle CSS",
      "contents": "borderBottomStyle = 'hidden'"
    },
    {
      "trigger": "style.borderBottomStyle = 'dotted'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'dotted'"
    },
    {
      "trigger": "borderBottomStyle = 'dotted'\tStyle CSS",
      "contents": "borderBottomStyle = 'dotted'"
    },
    {
      "trigger": "style.borderBottomStyle = 'dashed'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'dashed'"
    },
    {
      "trigger": "borderBottomStyle = 'dashed'\tStyle CSS",
      "contents": "borderBottomStyle = 'dashed'"
    },
    {
      "trigger": "style.borderBottomStyle = 'solid'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'solid'"
    },
    {
      "trigger": "borderBottomStyle = 'solid'\tStyle CSS",
      "contents": "borderBottomStyle = 'solid'"
    },
    {
      "trigger": "style.borderBottomStyle = 'double'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'double'"
    },
    {
      "trigger": "borderBottomStyle = 'double'\tStyle CSS",
      "contents": "borderBottomStyle = 'double'"
    },
    {
      "trigger": "style.borderBottomStyle = 'groove'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'groove'"
    },
    {
      "trigger": "borderBottomStyle = 'groove'\tStyle CSS",
      "contents": "borderBottomStyle = 'groove'"
    },
    {
      "trigger": "style.borderBottomStyle = 'ridge'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'ridge'"
    },
    {
      "trigger": "borderBottomStyle = 'ridge'\tStyle CSS",
      "contents": "borderBottomStyle = 'ridge'"
    },
    {
      "trigger": "style.borderBottomStyle = 'inset'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'inset'"
    },
    {
      "trigger": "borderBottomStyle = 'inset'\tStyle CSS",
      "contents": "borderBottomStyle = 'inset'"
    },
    {
      "trigger": "style.borderBottomStyle = 'outset'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'outset'"
    },
    {
      "trigger": "borderBottomStyle = 'outset'\tStyle CSS",
      "contents": "borderBottomStyle = 'outset'"
    },
    {
      "trigger": "style.borderBottomStyle = 'initial'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'initial'"
    },
    {
      "trigger": "borderBottomStyle = 'initial'\tStyle CSS",
      "contents": "borderBottomStyle = 'initial'"
    },
    {
      "trigger": "style.borderBottomStyle = 'inherit'\tStyle CSS",
      "contents": "style.borderBottomStyle = 'inherit'"
    },
    {
      "trigger": "borderBottomStyle = 'inherit'\tStyle CSS",
      "contents": "borderBottomStyle = 'inherit'"
    },
    {
      "trigger": "style.borderBottomWidth\tStyle CSS",
      "contents": "style.borderBottomWidth"
    },
    {
      "trigger": "borderBottomWidth\tStyle CSS",
      "contents": "borderBottomWidth"
    },
    {
      "trigger": "style.borderBottomWidth = '$0'\tStyle CSS",
      "contents": "style.borderBottomWidth = '$0'"
    },
    {
      "trigger": "borderBottomWidth = '$0'\tStyle CSS",
      "contents": "borderBottomWidth = '$0'"
    },
    {
      "trigger": "style.borderBottomWidth = 'thin'\tStyle CSS",
      "contents": "style.borderBottomWidth = 'thin'"
    },
    {
      "trigger": "borderBottomWidth = 'thin'\tStyle CSS",
      "contents": "borderBottomWidth = 'thin'"
    },
    {
      "trigger": "style.borderBottomWidth = 'medium'\tStyle CSS",
      "contents": "style.borderBottomWidth = 'medium'"
    },
    {
      "trigger": "borderBottomWidth = 'medium'\tStyle CSS",
      "contents": "borderBottomWidth = 'medium'"
    },
    {
      "trigger": "style.borderBottomWidth = 'thick'\tStyle CSS",
      "contents": "style.borderBottomWidth = 'thick'"
    },
    {
      "trigger": "borderBottomWidth = 'thick'\tStyle CSS",
      "contents": "borderBottomWidth = 'thick'"
    },
    {
      "trigger": "style.borderBottomWidth = 'initial'\tStyle CSS",
      "contents": "style.borderBottomWidth = 'initial'"
    },
    {
      "trigger": "borderBottomWidth = 'initial'\tStyle CSS",
      "contents": "borderBottomWidth = 'initial'"
    },
    {
      "trigger": "style.borderBottomWidth = 'inherit'\tStyle CSS",
      "contents": "style.borderBottomWidth = 'inherit'"
    },
    {
      "trigger": "borderBottomWidth = 'inherit'\tStyle CSS",
      "contents": "borderBottomWidth = 'inherit'"
    },
    {
      "trigger": "style.borderCollapse\tStyle CSS",
      "contents": "style.borderCollapse"
    },
    {
      "trigger": "borderCollapse\tStyle CSS",
      "contents": "borderCollapse"
    },
    {
      "trigger": "style.borderCollapse = '$0'\tStyle CSS",
      "contents": "style.borderCollapse = '$0'"
    },
    {
      "trigger": "borderCollapse = '$0'\tStyle CSS",
      "contents": "borderCollapse = '$0'"
    },
    {
      "trigger": "style.borderCollapse = 'separate'\tStyle CSS",
      "contents": "style.borderCollapse = 'separate'"
    },
    {
      "trigger": "borderCollapse = 'separate'\tStyle CSS",
      "contents": "borderCollapse = 'separate'"
    },
    {
      "trigger": "style.borderCollapse = 'collapse'\tStyle CSS",
      "contents": "style.borderCollapse = 'collapse'"
    },
    {
      "trigger": "borderCollapse = 'collapse'\tStyle CSS",
      "contents": "borderCollapse = 'collapse'"
    },
    {
      "trigger": "style.borderCollapse = 'initial'\tStyle CSS",
      "contents": "style.borderCollapse = 'initial'"
    },
    {
      "trigger": "borderCollapse = 'initial'\tStyle CSS",
      "contents": "borderCollapse = 'initial'"
    },
    {
      "trigger": "style.borderCollapse = 'inherit'\tStyle CSS",
      "contents": "style.borderCollapse = 'inherit'"
    },
    {
      "trigger": "borderCollapse = 'inherit'\tStyle CSS",
      "contents": "borderCollapse = 'inherit'"
    },
    {
      "trigger": "style.borderColor\tStyle CSS",
      "contents": "style.borderColor"
    },
    {
      "trigger": "borderColor\tStyle CSS",
      "contents": "borderColor"
    },
    {
      "trigger": "style.borderColor = '$0'\tStyle CSS",
      "contents": "style.borderColor = '$0'"
    },
    {
      "trigger": "borderColor = '$0'\tStyle CSS",
      "contents": "borderColor = '$0'"
    },
    {
      "trigger": "style.borderColor = 'transparent'\tStyle CSS",
      "contents": "style.borderColor = 'transparent'"
    },
    {
      "trigger": "borderColor = 'transparent'\tStyle CSS",
      "contents": "borderColor = 'transparent'"
    },
    {
      "trigger": "style.borderColor = 'initial'\tStyle CSS",
      "contents": "style.borderColor = 'initial'"
    },
    {
      "trigger": "borderColor = 'initial'\tStyle CSS",
      "contents": "borderColor = 'initial'"
    },
    {
      "trigger": "style.borderColor = 'inherit'\tStyle CSS",
      "contents": "style.borderColor = 'inherit'"
    },
    {
      "trigger": "borderColor = 'inherit'\tStyle CSS",
      "contents": "borderColor = 'inherit'"
    },
    {
      "trigger": "style.borderImage\tStyle CSS",
      "contents": "style.borderImage"
    },
    {
      "trigger": "borderImage\tStyle CSS",
      "contents": "borderImage"
    },
    {
      "trigger": "style.borderImage = '$0'\tStyle CSS",
      "contents": "style.borderImage = '$0'"
    },
    {
      "trigger": "borderImage = '$0'\tStyle CSS",
      "contents": "borderImage = '$0'"
    },
    {
      "trigger": "style.borderImage = 'initial'\tStyle CSS",
      "contents": "style.borderImage = 'initial'"
    },
    {
      "trigger": "borderImage = 'initial'\tStyle CSS",
      "contents": "borderImage = 'initial'"
    },
    {
      "trigger": "style.borderImage = 'inherit'\tStyle CSS",
      "contents": "style.borderImage = 'inherit'"
    },
    {
      "trigger": "borderImage = 'inherit'\tStyle CSS",
      "contents": "borderImage = 'inherit'"
    },
    {
      "trigger": "style.borderImageOutset\tStyle CSS",
      "contents": "style.borderImageOutset"
    },
    {
      "trigger": "borderImageOutset\tStyle CSS",
      "contents": "borderImageOutset"
    },
    {
      "trigger": "style.borderImageOutset = '$0'\tStyle CSS",
      "contents": "style.borderImageOutset = '$0'"
    },
    {
      "trigger": "borderImageOutset = '$0'\tStyle CSS",
      "contents": "borderImageOutset = '$0'"
    },
    {
      "trigger": "style.borderImageOutset = 'initial'\tStyle CSS",
      "contents": "style.borderImageOutset = 'initial'"
    },
    {
      "trigger": "borderImageOutset = 'initial'\tStyle CSS",
      "contents": "borderImageOutset = 'initial'"
    },
    {
      "trigger": "style.borderImageOutset = 'inherit'\tStyle CSS",
      "contents": "style.borderImageOutset = 'inherit'"
    },
    {
      "trigger": "borderImageOutset = 'inherit'\tStyle CSS",
      "contents": "borderImageOutset = 'inherit'"
    },
    {
      "trigger": "style.borderImageRepeat\tStyle CSS",
      "contents": "style.borderImageRepeat"
    },
    {
      "trigger": "borderImageRepeat\tStyle CSS",
      "contents": "borderImageRepeat"
    },
    {
      "trigger": "style.borderImageRepeat = '$0'\tStyle CSS",
      "contents": "style.borderImageRepeat = '$0'"
    },
    {
      "trigger": "borderImageRepeat = '$0'\tStyle CSS",
      "contents": "borderImageRepeat = '$0'"
    },
    {
      "trigger": "style.borderImageRepeat = 'stretch'\tStyle CSS",
      "contents": "style.borderImageRepeat = 'stretch'"
    },
    {
      "trigger": "borderImageRepeat = 'stretch'\tStyle CSS",
      "contents": "borderImageRepeat = 'stretch'"
    },
    {
      "trigger": "style.borderImageRepeat = 'repeat'\tStyle CSS",
      "contents": "style.borderImageRepeat = 'repeat'"
    },
    {
      "trigger": "borderImageRepeat = 'repeat'\tStyle CSS",
      "contents": "borderImageRepeat = 'repeat'"
    },
    {
      "trigger": "style.borderImageRepeat = 'round'\tStyle CSS",
      "contents": "style.borderImageRepeat = 'round'"
    },
    {
      "trigger": "borderImageRepeat = 'round'\tStyle CSS",
      "contents": "borderImageRepeat = 'round'"
    },
    {
      "trigger": "style.borderImageRepeat = 'space'\tStyle CSS",
      "contents": "style.borderImageRepeat = 'space'"
    },
    {
      "trigger": "borderImageRepeat = 'space'\tStyle CSS",
      "contents": "borderImageRepeat = 'space'"
    },
    {
      "trigger": "style.borderImageRepeat = 'initial'\tStyle CSS",
      "contents": "style.borderImageRepeat = 'initial'"
    },
    {
      "trigger": "borderImageRepeat = 'initial'\tStyle CSS",
      "contents": "borderImageRepeat = 'initial'"
    },
    {
      "trigger": "style.borderImageRepeat = 'inherit'\tStyle CSS",
      "contents": "style.borderImageRepeat = 'inherit'"
    },
    {
      "trigger": "borderImageRepeat = 'inherit'\tStyle CSS",
      "contents": "borderImageRepeat = 'inherit'"
    },
    {
      "trigger": "style.borderImageSlice\tStyle CSS",
      "contents": "style.borderImageSlice"
    },
    {
      "trigger": "borderImageSlice\tStyle CSS",
      "contents": "borderImageSlice"
    },
    {
      "trigger": "style.borderImageSlice = '$0'\tStyle CSS",
      "contents": "style.borderImageSlice = '$0'"
    },
    {
      "trigger": "borderImageSlice = '$0'\tStyle CSS",
      "contents": "borderImageSlice = '$0'"
    },
    {
      "trigger": "style.borderImageSlice = 'fill'\tStyle CSS",
      "contents": "style.borderImageSlice = 'fill'"
    },
    {
      "trigger": "borderImageSlice = 'fill'\tStyle CSS",
      "contents": "borderImageSlice = 'fill'"
    },
    {
      "trigger": "style.borderImageSlice = 'initial'\tStyle CSS",
      "contents": "style.borderImageSlice = 'initial'"
    },
    {
      "trigger": "borderImageSlice = 'initial'\tStyle CSS",
      "contents": "borderImageSlice = 'initial'"
    },
    {
      "trigger": "style.borderImageSlice = 'inherit'\tStyle CSS",
      "contents": "style.borderImageSlice = 'inherit'"
    },
    {
      "trigger": "borderImageSlice = 'inherit'\tStyle CSS",
      "contents": "borderImageSlice = 'inherit'"
    },
    {
      "trigger": "style.borderImageSource\tStyle CSS",
      "contents": "style.borderImageSource"
    },
    {
      "trigger": "borderImageSource\tStyle CSS",
      "contents": "borderImageSource"
    },
    {
      "trigger": "style.borderImageSource = '$0'\tStyle CSS",
      "contents": "style.borderImageSource = '$0'"
    },
    {
      "trigger": "borderImageSource = '$0'\tStyle CSS",
      "contents": "borderImageSource = '$0'"
    },
    {
      "trigger": "style.borderImageSource = 'none'\tStyle CSS",
      "contents": "style.borderImageSource = 'none'"
    },
    {
      "trigger": "borderImageSource = 'none'\tStyle CSS",
      "contents": "borderImageSource = 'none'"
    },
    {
      "trigger": "style.borderImageSource = 'initial'\tStyle CSS",
      "contents": "style.borderImageSource = 'initial'"
    },
    {
      "trigger": "borderImageSource = 'initial'\tStyle CSS",
      "contents": "borderImageSource = 'initial'"
    },
    {
      "trigger": "style.borderImageSource = 'inherit'\tStyle CSS",
      "contents": "style.borderImageSource = 'inherit'"
    },
    {
      "trigger": "borderImageSource = 'inherit'\tStyle CSS",
      "contents": "borderImageSource = 'inherit'"
    },
    {
      "trigger": "style.borderImageWidth\tStyle CSS",
      "contents": "style.borderImageWidth"
    },
    {
      "trigger": "borderImageWidth\tStyle CSS",
      "contents": "borderImageWidth"
    },
    {
      "trigger": "style.borderImageWidth = '$0'\tStyle CSS",
      "contents": "style.borderImageWidth = '$0'"
    },
    {
      "trigger": "borderImageWidth = '$0'\tStyle CSS",
      "contents": "borderImageWidth = '$0'"
    },
    {
      "trigger": "style.borderImageWidth = 'auto'\tStyle CSS",
      "contents": "style.borderImageWidth = 'auto'"
    },
    {
      "trigger": "borderImageWidth = 'auto'\tStyle CSS",
      "contents": "borderImageWidth = 'auto'"
    },
    {
      "trigger": "style.borderImageWidth = 'initial'\tStyle CSS",
      "contents": "style.borderImageWidth = 'initial'"
    },
    {
      "trigger": "borderImageWidth = 'initial'\tStyle CSS",
      "contents": "borderImageWidth = 'initial'"
    },
    {
      "trigger": "style.borderImageWidth = 'inherit'\tStyle CSS",
      "contents": "style.borderImageWidth = 'inherit'"
    },
    {
      "trigger": "borderImageWidth = 'inherit'\tStyle CSS",
      "contents": "borderImageWidth = 'inherit'"
    },
    {
      "trigger": "style.borderLeft\tStyle CSS",
      "contents": "style.borderLeft"
    },
    {
      "trigger": "borderLeft\tStyle CSS",
      "contents": "borderLeft"
    },
    {
      "trigger": "style.borderLeft = '$0'\tStyle CSS",
      "contents": "style.borderLeft = '$0'"
    },
    {
      "trigger": "borderLeft = '$0'\tStyle CSS",
      "contents": "borderLeft = '$0'"
    },
    {
      "trigger": "style.borderLeft = 'initial'\tStyle CSS",
      "contents": "style.borderLeft = 'initial'"
    },
    {
      "trigger": "borderLeft = 'initial'\tStyle CSS",
      "contents": "borderLeft = 'initial'"
    },
    {
      "trigger": "style.borderLeft = 'inherit'\tStyle CSS",
      "contents": "style.borderLeft = 'inherit'"
    },
    {
      "trigger": "borderLeft = 'inherit'\tStyle CSS",
      "contents": "borderLeft = 'inherit'"
    },
    {
      "trigger": "style.borderLeftColor\tStyle CSS",
      "contents": "style.borderLeftColor"
    },
    {
      "trigger": "borderLeftColor\tStyle CSS",
      "contents": "borderLeftColor"
    },
    {
      "trigger": "style.borderLeftColor = '$0'\tStyle CSS",
      "contents": "style.borderLeftColor = '$0'"
    },
    {
      "trigger": "borderLeftColor = '$0'\tStyle CSS",
      "contents": "borderLeftColor = '$0'"
    },
    {
      "trigger": "style.borderLeftColor = 'transparent'\tStyle CSS",
      "contents": "style.borderLeftColor = 'transparent'"
    },
    {
      "trigger": "borderLeftColor = 'transparent'\tStyle CSS",
      "contents": "borderLeftColor = 'transparent'"
    },
    {
      "trigger": "style.borderLeftColor = 'initial'\tStyle CSS",
      "contents": "style.borderLeftColor = 'initial'"
    },
    {
      "trigger": "borderLeftColor = 'initial'\tStyle CSS",
      "contents": "borderLeftColor = 'initial'"
    },
    {
      "trigger": "style.borderLeftColor = 'inherit'\tStyle CSS",
      "contents": "style.borderLeftColor = 'inherit'"
    },
    {
      "trigger": "borderLeftColor = 'inherit'\tStyle CSS",
      "contents": "borderLeftColor = 'inherit'"
    },
    {
      "trigger": "style.borderLeftStyle\tStyle CSS",
      "contents": "style.borderLeftStyle"
    },
    {
      "trigger": "borderLeftStyle\tStyle CSS",
      "contents": "borderLeftStyle"
    },
    {
      "trigger": "style.borderLeftStyle = '$0'\tStyle CSS",
      "contents": "style.borderLeftStyle = '$0'"
    },
    {
      "trigger": "borderLeftStyle = '$0'\tStyle CSS",
      "contents": "borderLeftStyle = '$0'"
    },
    {
      "trigger": "style.borderLeftStyle = 'none'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'none'"
    },
    {
      "trigger": "borderLeftStyle = 'none'\tStyle CSS",
      "contents": "borderLeftStyle = 'none'"
    },
    {
      "trigger": "style.borderLeftStyle = 'hidden'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'hidden'"
    },
    {
      "trigger": "borderLeftStyle = 'hidden'\tStyle CSS",
      "contents": "borderLeftStyle = 'hidden'"
    },
    {
      "trigger": "style.borderLeftStyle = 'dotted'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'dotted'"
    },
    {
      "trigger": "borderLeftStyle = 'dotted'\tStyle CSS",
      "contents": "borderLeftStyle = 'dotted'"
    },
    {
      "trigger": "style.borderLeftStyle = 'dashed'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'dashed'"
    },
    {
      "trigger": "borderLeftStyle = 'dashed'\tStyle CSS",
      "contents": "borderLeftStyle = 'dashed'"
    },
    {
      "trigger": "style.borderLeftStyle = 'solid'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'solid'"
    },
    {
      "trigger": "borderLeftStyle = 'solid'\tStyle CSS",
      "contents": "borderLeftStyle = 'solid'"
    },
    {
      "trigger": "style.borderLeftStyle = 'double'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'double'"
    },
    {
      "trigger": "borderLeftStyle = 'double'\tStyle CSS",
      "contents": "borderLeftStyle = 'double'"
    },
    {
      "trigger": "style.borderLeftStyle = 'groove'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'groove'"
    },
    {
      "trigger": "borderLeftStyle = 'groove'\tStyle CSS",
      "contents": "borderLeftStyle = 'groove'"
    },
    {
      "trigger": "style.borderLeftStyle = 'ridge'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'ridge'"
    },
    {
      "trigger": "borderLeftStyle = 'ridge'\tStyle CSS",
      "contents": "borderLeftStyle = 'ridge'"
    },
    {
      "trigger": "style.borderLeftStyle = 'inset'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'inset'"
    },
    {
      "trigger": "borderLeftStyle = 'inset'\tStyle CSS",
      "contents": "borderLeftStyle = 'inset'"
    },
    {
      "trigger": "style.borderLeftStyle = 'outset'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'outset'"
    },
    {
      "trigger": "borderLeftStyle = 'outset'\tStyle CSS",
      "contents": "borderLeftStyle = 'outset'"
    },
    {
      "trigger": "style.borderLeftStyle = 'initial'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'initial'"
    },
    {
      "trigger": "borderLeftStyle = 'initial'\tStyle CSS",
      "contents": "borderLeftStyle = 'initial'"
    },
    {
      "trigger": "style.borderLeftStyle = 'inherit'\tStyle CSS",
      "contents": "style.borderLeftStyle = 'inherit'"
    },
    {
      "trigger": "borderLeftStyle = 'inherit'\tStyle CSS",
      "contents": "borderLeftStyle = 'inherit'"
    },
    {
      "trigger": "style.borderLeftWidth\tStyle CSS",
      "contents": "style.borderLeftWidth"
    },
    {
      "trigger": "borderLeftWidth\tStyle CSS",
      "contents": "borderLeftWidth"
    },
    {
      "trigger": "style.borderLeftWidth = '$0'\tStyle CSS",
      "contents": "style.borderLeftWidth = '$0'"
    },
    {
      "trigger": "borderLeftWidth = '$0'\tStyle CSS",
      "contents": "borderLeftWidth = '$0'"
    },
    {
      "trigger": "style.borderLeftWidth = 'thin'\tStyle CSS",
      "contents": "style.borderLeftWidth = 'thin'"
    },
    {
      "trigger": "borderLeftWidth = 'thin'\tStyle CSS",
      "contents": "borderLeftWidth = 'thin'"
    },
    {
      "trigger": "style.borderLeftWidth = 'medium'\tStyle CSS",
      "contents": "style.borderLeftWidth = 'medium'"
    },
    {
      "trigger": "borderLeftWidth = 'medium'\tStyle CSS",
      "contents": "borderLeftWidth = 'medium'"
    },
    {
      "trigger": "style.borderLeftWidth = 'thick'\tStyle CSS",
      "contents": "style.borderLeftWidth = 'thick'"
    },
    {
      "trigger": "borderLeftWidth = 'thick'\tStyle CSS",
      "contents": "borderLeftWidth = 'thick'"
    },
    {
      "trigger": "style.borderLeftWidth = 'initial'\tStyle CSS",
      "contents": "style.borderLeftWidth = 'initial'"
    },
    {
      "trigger": "borderLeftWidth = 'initial'\tStyle CSS",
      "contents": "borderLeftWidth = 'initial'"
    },
    {
      "trigger": "style.borderLeftWidth = 'inherit'\tStyle CSS",
      "contents": "style.borderLeftWidth = 'inherit'"
    },
    {
      "trigger": "borderLeftWidth = 'inherit'\tStyle CSS",
      "contents": "borderLeftWidth = 'inherit'"
    },
    {
      "trigger": "style.borderRadius\tStyle CSS",
      "contents": "style.borderRadius"
    },
    {
      "trigger": "borderRadius\tStyle CSS",
      "contents": "borderRadius"
    },
    {
      "trigger": "style.borderRadius = '$0'\tStyle CSS",
      "contents": "style.borderRadius = '$0'"
    },
    {
      "trigger": "borderRadius = '$0'\tStyle CSS",
      "contents": "borderRadius = '$0'"
    },
    {
      "trigger": "style.borderRadius = 'initial'\tStyle CSS",
      "contents": "style.borderRadius = 'initial'"
    },
    {
      "trigger": "borderRadius = 'initial'\tStyle CSS",
      "contents": "borderRadius = 'initial'"
    },
    {
      "trigger": "style.borderRadius = 'inherit'\tStyle CSS",
      "contents": "style.borderRadius = 'inherit'"
    },
    {
      "trigger": "borderRadius = 'inherit'\tStyle CSS",
      "contents": "borderRadius = 'inherit'"
    },

    {
      "trigger": "style.borderRight\tStyle CSS",
      "contents": "style.borderRight"
    },
    {
      "trigger": "borderRight\tStyle CSS",
      "contents": "borderRight"
    },
    {
      "trigger": "style.borderRight = '$0'\tStyle CSS",
      "contents": "style.borderRight = '$0'"
    },
    {
      "trigger": "borderRight = '$0'\tStyle CSS",
      "contents": "borderRight = '$0'"
    },
    {
      "trigger": "style.borderRight = 'initial'\tStyle CSS",
      "contents": "style.borderRight = 'initial'"
    },
    {
      "trigger": "borderRight = 'initial'\tStyle CSS",
      "contents": "borderRight = 'initial'"
    },
    {
      "trigger": "style.borderRight = 'inherit'\tStyle CSS",
      "contents": "style.borderRight = 'inherit'"
    },
    {
      "trigger": "borderRight = 'inherit'\tStyle CSS",
      "contents": "borderRight = 'inherit'"
    },
    {
      "trigger": "style.borderRightColor\tStyle CSS",
      "contents": "style.borderRightColor"
    },
    {
      "trigger": "borderRightColor\tStyle CSS",
      "contents": "borderRightColor"
    },
    {
      "trigger": "style.borderRightColor = '$0'\tStyle CSS",
      "contents": "style.borderRightColor = '$0'"
    },
    {
      "trigger": "borderRightColor = '$0'\tStyle CSS",
      "contents": "borderRightColor = '$0'"
    },
    {
      "trigger": "style.borderRightColor = 'transparent'\tStyle CSS",
      "contents": "style.borderRightColor = 'transparent'"
    },
    {
      "trigger": "borderRightColor = 'transparent'\tStyle CSS",
      "contents": "borderRightColor = 'transparent'"
    },
    {
      "trigger": "style.borderRightColor = 'initial'\tStyle CSS",
      "contents": "style.borderRightColor = 'initial'"
    },
    {
      "trigger": "borderRightColor = 'initial'\tStyle CSS",
      "contents": "borderRightColor = 'initial'"
    },
    {
      "trigger": "style.borderRightColor = 'inherit'\tStyle CSS",
      "contents": "style.borderRightColor = 'inherit'"
    },
    {
      "trigger": "borderRightColor = 'inherit'\tStyle CSS",
      "contents": "borderRightColor = 'inherit'"
    },
    {
      "trigger": "style.borderRightStyle\tStyle CSS",
      "contents": "style.borderRightStyle"
    },
    {
      "trigger": "borderRightStyle\tStyle CSS",
      "contents": "borderRightStyle"
    },
    {
      "trigger": "style.borderRightStyle = '$0'\tStyle CSS",
      "contents": "style.borderRightStyle = '$0'"
    },
    {
      "trigger": "borderRightStyle = '$0'\tStyle CSS",
      "contents": "borderRightStyle = '$0'"
    },
    {
      "trigger": "style.borderRightStyle = 'none'\tStyle CSS",
      "contents": "style.borderRightStyle = 'none'"
    },
    {
      "trigger": "borderRightStyle = 'none'\tStyle CSS",
      "contents": "borderRightStyle = 'none'"
    },
    {
      "trigger": "style.borderRightStyle = 'hidden'\tStyle CSS",
      "contents": "style.borderRightStyle = 'hidden'"
    },
    {
      "trigger": "borderRightStyle = 'hidden'\tStyle CSS",
      "contents": "borderRightStyle = 'hidden'"
    },
    {
      "trigger": "style.borderRightStyle = 'dotted'\tStyle CSS",
      "contents": "style.borderRightStyle = 'dotted'"
    },
    {
      "trigger": "borderRightStyle = 'dotted'\tStyle CSS",
      "contents": "borderRightStyle = 'dotted'"
    },
    {
      "trigger": "style.borderRightStyle = 'dashed'\tStyle CSS",
      "contents": "style.borderRightStyle = 'dashed'"
    },
    {
      "trigger": "borderRightStyle = 'dashed'\tStyle CSS",
      "contents": "borderRightStyle = 'dashed'"
    },
    {
      "trigger": "style.borderRightStyle = 'solid'\tStyle CSS",
      "contents": "style.borderRightStyle = 'solid'"
    },
    {
      "trigger": "borderRightStyle = 'solid'\tStyle CSS",
      "contents": "borderRightStyle = 'solid'"
    },
    {
      "trigger": "style.borderRightStyle = 'double'\tStyle CSS",
      "contents": "style.borderRightStyle = 'double'"
    },
    {
      "trigger": "borderRightStyle = 'double'\tStyle CSS",
      "contents": "borderRightStyle = 'double'"
    },
    {
      "trigger": "style.borderRightStyle = 'groove'\tStyle CSS",
      "contents": "style.borderRightStyle = 'groove'"
    },
    {
      "trigger": "borderRightStyle = 'groove'\tStyle CSS",
      "contents": "borderRightStyle = 'groove'"
    },
    {
      "trigger": "style.borderRightStyle = 'ridge'\tStyle CSS",
      "contents": "style.borderRightStyle = 'ridge'"
    },
    {
      "trigger": "borderRightStyle = 'ridge'\tStyle CSS",
      "contents": "borderRightStyle = 'ridge'"
    },
    {
      "trigger": "style.borderRightStyle = 'inset'\tStyle CSS",
      "contents": "style.borderRightStyle = 'inset'"
    },
    {
      "trigger": "borderRightStyle = 'inset'\tStyle CSS",
      "contents": "borderRightStyle = 'inset'"
    },
    {
      "trigger": "style.borderRightStyle = 'outset'\tStyle CSS",
      "contents": "style.borderRightStyle = 'outset'"
    },
    {
      "trigger": "borderRightStyle = 'outset'\tStyle CSS",
      "contents": "borderRightStyle = 'outset'"
    },
    {
      "trigger": "style.borderRightStyle = 'initial'\tStyle CSS",
      "contents": "style.borderRightStyle = 'initial'"
    },
    {
      "trigger": "borderRightStyle = 'initial'\tStyle CSS",
      "contents": "borderRightStyle = 'initial'"
    },
    {
      "trigger": "style.borderRightStyle = 'inherit'\tStyle CSS",
      "contents": "style.borderRightStyle = 'inherit'"
    },
    {
      "trigger": "borderRightStyle = 'inherit'\tStyle CSS",
      "contents": "borderRightStyle = 'inherit'"
    },
    {
      "trigger": "style.borderRightWidth\tStyle CSS",
      "contents": "style.borderRightWidth"
    },
    {
      "trigger": "borderRightWidth\tStyle CSS",
      "contents": "borderRightWidth"
    },
    {
      "trigger": "style.borderRightWidth = '$0'\tStyle CSS",
      "contents": "style.borderRightWidth = '$0'"
    },
    {
      "trigger": "borderRightWidth = '$0'\tStyle CSS",
      "contents": "borderRightWidth = '$0'"
    },
    {
      "trigger": "style.borderRightWidth = 'thin'\tStyle CSS",
      "contents": "style.borderRightWidth = 'thin'"
    },
    {
      "trigger": "borderRightWidth = 'thin'\tStyle CSS",
      "contents": "borderRightWidth = 'thin'"
    },
    {
      "trigger": "style.borderRightWidth = 'medium'\tStyle CSS",
      "contents": "style.borderRightWidth = 'medium'"
    },
    {
      "trigger": "borderRightWidth = 'medium'\tStyle CSS",
      "contents": "borderRightWidth = 'medium'"
    },
    {
      "trigger": "style.borderRightWidth = 'thick'\tStyle CSS",
      "contents": "style.borderRightWidth = 'thick'"
    },
    {
      "trigger": "borderRightWidth = 'thick'\tStyle CSS",
      "contents": "borderRightWidth = 'thick'"
    },
    {
      "trigger": "style.borderRightWidth = 'initial'\tStyle CSS",
      "contents": "style.borderRightWidth = 'initial'"
    },
    {
      "trigger": "borderRightWidth = 'initial'\tStyle CSS",
      "contents": "borderRightWidth = 'initial'"
    },
    {
      "trigger": "style.borderRightWidth = 'inherit'\tStyle CSS",
      "contents": "style.borderRightWidth = 'inherit'"
    },
    {
      "trigger": "borderRightWidth = 'inherit'\tStyle CSS",
      "contents": "borderRightWidth = 'inherit'"
    },
    {
      "trigger": "style.borderSpacing\tStyle CSS",
      "contents": "style.borderSpacing"
    },
    {
      "trigger": "borderSpacing\tStyle CSS",
      "contents": "borderSpacing"
    },
    {
      "trigger": "style.borderSpacing = '$0'\tStyle CSS",
      "contents": "style.borderSpacing = '$0'"
    },
    {
      "trigger": "borderSpacing = '$0'\tStyle CSS",
      "contents": "borderSpacing = '$0'"
    },
    {
      "trigger": "style.borderSpacing = 'initial'\tStyle CSS",
      "contents": "style.borderSpacing = 'initial'"
    },
    {
      "trigger": "borderSpacing = 'initial'\tStyle CSS",
      "contents": "borderSpacing = 'initial'"
    },
    {
      "trigger": "style.borderSpacing = 'inherit'\tStyle CSS",
      "contents": "style.borderSpacing = 'inherit'"
    },
    {
      "trigger": "borderSpacing = 'inherit'\tStyle CSS",
      "contents": "borderSpacing = 'inherit'"
    },
    {
      "trigger": "style.borderStyle\tStyle CSS",
      "contents": "style.borderStyle"
    },
    {
      "trigger": "borderStyle\tStyle CSS",
      "contents": "borderStyle"
    },
    {
      "trigger": "style.borderStyle = '$0'\tStyle CSS",
      "contents": "style.borderStyle = '$0'"
    },
    {
      "trigger": "borderStyle = '$0'\tStyle CSS",
      "contents": "borderStyle = '$0'"
    },
    {
      "trigger": "style.borderStyle = 'none'\tStyle CSS",
      "contents": "style.borderStyle = 'none'"
    },
    {
      "trigger": "borderStyle = 'none'\tStyle CSS",
      "contents": "borderStyle = 'none'"
    },
    {
      "trigger": "style.borderStyle = 'hidden'\tStyle CSS",
      "contents": "style.borderStyle = 'hidden'"
    },
    {
      "trigger": "borderStyle = 'hidden'\tStyle CSS",
      "contents": "borderStyle = 'hidden'"
    },
    {
      "trigger": "style.borderStyle = 'dotted'\tStyle CSS",
      "contents": "style.borderStyle = 'dotted'"
    },
    {
      "trigger": "borderStyle = 'dotted'\tStyle CSS",
      "contents": "borderStyle = 'dotted'"
    },
    {
      "trigger": "style.borderStyle = 'dashed'\tStyle CSS",
      "contents": "style.borderStyle = 'dashed'"
    },
    {
      "trigger": "borderStyle = 'dashed'\tStyle CSS",
      "contents": "borderStyle = 'dashed'"
    },
    {
      "trigger": "style.borderStyle = 'solid'\tStyle CSS",
      "contents": "style.borderStyle = 'solid'"
    },
    {
      "trigger": "borderStyle = 'solid'\tStyle CSS",
      "contents": "borderStyle = 'solid'"
    },
    {
      "trigger": "style.borderStyle = 'double'\tStyle CSS",
      "contents": "style.borderStyle = 'double'"
    },
    {
      "trigger": "borderStyle = 'double'\tStyle CSS",
      "contents": "borderStyle = 'double'"
    },
    {
      "trigger": "style.borderStyle = 'groove'\tStyle CSS",
      "contents": "style.borderStyle = 'groove'"
    },
    {
      "trigger": "borderStyle = 'groove'\tStyle CSS",
      "contents": "borderStyle = 'groove'"
    },
    {
      "trigger": "style.borderStyle = 'ridge'\tStyle CSS",
      "contents": "style.borderStyle = 'ridge'"
    },
    {
      "trigger": "borderStyle = 'ridge'\tStyle CSS",
      "contents": "borderStyle = 'ridge'"
    },
    {
      "trigger": "style.borderStyle = 'inset'\tStyle CSS",
      "contents": "style.borderStyle = 'inset'"
    },
    {
      "trigger": "borderStyle = 'inset'\tStyle CSS",
      "contents": "borderStyle = 'inset'"
    },
    {
      "trigger": "style.borderStyle = 'outset'\tStyle CSS",
      "contents": "style.borderStyle = 'outset'"
    },
    {
      "trigger": "borderStyle = 'outset'\tStyle CSS",
      "contents": "borderStyle = 'outset'"
    },
    {
      "trigger": "style.borderStyle = 'initial'\tStyle CSS",
      "contents": "style.borderStyle = 'initial'"
    },
    {
      "trigger": "borderStyle = 'initial'\tStyle CSS",
      "contents": "borderStyle = 'initial'"
    },
    {
      "trigger": "style.borderStyle = 'inherit'\tStyle CSS",
      "contents": "style.borderStyle = 'inherit'"
    },
    {
      "trigger": "borderStyle = 'inherit'\tStyle CSS",
      "contents": "borderStyle = 'inherit'"
    },
    {
      "trigger": "style.borderTop\tStyle CSS",
      "contents": "style.borderTop"
    },
    {
      "trigger": "borderTop\tStyle CSS",
      "contents": "borderTop"
    },
    {
      "trigger": "style.borderTop = '$0'\tStyle CSS",
      "contents": "style.borderTop = '$0'"
    },
    {
      "trigger": "borderTop = '$0'\tStyle CSS",
      "contents": "borderTop = '$0'"
    },
    {
      "trigger": "style.borderTop = 'initial'\tStyle CSS",
      "contents": "style.borderTop = 'initial'"
    },
    {
      "trigger": "borderTop = 'initial'\tStyle CSS",
      "contents": "borderTop = 'initial'"
    },
    {
      "trigger": "style.borderTop = 'inherit'\tStyle CSS",
      "contents": "style.borderTop = 'inherit'"
    },
    {
      "trigger": "borderTop = 'inherit'\tStyle CSS",
      "contents": "borderTop = 'inherit'"
    },
    {
      "trigger": "style.borderTopColor\tStyle CSS",
      "contents": "style.borderTopColor"
    },
    {
      "trigger": "borderTopColor\tStyle CSS",
      "contents": "borderTopColor"
    },
    {
      "trigger": "style.borderTopColor = '$0'\tStyle CSS",
      "contents": "style.borderTopColor = '$0'"
    },
    {
      "trigger": "borderTopColor = '$0'\tStyle CSS",
      "contents": "borderTopColor = '$0'"
    },
    {
      "trigger": "style.borderTopColor = 'transparent'\tStyle CSS",
      "contents": "style.borderTopColor = 'transparent'"
    },
    {
      "trigger": "borderTopColor = 'transparent'\tStyle CSS",
      "contents": "borderTopColor = 'transparent'"
    },
    {
      "trigger": "style.borderTopColor = 'initial'\tStyle CSS",
      "contents": "style.borderTopColor = 'initial'"
    },
    {
      "trigger": "borderTopColor = 'initial'\tStyle CSS",
      "contents": "borderTopColor = 'initial'"
    },
    {
      "trigger": "style.borderTopColor = 'inherit'\tStyle CSS",
      "contents": "style.borderTopColor = 'inherit'"
    },
    {
      "trigger": "borderTopColor = 'inherit'\tStyle CSS",
      "contents": "borderTopColor = 'inherit'"
    },
    {
      "trigger": "style.borderTopLeftRadius\tStyle CSS",
      "contents": "style.borderTopLeftRadius"
    },
    {
      "trigger": "borderTopLeftRadius\tStyle CSS",
      "contents": "borderTopLeftRadius"
    },
    {
      "trigger": "style.borderTopLeftRadius = '$0'\tStyle CSS",
      "contents": "style.borderTopLeftRadius = '$0'"
    },
    {
      "trigger": "borderTopLeftRadius = '$0'\tStyle CSS",
      "contents": "borderTopLeftRadius = '$0'"
    },
    {
      "trigger": "style.borderTopLeftRadius = 'initial'\tStyle CSS",
      "contents": "style.borderTopLeftRadius = 'initial'"
    },
    {
      "trigger": "borderTopLeftRadius = 'initial'\tStyle CSS",
      "contents": "borderTopLeftRadius = 'initial'"
    },
    {
      "trigger": "style.borderTopLeftRadius = 'inherit'\tStyle CSS",
      "contents": "style.borderTopLeftRadius = 'inherit'"
    },
    {
      "trigger": "borderTopLeftRadius = 'inherit'\tStyle CSS",
      "contents": "borderTopLeftRadius = 'inherit'"
    },
    {
      "trigger": "style.borderTopRightRadius\tStyle CSS",
      "contents": "style.borderTopRightRadius"
    },
    {
      "trigger": "borderTopRightRadius\tStyle CSS",
      "contents": "borderTopRightRadius"
    },
    {
      "trigger": "style.borderTopRightRadius = '$0'\tStyle CSS",
      "contents": "style.borderTopRightRadius = '$0'"
    },
    {
      "trigger": "borderTopRightRadius = '$0'\tStyle CSS",
      "contents": "borderTopRightRadius = '$0'"
    },
    {
      "trigger": "style.borderTopRightRadius = 'initial'\tStyle CSS",
      "contents": "style.borderTopRightRadius = 'initial'"
    },
    {
      "trigger": "borderTopRightRadius = 'initial'\tStyle CSS",
      "contents": "borderTopRightRadius = 'initial'"
    },
    {
      "trigger": "style.borderTopRightRadius = 'inherit'\tStyle CSS",
      "contents": "style.borderTopRightRadius = 'inherit'"
    },
    {
      "trigger": "borderTopRightRadius = 'inherit'\tStyle CSS",
      "contents": "borderTopRightRadius = 'inherit'"
    },
    {
      "trigger": "style.borderTopStyle\tStyle CSS",
      "contents": "style.borderTopStyle"
    },
    {
      "trigger": "borderTopStyle\tStyle CSS",
      "contents": "borderTopStyle"
    },
    {
      "trigger": "style.borderTopStyle = '$0'\tStyle CSS",
      "contents": "style.borderTopStyle = '$0'"
    },
    {
      "trigger": "borderTopStyle = '$0'\tStyle CSS",
      "contents": "borderTopStyle = '$0'"
    },
    {
      "trigger": "style.borderTopStyle = 'none'\tStyle CSS",
      "contents": "style.borderTopStyle = 'none'"
    },
    {
      "trigger": "borderTopStyle = 'none'\tStyle CSS",
      "contents": "borderTopStyle = 'none'"
    },
    {
      "trigger": "style.borderTopStyle = 'hidden'\tStyle CSS",
      "contents": "style.borderTopStyle = 'hidden'"
    },
    {
      "trigger": "borderTopStyle = 'hidden'\tStyle CSS",
      "contents": "borderTopStyle = 'hidden'"
    },
    {
      "trigger": "style.borderTopStyle = 'dotted'\tStyle CSS",
      "contents": "style.borderTopStyle = 'dotted'"
    },
    {
      "trigger": "borderTopStyle = 'dotted'\tStyle CSS",
      "contents": "borderTopStyle = 'dotted'"
    },
    {
      "trigger": "style.borderTopStyle = 'dashed'\tStyle CSS",
      "contents": "style.borderTopStyle = 'dashed'"
    },
    {
      "trigger": "borderTopStyle = 'dashed'\tStyle CSS",
      "contents": "borderTopStyle = 'dashed'"
    },
    {
      "trigger": "style.borderTopStyle = 'solid'\tStyle CSS",
      "contents": "style.borderTopStyle = 'solid'"
    },
    {
      "trigger": "borderTopStyle = 'solid'\tStyle CSS",
      "contents": "borderTopStyle = 'solid'"
    },
    {
      "trigger": "style.borderTopStyle = 'double'\tStyle CSS",
      "contents": "style.borderTopStyle = 'double'"
    },
    {
      "trigger": "borderTopStyle = 'double'\tStyle CSS",
      "contents": "borderTopStyle = 'double'"
    },
    {
      "trigger": "style.borderTopStyle = 'groove'\tStyle CSS",
      "contents": "style.borderTopStyle = 'groove'"
    },
    {
      "trigger": "borderTopStyle = 'groove'\tStyle CSS",
      "contents": "borderTopStyle = 'groove'"
    },
    {
      "trigger": "style.borderTopStyle = 'ridge'\tStyle CSS",
      "contents": "style.borderTopStyle = 'ridge'"
    },
    {
      "trigger": "borderTopStyle = 'ridge'\tStyle CSS",
      "contents": "borderTopStyle = 'ridge'"
    },
    {
      "trigger": "style.borderTopStyle = 'inset'\tStyle CSS",
      "contents": "style.borderTopStyle = 'inset'"
    },
    {
      "trigger": "borderTopStyle = 'inset'\tStyle CSS",
      "contents": "borderTopStyle = 'inset'"
    },
    {
      "trigger": "style.borderTopStyle = 'outset'\tStyle CSS",
      "contents": "style.borderTopStyle = 'outset'"
    },
    {
      "trigger": "borderTopStyle = 'outset'\tStyle CSS",
      "contents": "borderTopStyle = 'outset'"
    },
    {
      "trigger": "style.borderTopStyle = 'initial'\tStyle CSS",
      "contents": "style.borderTopStyle = 'initial'"
    },
    {
      "trigger": "borderTopStyle = 'initial'\tStyle CSS",
      "contents": "borderTopStyle = 'initial'"
    },
    {
      "trigger": "style.borderTopStyle = 'inherit'\tStyle CSS",
      "contents": "style.borderTopStyle = 'inherit'"
    },
    {
      "trigger": "borderTopStyle = 'inherit'\tStyle CSS",
      "contents": "borderTopStyle = 'inherit'"
    },
    {
      "trigger": "style.borderTopWidth\tStyle CSS",
      "contents": "style.borderTopWidth"
    },
    {
      "trigger": "borderTopWidth\tStyle CSS",
      "contents": "borderTopWidth"
    },
    {
      "trigger": "style.borderTopWidth = '$0'\tStyle CSS",
      "contents": "style.borderTopWidth = '$0'"
    },
    {
      "trigger": "borderTopWidth = '$0'\tStyle CSS",
      "contents": "borderTopWidth = '$0'"
    },
    {
      "trigger": "style.borderTopWidth = 'thin'\tStyle CSS",
      "contents": "style.borderTopWidth = 'thin'"
    },
    {
      "trigger": "borderTopWidth = 'thin'\tStyle CSS",
      "contents": "borderTopWidth = 'thin'"
    },
    {
      "trigger": "style.borderTopWidth = 'medium'\tStyle CSS",
      "contents": "style.borderTopWidth = 'medium'"
    },
    {
      "trigger": "borderTopWidth = 'medium'\tStyle CSS",
      "contents": "borderTopWidth = 'medium'"
    },
    {
      "trigger": "style.borderTopWidth = 'thick'\tStyle CSS",
      "contents": "style.borderTopWidth = 'thick'"
    },
    {
      "trigger": "borderTopWidth = 'thick'\tStyle CSS",
      "contents": "borderTopWidth = 'thick'"
    },
    {
      "trigger": "style.borderTopWidth = 'inherit'\tStyle CSS",
      "contents": "style.borderTopWidth = 'inherit'"
    },
    {
      "trigger": "borderTopWidth = 'inherit'\tStyle CSS",
      "contents": "borderTopWidth = 'inherit'"
    },
    {
      "trigger": "style.borderTopWidth = 'initial'\tStyle CSS",
      "contents": "style.borderTopWidth = 'initial'"
    },
    {
      "trigger": "borderTopWidth = 'initial'\tStyle CSS",
      "contents": "borderTopWidth = 'initial'"
    },
    {
      "trigger": "style.borderTopWidth = 'inherit'\tStyle CSS",
      "contents": "style.borderTopWidth = 'inherit'"
    },
    {
      "trigger": "borderTopWidth = 'inherit'\tStyle CSS",
      "contents": "borderTopWidth = 'inherit'"
    },
    {
      "trigger": "style.borderWidth\tStyle CSS",
      "contents": "style.borderWidth"
    },
    {
      "trigger": "borderWidth\tStyle CSS",
      "contents": "borderWidth"
    },
    {
      "trigger": "style.borderWidth = '$0'\tStyle CSS",
      "contents": "style.borderWidth = '$0'"
    },
    {
      "trigger": "borderWidth = '$0'\tStyle CSS",
      "contents": "borderWidth = '$0'"
    },
    {
      "trigger": "style.borderWidth = 'thin'\tStyle CSS",
      "contents": "style.borderWidth = 'thin'"
    },
    {
      "trigger": "borderWidth = 'thin'\tStyle CSS",
      "contents": "borderWidth = 'thin'"
    },
    {
      "trigger": "style.borderWidth = 'medium'\tStyle CSS",
      "contents": "style.borderWidth = 'medium'"
    },
    {
      "trigger": "borderWidth = 'medium'\tStyle CSS",
      "contents": "borderWidth = 'medium'"
    },
    {
      "trigger": "style.borderWidth = 'thick'\tStyle CSS",
      "contents": "style.borderWidth = 'thick'"
    },
    {
      "trigger": "borderWidth = 'thick'\tStyle CSS",
      "contents": "borderWidth = 'thick'"
    },
    {
      "trigger": "style.borderWidth = 'initial'\tStyle CSS",
      "contents": "style.borderWidth = 'initial'"
    },
    {
      "trigger": "borderWidth = 'initial'\tStyle CSS",
      "contents": "borderWidth = 'initial'"
    },
    {
      "trigger": "style.borderWidth = 'inherit'\tStyle CSS",
      "contents": "style.borderWidth = 'inherit'"
    },
    {
      "trigger": "borderWidth = 'inherit'\tStyle CSS",
      "contents": "borderWidth = 'inherit'"
    },
    {
      "trigger": "style.bottom\tStyle CSS",
      "contents": "style.bottom"
    },
    {
      "trigger": "bottom\tStyle CSS",
      "contents": "bottom"
    },
    {
      "trigger": "style.bottom = '$0'\tStyle CSS",
      "contents": "style.bottom = '$0'"
    },
    {
      "trigger": "bottom = '$0'\tStyle CSS",
      "contents": "bottom = '$0'"
    },
    {
      "trigger": "style.bottom = 'auto'\tStyle CSS",
      "contents": "style.bottom = 'auto'"
    },
    {
      "trigger": "bottom = 'auto'\tStyle CSS",
      "contents": "bottom = 'auto'"
    },
    {
      "trigger": "style.bottom = 'initial'\tStyle CSS",
      "contents": "style.bottom = 'initial'"
    },
    {
      "trigger": "bottom = 'initial'\tStyle CSS",
      "contents": "bottom = 'initial'"
    },
    {
      "trigger": "style.bottom = 'inherit'\tStyle CSS",
      "contents": "style.bottom = 'inherit'"
    },
    {
      "trigger": "bottom = 'inherit'\tStyle CSS",
      "contents": "bottom = 'inherit'"
    },
    {
      "trigger": "style.boxShadow\tStyle CSS",
      "contents": "style.boxShadow"
    },
    {
      "trigger": "boxShadow\tStyle CSS",
      "contents": "boxShadow"
    },
    {
      "trigger": "style.boxShadow = '$0'\tStyle CSS",
      "contents": "style.boxShadow = '$0'"
    },
    {
      "trigger": "boxShadow = '$0'\tStyle CSS",
      "contents": "boxShadow = '$0'"
    },
    {
      "trigger": "style.boxShadow = 'none'\tStyle CSS",
      "contents": "style.boxShadow = 'none'"
    },
    {
      "trigger": "boxShadow = 'none'\tStyle CSS",
      "contents": "boxShadow = 'none'"
    },
    {
      "trigger": "style.boxShadow = 'inset'\tStyle CSS",
      "contents": "style.boxShadow = 'inset'"
    },
    {
      "trigger": "boxShadow = 'inset'\tStyle CSS",
      "contents": "boxShadow = 'inset'"
    },
    {
      "trigger": "style.boxShadow = 'initial'\tStyle CSS",
      "contents": "style.boxShadow = 'initial'"
    },
    {
      "trigger": "boxShadow = 'initial'\tStyle CSS",
      "contents": "boxShadow = 'initial'"
    },
    {
      "trigger": "style.boxShadow = 'inherit'\tStyle CSS",
      "contents": "style.boxShadow = 'inherit'"
    },
    {
      "trigger": "boxShadow = 'inherit'\tStyle CSS",
      "contents": "boxShadow = 'inherit'"
    },
    {
      "trigger": "style.boxSizing\tStyle CSS",
      "contents": "style.boxSizing"
    },
    {
      "trigger": "boxSizing\tStyle CSS",
      "contents": "boxSizing"
    },
    {
      "trigger": "style.boxSizing = '$0'\tStyle CSS",
      "contents": "style.boxSizing = '$0'"
    },
    {
      "trigger": "boxSizing = '$0'\tStyle CSS",
      "contents": "boxSizing = '$0'"
    },
    {
      "trigger": "style.boxSizing = 'content-box'\tStyle CSS",
      "contents": "style.boxSizing = 'content-box'"
    },
    {
      "trigger": "boxSizing = 'content-box'\tStyle CSS",
      "contents": "boxSizing = 'content-box'"
    },
    {
      "trigger": "style.boxSizing = 'border-box'\tStyle CSS",
      "contents": "style.boxSizing = 'border-box'"
    },
    {
      "trigger": "boxSizing = 'border-box'\tStyle CSS",
      "contents": "boxSizing = 'border-box'"
    },
    {
      "trigger": "style.boxSizing = 'initial'\tStyle CSS",
      "contents": "style.boxSizing = 'initial'"
    },
    {
      "trigger": "boxSizing = 'initial'\tStyle CSS",
      "contents": "boxSizing = 'initial'"
    },
    {
      "trigger": "style.boxSizing = 'inherit'\tStyle CSS",
      "contents": "style.boxSizing = 'inherit'"
    },
    {
      "trigger": "boxSizing = 'inherit'\tStyle CSS",
      "contents": "boxSizing = 'inherit'"
    },
    {
      "trigger": "style.captionSide\tStyle CSS",
      "contents": "style.captionSide"
    },
    {
      "trigger": "captionSide\tStyle CSS",
      "contents": "captionSide"
    },
    {
      "trigger": "style.captionSide = '$0'\tStyle CSS",
      "contents": "style.captionSide = '$0'"
    },
    {
      "trigger": "captionSide = '$0'\tStyle CSS",
      "contents": "captionSide = '$0'"
    },
    {
      "trigger": "style.captionSide = 'top'\tStyle CSS",
      "contents": "style.captionSide = 'top'"
    },
    {
      "trigger": "captionSide = 'top'\tStyle CSS",
      "contents": "captionSide = 'top'"
    },
    {
      "trigger": "style.captionSide = 'bottom'\tStyle CSS",
      "contents": "style.captionSide = 'bottom'"
    },
    {
      "trigger": "captionSide = 'bottom'\tStyle CSS",
      "contents": "captionSide = 'bottom'"
    },
    {
      "trigger": "style.captionSide = 'initial'\tStyle CSS",
      "contents": "style.captionSide = 'initial'"
    },
    {
      "trigger": "captionSide = 'initial'\tStyle CSS",
      "contents": "captionSide = 'initial'"
    },
    {
      "trigger": "style.captionSide = 'inherit'\tStyle CSS",
      "contents": "style.captionSide = 'inherit'"
    },
    {
      "trigger": "captionSide = 'inherit'\tStyle CSS",
      "contents": "captionSide = 'inherit'"
    },
    {
      "trigger": "style.clear\tStyle CSS",
      "contents": "style.clear"
    },
    {
      "trigger": "clear\tStyle CSS",
      "contents": "clear"
    },
    {
      "trigger": "style.clear = '$0'\tStyle CSS",
      "contents": "style.clear = '$0'"
    },
    {
      "trigger": "clear = '$0'\tStyle CSS",
      "contents": "clear = '$0'"
    },
    {
      "trigger": "style.clear = 'none'\tStyle CSS",
      "contents": "style.clear = 'none'"
    },
    {
      "trigger": "clear = 'none'\tStyle CSS",
      "contents": "clear = 'none'"
    },
    {
      "trigger": "style.clear = 'left'\tStyle CSS",
      "contents": "style.clear = 'left'"
    },
    {
      "trigger": "clear = 'left'\tStyle CSS",
      "contents": "clear = 'left'"
    },
    {
      "trigger": "style.clear = 'right'\tStyle CSS",
      "contents": "style.clear = 'right'"
    },
    {
      "trigger": "clear = 'right'\tStyle CSS",
      "contents": "clear = 'right'"
    },
    {
      "trigger": "style.clear = 'both'\tStyle CSS",
      "contents": "style.clear = 'both'"
    },
    {
      "trigger": "clear = 'both'\tStyle CSS",
      "contents": "clear = 'both'"
    },
    {
      "trigger": "style.clear = 'initial'\tStyle CSS",
      "contents": "style.clear = 'initial'"
    },
    {
      "trigger": "clear = 'initial'\tStyle CSS",
      "contents": "clear = 'initial'"
    },
    {
      "trigger": "style.clear = 'inherit'\tStyle CSS",
      "contents": "style.clear = 'inherit'"
    },
    {
      "trigger": "clear = 'inherit'\tStyle CSS",
      "contents": "clear = 'inherit'"
    },
    {
      "trigger": "style.clip\tStyle CSS",
      "contents": "style.clip"
    },
    {
      "trigger": "clip\tStyle CSS",
      "contents": "clip"
    },
    {
      "trigger": "style.clip = '$0'\tStyle CSS",
      "contents": "style.clip = '$0'"
    },
    {
      "trigger": "clip = '$0'\tStyle CSS",
      "contents": "clip = '$0'"
    },
    {
      "trigger": "style.clip = 'auto'\tStyle CSS",
      "contents": "style.clip = 'auto'"
    },
    {
      "trigger": "clip = 'auto'\tStyle CSS",
      "contents": "clip = 'auto'"
    },
    {
      "trigger": "style.clip = 'rect(0 0 0 0)'\tStyle CSS",
      "contents": "style.clip = 'rect(0 0 0 0)'"
    },
    {
      "trigger": "clip = 'rect(0 0 0 0)'\tStyle CSS",
      "contents": "clip = 'rect(0 0 0 0)'"
    },
    {
      "trigger": "style.clip = 'initial'\tStyle CSS",
      "contents": "style.clip = 'initial'"
    },
    {
      "trigger": "clip = 'initial'\tStyle CSS",
      "contents": "clip = 'initial'"
    },
    {
      "trigger": "style.clip = 'inherit'\tStyle CSS",
      "contents": "style.clip = 'inherit'"
    },
    {
      "trigger": "clip = 'inherit'\tStyle CSS",
      "contents": "clip = 'inherit'"
    },
    {
      "trigger": "style.color\tStyle CSS",
      "contents": "style.color"
    },
    {
      "trigger": "color\tStyle CSS",
      "contents": "color"
    },
    {
      "trigger": "style.color = '$0'\tStyle CSS",
      "contents": "style.color = '$0'"
    },
    {
      "trigger": "color = '$0'\tStyle CSS",
      "contents": "color = '$0'"
    },
    {
      "trigger": "style.color = 'initial'\tStyle CSS",
      "contents": "style.color = 'initial'"
    },
    {
      "trigger": "color = 'initial'\tStyle CSS",
      "contents": "color = 'initial'"
    },
    {
      "trigger": "style.color = 'inherit'\tStyle CSS",
      "contents": "style.color = 'inherit'"
    },
    {
      "trigger": "color = 'inherit'\tStyle CSS",
      "contents": "color = 'inherit'"
    },
    {
      "trigger": "style.columnCount\tStyle CSS",
      "contents": "style.columnCount"
    },
    {
      "trigger": "columnCount\tStyle CSS",
      "contents": "columnCount"
    },
    {
      "trigger": "style.columnCount = '$0'\tStyle CSS",
      "contents": "style.columnCount = '$0'"
    },
    {
      "trigger": "columnCount = '$0'\tStyle CSS",
      "contents": "columnCount = '$0'"
    },
    {
      "trigger": "style.columnCount = 'auto'\tStyle CSS",
      "contents": "style.columnCount = 'auto'"
    },
    {
      "trigger": "columnCount = 'auto'\tStyle CSS",
      "contents": "columnCount = 'auto'"
    },
    {
      "trigger": "style.columnCount = 'initial'\tStyle CSS",
      "contents": "style.columnCount = 'initial'"
    },
    {
      "trigger": "columnCount = 'initial'\tStyle CSS",
      "contents": "columnCount = 'initial'"
    },
    {
      "trigger": "style.columnCount = 'inherit'\tStyle CSS",
      "contents": "style.columnCount = 'inherit'"
    },
    {
      "trigger": "columnCount = 'inherit'\tStyle CSS",
      "contents": "columnCount = 'inherit'"
    },
    {
      "trigger": "style.columnFill\tStyle CSS",
      "contents": "style.columnFill"
    },
    {
      "trigger": "columnFill\tStyle CSS",
      "contents": "columnFill"
    },
    {
      "trigger": "style.columnFill = '$0'\tStyle CSS",
      "contents": "style.columnFill = '$0'"
    },
    {
      "trigger": "columnFill = '$0'\tStyle CSS",
      "contents": "columnFill = '$0'"
    },
    {
      "trigger": "style.columnFill = 'balance'\tStyle CSS",
      "contents": "style.columnFill = 'balance'"
    },
    {
      "trigger": "columnFill = 'balance'\tStyle CSS",
      "contents": "columnFill = 'balance'"
    },
    {
      "trigger": "style.columnFill = 'auto'\tStyle CSS",
      "contents": "style.columnFill = 'auto'"
    },
    {
      "trigger": "columnFill = 'auto'\tStyle CSS",
      "contents": "columnFill = 'auto'"
    },
    {
      "trigger": "style.columnFill = 'initial'\tStyle CSS",
      "contents": "style.columnFill = 'initial'"
    },
    {
      "trigger": "columnFill = 'initial'\tStyle CSS",
      "contents": "columnFill = 'initial'"
    },
    {
      "trigger": "style.columnFill = 'inherit'\tStyle CSS",
      "contents": "style.columnFill = 'inherit'"
    },
    {
      "trigger": "columnFill = 'inherit'\tStyle CSS",
      "contents": "columnFill = 'inherit'"
    },
    {
      "trigger": "style.columnGap\tStyle CSS",
      "contents": "style.columnGap"
    },
    {
      "trigger": "columnGap\tStyle CSS",
      "contents": "columnGap"
    },
    {
      "trigger": "style.columnGap = '$0'\tStyle CSS",
      "contents": "style.columnGap = '$0'"
    },
    {
      "trigger": "columnGap = '$0'\tStyle CSS",
      "contents": "columnGap = '$0'"
    },
    {
      "trigger": "style.columnGap = 'normal'\tStyle CSS",
      "contents": "style.columnGap = 'normal'"
    },
    {
      "trigger": "columnGap = 'normal'\tStyle CSS",
      "contents": "columnGap = 'normal'"
    },
    {
      "trigger": "style.columnGap = 'initial'\tStyle CSS",
      "contents": "style.columnGap = 'initial'"
    },
    {
      "trigger": "columnGap = 'initial'\tStyle CSS",
      "contents": "columnGap = 'initial'"
    },
    {
      "trigger": "style.columnGap = 'inherit'\tStyle CSS",
      "contents": "style.columnGap = 'inherit'"
    },
    {
      "trigger": "columnGap = 'inherit'\tStyle CSS",
      "contents": "columnGap = 'inherit'"
    },
    {
      "trigger": "style.columnRule\tStyle CSS",
      "contents": "style.columnRule"
    },
    {
      "trigger": "columnRule\tStyle CSS",
      "contents": "columnRule"
    },
    {
      "trigger": "style.columnRule = '$0'\tStyle CSS",
      "contents": "style.columnRule = '$0'"
    },
    {
      "trigger": "columnRule = '$0'\tStyle CSS",
      "contents": "columnRule = '$0'"
    },
    {
      "trigger": "style.columnRule = 'initial'\tStyle CSS",
      "contents": "style.columnRule = 'initial'"
    },
    {
      "trigger": "columnRule = 'initial'\tStyle CSS",
      "contents": "columnRule = 'initial'"
    },
    {
      "trigger": "style.columnRule = 'inherit'\tStyle CSS",
      "contents": "style.columnRule = 'inherit'"
    },
    {
      "trigger": "columnRule = 'inherit'\tStyle CSS",
      "contents": "columnRule = 'inherit'"
    },
    {
      "trigger": "style.columnRuleColor\tStyle CSS",
      "contents": "style.columnRuleColor"
    },
    {
      "trigger": "columnRuleColor\tStyle CSS",
      "contents": "columnRuleColor"
    },
    {
      "trigger": "style.columnRuleColor = '$0'\tStyle CSS",
      "contents": "style.columnRuleColor = '$0'"
    },
    {
      "trigger": "columnRuleColor = '$0'\tStyle CSS",
      "contents": "columnRuleColor = '$0'"
    },
    {
      "trigger": "style.columnRuleColor = 'initial'\tStyle CSS",
      "contents": "style.columnRuleColor = 'initial'"
    },
    {
      "trigger": "columnRuleColor = 'initial'\tStyle CSS",
      "contents": "columnRuleColor = 'initial'"
    },
    {
      "trigger": "style.columnRuleColor = 'inherit'\tStyle CSS",
      "contents": "style.columnRuleColor = 'inherit'"
    },
    {
      "trigger": "columnRuleColor = 'inherit'\tStyle CSS",
      "contents": "columnRuleColor = 'inherit'"
    },
    {
      "trigger": "style.columnRuleStyle\tStyle CSS",
      "contents": "style.columnRuleStyle"
    },
    {
      "trigger": "columnRuleStyle\tStyle CSS",
      "contents": "columnRuleStyle"
    },
    {
      "trigger": "style.columnRuleStyle = '$0'\tStyle CSS",
      "contents": "style.columnRuleStyle = '$0'"
    },
    {
      "trigger": "columnRuleStyle = '$0'\tStyle CSS",
      "contents": "columnRuleStyle = '$0'"
    },
    {
      "trigger": "style.columnRuleStyle = 'none'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'none'"
    },
    {
      "trigger": "columnRuleStyle = 'none'\tStyle CSS",
      "contents": "columnRuleStyle = 'none'"
    },
    {
      "trigger": "style.columnRuleStyle = 'hidden'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'hidden'"
    },
    {
      "trigger": "columnRuleStyle = 'hidden'\tStyle CSS",
      "contents": "columnRuleStyle = 'hidden'"
    },
    {
      "trigger": "style.columnRuleStyle = 'dotted'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'dotted'"
    },
    {
      "trigger": "columnRuleStyle = 'dotted'\tStyle CSS",
      "contents": "columnRuleStyle = 'dotted'"
    },
    {
      "trigger": "style.columnRuleStyle = 'dashed'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'dashed'"
    },
    {
      "trigger": "columnRuleStyle = 'dashed'\tStyle CSS",
      "contents": "columnRuleStyle = 'dashed'"
    },
    {
      "trigger": "style.columnRuleStyle = 'solid'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'solid'"
    },
    {
      "trigger": "columnRuleStyle = 'solid'\tStyle CSS",
      "contents": "columnRuleStyle = 'solid'"
    },
    {
      "trigger": "style.columnRuleStyle = 'double'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'double'"
    },
    {
      "trigger": "columnRuleStyle = 'double'\tStyle CSS",
      "contents": "columnRuleStyle = 'double'"
    },
    {
      "trigger": "style.columnRuleStyle = 'groove'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'groove'"
    },
    {
      "trigger": "columnRuleStyle = 'groove'\tStyle CSS",
      "contents": "columnRuleStyle = 'groove'"
    },
    {
      "trigger": "style.columnRuleStyle = 'ridge'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'ridge'"
    },
    {
      "trigger": "columnRuleStyle = 'ridge'\tStyle CSS",
      "contents": "columnRuleStyle = 'ridge'"
    },
    {
      "trigger": "style.columnRuleStyle = 'inset'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'inset'"
    },
    {
      "trigger": "columnRuleStyle = 'inset'\tStyle CSS",
      "contents": "columnRuleStyle = 'inset'"
    },
    {
      "trigger": "style.columnRuleStyle = 'outset'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'outset'"
    },
    {
      "trigger": "columnRuleStyle = 'outset'\tStyle CSS",
      "contents": "columnRuleStyle = 'outset'"
    },
    {
      "trigger": "style.columnRuleStyle = 'initial'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'initial'"
    },
    {
      "trigger": "columnRuleStyle = 'initial'\tStyle CSS",
      "contents": "columnRuleStyle = 'initial'"
    },
    {
      "trigger": "style.columnRuleStyle = 'inherit'\tStyle CSS",
      "contents": "style.columnRuleStyle = 'inherit'"
    },
    {
      "trigger": "columnRuleStyle = 'inherit'\tStyle CSS",
      "contents": "columnRuleStyle = 'inherit'"
    },
    {
      "trigger": "style.columnRuleWidth\tStyle CSS",
      "contents": "style.columnRuleWidth"
    },
    {
      "trigger": "columnRuleWidth\tStyle CSS",
      "contents": "columnRuleWidth"
    },
    {
      "trigger": "style.columnRuleWidth = '$0'\tStyle CSS",
      "contents": "style.columnRuleWidth = '$0'"
    },
    {
      "trigger": "columnRuleWidth = '$0'\tStyle CSS",
      "contents": "columnRuleWidth = '$0'"
    },
    {
      "trigger": "style.columnRuleWidth = 'medium'\tStyle CSS",
      "contents": "style.columnRuleWidth = 'medium'"
    },
    {
      "trigger": "columnRuleWidth = 'medium'\tStyle CSS",
      "contents": "columnRuleWidth = 'medium'"
    },
    {
      "trigger": "style.columnRuleWidth = 'thin'\tStyle CSS",
      "contents": "style.columnRuleWidth = 'thin'"
    },
    {
      "trigger": "columnRuleWidth = 'thin'\tStyle CSS",
      "contents": "columnRuleWidth = 'thin'"
    },
    {
      "trigger": "style.columnRuleWidth = 'thick'\tStyle CSS",
      "contents": "style.columnRuleWidth = 'thick'"
    },
    {
      "trigger": "columnRuleWidth = 'thick'\tStyle CSS",
      "contents": "columnRuleWidth = 'thick'"
    },
    {
      "trigger": "style.columnRuleWidth = 'initial'\tStyle CSS",
      "contents": "style.columnRuleWidth = 'initial'"
    },
    {
      "trigger": "columnRuleWidth = 'initial'\tStyle CSS",
      "contents": "columnRuleWidth = 'initial'"
    },
    {
      "trigger": "style.columnRuleWidth = 'inherit'\tStyle CSS",
      "contents": "style.columnRuleWidth = 'inherit'"
    },
    {
      "trigger": "columnRuleWidth = 'inherit'\tStyle CSS",
      "contents": "columnRuleWidth = 'inherit'"
    },
    {
      "trigger": "style.columns\tStyle CSS",
      "contents": "style.columns"
    },
    {
      "trigger": "columns\tStyle CSS",
      "contents": "columns"
    },
    {
      "trigger": "style.columns = '$0'\tStyle CSS",
      "contents": "style.columns = '$0'"
    },
    {
      "trigger": "columns = '$0'\tStyle CSS",
      "contents": "columns = '$0'"
    },
    {
      "trigger": "style.columns = 'auto'\tStyle CSS",
      "contents": "style.columns = 'auto'"
    },
    {
      "trigger": "columns = 'auto'\tStyle CSS",
      "contents": "columns = 'auto'"
    },
    {
      "trigger": "style.columns = 'initial'\tStyle CSS",
      "contents": "style.columns = 'initial'"
    },
    {
      "trigger": "columns = 'initial'\tStyle CSS",
      "contents": "columns = 'initial'"
    },
    {
      "trigger": "style.columns = 'inherit'\tStyle CSS",
      "contents": "style.columns = 'inherit'"
    },
    {
      "trigger": "columns = 'inherit'\tStyle CSS",
      "contents": "columns = 'inherit'"
    },

    {
      "trigger": "style.columnSpan\tStyle CSS",
      "contents": "style.columnSpan"
    },
    {
      "trigger": "columnSpan\tStyle CSS",
      "contents": "columnSpan"
    },
    {
      "trigger": "style.columnSpan = '$0'\tStyle CSS",
      "contents": "style.columnSpan = '$0'"
    },
    {
      "trigger": "columnSpan = '$0'\tStyle CSS",
      "contents": "columnSpan = '$0'"
    },
    {
      "trigger": "style.columnSpan = '1'\tStyle CSS",
      "contents": "style.columnSpan = '1'"
    },
    {
      "trigger": "columnSpan = '1'\tStyle CSS",
      "contents": "columnSpan = '1'"
    },
    {
      "trigger": "style.columnSpan = 'all'\tStyle CSS",
      "contents": "style.columnSpan = 'all'"
    },
    {
      "trigger": "columnSpan = 'all'\tStyle CSS",
      "contents": "columnSpan = 'all'"
    },
    {
      "trigger": "style.columnSpan = 'initial'\tStyle CSS",
      "contents": "style.columnSpan = 'initial'"
    },
    {
      "trigger": "columnSpan = 'initial'\tStyle CSS",
      "contents": "columnSpan = 'initial'"
    },
    {
      "trigger": "style.columnSpan = 'inherit'\tStyle CSS",
      "contents": "style.columnSpan = 'inherit'"
    },
    {
      "trigger": "columnSpan = 'inherit'\tStyle CSS",
      "contents": "columnSpan = 'inherit'"
    },
    {
      "trigger": "style.columnWidth\tStyle CSS",
      "contents": "style.columnWidth"
    },
    {
      "trigger": "columnWidth\tStyle CSS",
      "contents": "columnWidth"
    },
    {
      "trigger": "style.columnWidth = '$0'\tStyle CSS",
      "contents": "style.columnWidth = '$0'"
    },
    {
      "trigger": "columnWidth = '$0'\tStyle CSS",
      "contents": "columnWidth = '$0'"
    },
    {
      "trigger": "style.columnWidth = 'auto'\tStyle CSS",
      "contents": "style.columnWidth = 'auto'"
    },
    {
      "trigger": "columnWidth = 'auto'\tStyle CSS",
      "contents": "columnWidth = 'auto'"
    },
    {
      "trigger": "style.columnWidth = 'initial'\tStyle CSS",
      "contents": "style.columnWidth = 'initial'"
    },
    {
      "trigger": "columnWidth = 'initial'\tStyle CSS",
      "contents": "columnWidth = 'initial'"
    },
    {
      "trigger": "style.columnWidth = 'inherit'\tStyle CSS",
      "contents": "style.columnWidth = 'inherit'"
    },
    {
      "trigger": "columnWidth = 'inherit'\tStyle CSS",
      "contents": "columnWidth = 'inherit'"
    },
    {
      "trigger": "style.counterIncrement\tStyle CSS",
      "contents": "style.counterIncrement"
    },
    {
      "trigger": "counterIncrement\tStyle CSS",
      "contents": "counterIncrement"
    },
    {
      "trigger": "style.counterIncrement = '$0'\tStyle CSS",
      "contents": "style.counterIncrement = '$0'"
    },
    {
      "trigger": "counterIncrement = '$0'\tStyle CSS",
      "contents": "counterIncrement = '$0'"
    },
    {
      "trigger": "style.counterIncrement = 'none'\tStyle CSS",
      "contents": "style.counterIncrement = 'none'"
    },
    {
      "trigger": "counterIncrement = 'none'\tStyle CSS",
      "contents": "counterIncrement = 'none'"
    },
    {
      "trigger": "style.counterIncrement = 'initial'\tStyle CSS",
      "contents": "style.counterIncrement = 'initial'"
    },
    {
      "trigger": "counterIncrement = 'initial'\tStyle CSS",
      "contents": "counterIncrement = 'initial'"
    },
    {
      "trigger": "style.counterIncrement = 'inherit'\tStyle CSS",
      "contents": "style.counterIncrement = 'inherit'"
    },
    {
      "trigger": "counterIncrement = 'inherit'\tStyle CSS",
      "contents": "counterIncrement = 'inherit'"
    },
    {
      "trigger": "style.counterReset\tStyle CSS",
      "contents": "style.counterReset"
    },
    {
      "trigger": "counterReset\tStyle CSS",
      "contents": "counterReset"
    },
    {
      "trigger": "style.counterReset = '$0'\tStyle CSS",
      "contents": "style.counterReset = '$0'"
    },
    {
      "trigger": "counterReset = '$0'\tStyle CSS",
      "contents": "counterReset = '$0'"
    },
    {
      "trigger": "style.counterReset = 'none'\tStyle CSS",
      "contents": "style.counterReset = 'none'"
    },
    {
      "trigger": "counterReset = 'none'\tStyle CSS",
      "contents": "counterReset = 'none'"
    },
    {
      "trigger": "style.counterReset = 'initial'\tStyle CSS",
      "contents": "style.counterReset = 'initial'"
    },
    {
      "trigger": "counterReset = 'initial'\tStyle CSS",
      "contents": "counterReset = 'initial'"
    },
    {
      "trigger": "style.counterReset = 'inherit'\tStyle CSS",
      "contents": "style.counterReset = 'inherit'"
    },
    {
      "trigger": "counterReset = 'inherit'\tStyle CSS",
      "contents": "counterReset = 'inherit'"
    },
    {
      "trigger": "style.cursor\tStyle CSS",
      "contents": "style.cursor"
    },
    {
      "trigger": "cursor\tStyle CSS",
      "contents": "cursor"
    },
    {
      "trigger": "style.cursor = '$0'\tStyle CSS",
      "contents": "style.cursor = '$0'"
    },
    {
      "trigger": "cursor = '$0'\tStyle CSS",
      "contents": "cursor = '$0'"
    },
    {
      "trigger": "style.cursor = 'alias'\tStyle CSS",
      "contents": "style.cursor = 'alias'"
    },
    {
      "trigger": "cursor = 'alias'\tStyle CSS",
      "contents": "cursor = 'alias'"
    },
    {
      "trigger": "style.cursor = 'all-scroll'\tStyle CSS",
      "contents": "style.cursor = 'all-scroll'"
    },
    {
      "trigger": "cursor = 'all-scroll'\tStyle CSS",
      "contents": "cursor = 'all-scroll'"
    },
    {
      "trigger": "style.cursor = 'auto'\tStyle CSS",
      "contents": "style.cursor = 'auto'"
    },
    {
      "trigger": "cursor = 'auto'\tStyle CSS",
      "contents": "cursor = 'auto'"
    },
    {
      "trigger": "style.cursor = 'cell'\tStyle CSS",
      "contents": "style.cursor = 'cell'"
    },
    {
      "trigger": "cursor = 'cell'\tStyle CSS",
      "contents": "cursor = 'cell'"
    },
    {
      "trigger": "style.cursor = 'context-menu'\tStyle CSS",
      "contents": "style.cursor = 'context-menu'"
    },
    {
      "trigger": "cursor = 'context-menu'\tStyle CSS",
      "contents": "cursor = 'context-menu'"
    },
    {
      "trigger": "style.cursor = 'col-resize'\tStyle CSS",
      "contents": "style.cursor = 'col-resize'"
    },
    {
      "trigger": "cursor = 'col-resize'\tStyle CSS",
      "contents": "cursor = 'col-resize'"
    },
    {
      "trigger": "style.cursor = 'copy'\tStyle CSS",
      "contents": "style.cursor = 'copy'"
    },
    {
      "trigger": "cursor = 'copy'\tStyle CSS",
      "contents": "cursor = 'copy'"
    },
    {
      "trigger": "style.cursor = 'crosshair'\tStyle CSS",
      "contents": "style.cursor = 'crosshair'"
    },
    {
      "trigger": "cursor = 'crosshair'\tStyle CSS",
      "contents": "cursor = 'crosshair'"
    },
    {
      "trigger": "style.cursor = 'default'\tStyle CSS",
      "contents": "style.cursor = 'default'"
    },
    {
      "trigger": "cursor = 'default'\tStyle CSS",
      "contents": "cursor = 'default'"
    },
    {
      "trigger": "style.cursor = 'e-resize'\tStyle CSS",
      "contents": "style.cursor = 'e-resize'"
    },
    {
      "trigger": "cursor = 'e-resize'\tStyle CSS",
      "contents": "cursor = 'e-resize'"
    },
    {
      "trigger": "style.cursor = 'ew-resize'\tStyle CSS",
      "contents": "style.cursor = 'ew-resize'"
    },
    {
      "trigger": "cursor = 'ew-resize'\tStyle CSS",
      "contents": "cursor = 'ew-resize'"
    },
    {
      "trigger": "style.cursor = 'help'\tStyle CSS",
      "contents": "style.cursor = 'help'"
    },
    {
      "trigger": "cursor = 'help'\tStyle CSS",
      "contents": "cursor = 'help'"
    },
    {
      "trigger": "style.cursor = 'move'\tStyle CSS",
      "contents": "style.cursor = 'move'"
    },
    {
      "trigger": "cursor = 'move'\tStyle CSS",
      "contents": "cursor = 'move'"
    },
    {
      "trigger": "style.cursor = 'n-resize'\tStyle CSS",
      "contents": "style.cursor = 'n-resize'"
    },
    {
      "trigger": "cursor = 'n-resize'\tStyle CSS",
      "contents": "cursor = 'n-resize'"
    },
    {
      "trigger": "style.cursor = 'ne-resize'\tStyle CSS",
      "contents": "style.cursor = 'ne-resize'"
    },
    {
      "trigger": "cursor = 'ne-resize'\tStyle CSS",
      "contents": "cursor = 'ne-resize'"
    },
    {
      "trigger": "style.cursor = 'nesw-resize'\tStyle CSS",
      "contents": "style.cursor = 'nesw-resize'"
    },
    {
      "trigger": "cursor = 'nesw-resize'\tStyle CSS",
      "contents": "cursor = 'nesw-resize'"
    },
    {
      "trigger": "style.cursor = 'ns-resize'\tStyle CSS",
      "contents": "style.cursor = 'ns-resize'"
    },
    {
      "trigger": "cursor = 'ns-resize'\tStyle CSS",
      "contents": "cursor = 'ns-resize'"
    },
    {
      "trigger": "style.cursor = 'nw-resize'\tStyle CSS",
      "contents": "style.cursor = 'nw-resize'"
    },
    {
      "trigger": "cursor = 'nw-resize'\tStyle CSS",
      "contents": "cursor = 'nw-resize'"
    },
    {
      "trigger": "style.cursor = 'nwse-resize'\tStyle CSS",
      "contents": "style.cursor = 'nwse-resize'"
    },
    {
      "trigger": "cursor = 'nwse-resize'\tStyle CSS",
      "contents": "cursor = 'nwse-resize'"
    },
    {
      "trigger": "style.cursor = 'no-drop'\tStyle CSS",
      "contents": "style.cursor = 'no-drop'"
    },
    {
      "trigger": "cursor = 'no-drop'\tStyle CSS",
      "contents": "cursor = 'no-drop'"
    },
    {
      "trigger": "style.cursor = 'none'\tStyle CSS",
      "contents": "style.cursor = 'none'"
    },
    {
      "trigger": "cursor = 'none'\tStyle CSS",
      "contents": "cursor = 'none'"
    },
    {
      "trigger": "style.cursor = 'not-allowed'\tStyle CSS",
      "contents": "style.cursor = 'not-allowed'"
    },
    {
      "trigger": "cursor = 'not-allowed'\tStyle CSS",
      "contents": "cursor = 'not-allowed'"
    },
    {
      "trigger": "style.cursor = 'pointer'\tStyle CSS",
      "contents": "style.cursor = 'pointer'"
    },
    {
      "trigger": "cursor = 'pointer'\tStyle CSS",
      "contents": "cursor = 'pointer'"
    },
    {
      "trigger": "style.cursor = 'progress'\tStyle CSS",
      "contents": "style.cursor = 'progress'"
    },
    {
      "trigger": "cursor = 'progress'\tStyle CSS",
      "contents": "cursor = 'progress'"
    },
    {
      "trigger": "style.cursor = 'row-resize'\tStyle CSS",
      "contents": "style.cursor = 'row-resize'"
    },
    {
      "trigger": "cursor = 'row-resize'\tStyle CSS",
      "contents": "cursor = 'row-resize'"
    },
    {
      "trigger": "style.cursor = 's-resize'\tStyle CSS",
      "contents": "style.cursor = 's-resize'"
    },
    {
      "trigger": "cursor = 's-resize'\tStyle CSS",
      "contents": "cursor = 's-resize'"
    },
    {
      "trigger": "style.cursor = 'se-resize'\tStyle CSS",
      "contents": "style.cursor = 'se-resize'"
    },
    {
      "trigger": "cursor = 'se-resize'\tStyle CSS",
      "contents": "cursor = 'se-resize'"
    },
    {
      "trigger": "style.cursor = 'sw-resize'\tStyle CSS",
      "contents": "style.cursor = 'sw-resize'"
    },
    {
      "trigger": "cursor = 'sw-resize'\tStyle CSS",
      "contents": "cursor = 'sw-resize'"
    },
    {
      "trigger": "style.cursor = 'text'\tStyle CSS",
      "contents": "style.cursor = 'text'"
    },
    {
      "trigger": "cursor = 'text'\tStyle CSS",
      "contents": "cursor = 'text'"
    },
    {
      "trigger": "style.cursor = 'vertical-text'\tStyle CSS",
      "contents": "style.cursor = 'vertical-text'"
    },
    {
      "trigger": "cursor = 'vertical-text'\tStyle CSS",
      "contents": "cursor = 'vertical-text'"
    },
    {
      "trigger": "style.cursor = 'w-resize'\tStyle CSS",
      "contents": "style.cursor = 'w-resize'"
    },
    {
      "trigger": "cursor = 'w-resize'\tStyle CSS",
      "contents": "cursor = 'w-resize'"
    },
    {
      "trigger": "style.cursor = 'wait'\tStyle CSS",
      "contents": "style.cursor = 'wait'"
    },
    {
      "trigger": "cursor = 'wait'\tStyle CSS",
      "contents": "cursor = 'wait'"
    },
    {
      "trigger": "style.cursor = 'zoom-in'\tStyle CSS",
      "contents": "style.cursor = 'zoom-in'"
    },
    {
      "trigger": "cursor = 'zoom-in'\tStyle CSS",
      "contents": "cursor = 'zoom-in'"
    },
    {
      "trigger": "style.cursor = 'zoom-out'\tStyle CSS",
      "contents": "style.cursor = 'zoom-out'"
    },
    {
      "trigger": "cursor = 'zoom-out'\tStyle CSS",
      "contents": "cursor = 'zoom-out'"
    },
    {
      "trigger": "style.cursor = 'initial'\tStyle CSS",
      "contents": "style.cursor = 'initial'"
    },
    {
      "trigger": "cursor = 'initial'\tStyle CSS",
      "contents": "cursor = 'initial'"
    },
    {
      "trigger": "style.cursor = 'inherit'\tStyle CSS",
      "contents": "style.cursor = 'inherit'"
    },
    {
      "trigger": "cursor = 'inherit'\tStyle CSS",
      "contents": "cursor = 'inherit'"
    },
    {
      "trigger": "style.direction\tStyle CSS",
      "contents": "style.direction"
    },
    {
      "trigger": "direction\tStyle CSS",
      "contents": "direction"
    },
    {
      "trigger": "style.direction = '$0'\tStyle CSS",
      "contents": "style.direction = '$0'"
    },
    {
      "trigger": "direction = '$0'\tStyle CSS",
      "contents": "direction = '$0'"
    },
    {
      "trigger": "style.direction = 'ltr'\tStyle CSS",
      "contents": "style.direction = 'ltr'"
    },
    {
      "trigger": "direction = 'ltr'\tStyle CSS",
      "contents": "direction = 'ltr'"
    },
    {
      "trigger": "style.direction = 'rtl'\tStyle CSS",
      "contents": "style.direction = 'rtl'"
    },
    {
      "trigger": "direction = 'rtl'\tStyle CSS",
      "contents": "direction = 'rtl'"
    },
    {
      "trigger": "style.direction = 'initial'\tStyle CSS",
      "contents": "style.direction = 'initial'"
    },
    {
      "trigger": "direction = 'initial'\tStyle CSS",
      "contents": "direction = 'initial'"
    },
    {
      "trigger": "style.direction = 'inherit'\tStyle CSS",
      "contents": "style.direction = 'inherit'"
    },
    {
      "trigger": "direction = 'inherit'\tStyle CSS",
      "contents": "direction = 'inherit'"
    },
    {
      "trigger": "style.display\tStyle CSS",
      "contents": "style.display"
    },
    {
      "trigger": "display\tStyle CSS",
      "contents": "display"
    },
    {
      "trigger": "style.display = '$0'\tStyle CSS",
      "contents": "style.display = '$0'"
    },
    {
      "trigger": "display = '$0'\tStyle CSS",
      "contents": "display = '$0'"
    },
    {
      "trigger": "style.display = 'block'\tStyle CSS",
      "contents": "style.display = 'block'"
    },
    {
      "trigger": "display = 'block'\tStyle CSS",
      "contents": "display = 'block'"
    },
    {
      "trigger": "style.display = 'compact'\tStyle CSS",
      "contents": "style.display = 'compact'"
    },
    {
      "trigger": "display = 'compact'\tStyle CSS",
      "contents": "display = 'compact'"
    },
    {
      "trigger": "style.display = 'flex'\tStyle CSS",
      "contents": "style.display = 'flex'"
    },
    {
      "trigger": "display = 'flex'\tStyle CSS",
      "contents": "display = 'flex'"
    },
    {
      "trigger": "style.display = 'inherit'\tStyle CSS",
      "contents": "style.display = 'inherit'"
    },
    {
      "trigger": "display = 'inherit'\tStyle CSS",
      "contents": "display = 'inherit'"
    },
    {
      "trigger": "style.display = 'inline'\tStyle CSS",
      "contents": "style.display = 'inline'"
    },
    {
      "trigger": "display = 'inline'\tStyle CSS",
      "contents": "display = 'inline'"
    },
    {
      "trigger": "style.display = 'inline-block'\tStyle CSS",
      "contents": "style.display = 'inline-block'"
    },
    {
      "trigger": "display = 'inline-block'\tStyle CSS",
      "contents": "display = 'inline-block'"
    },
    {
      "trigger": "style.display = 'inline-flex'\tStyle CSS",
      "contents": "style.display = 'inline-flex'"
    },
    {
      "trigger": "display = 'inline-flex'\tStyle CSS",
      "contents": "display = 'inline-flex'"
    },
    {
      "trigger": "style.display = 'inline-table'\tStyle CSS",
      "contents": "style.display = 'inline-table'"
    },
    {
      "trigger": "display = 'inline-table'\tStyle CSS",
      "contents": "display = 'inline-table'"
    },
    {
      "trigger": "style.display = 'list-item'\tStyle CSS",
      "contents": "style.display = 'list-item'"
    },
    {
      "trigger": "display = 'list-item'\tStyle CSS",
      "contents": "display = 'list-item'"
    },
    {
      "trigger": "style.display = 'marker'\tStyle CSS",
      "contents": "style.display = 'marker'"
    },
    {
      "trigger": "display = 'marker'\tStyle CSS",
      "contents": "display = 'marker'"
    },
    {
      "trigger": "style.display = 'none'\tStyle CSS",
      "contents": "style.display = 'none'"
    },
    {
      "trigger": "display = 'none'\tStyle CSS",
      "contents": "display = 'none'"
    },
    {
      "trigger": "style.display = 'run-in'\tStyle CSS",
      "contents": "style.display = 'run-in'"
    },
    {
      "trigger": "display = 'run-in'\tStyle CSS",
      "contents": "display = 'run-in'"
    },
    {
      "trigger": "style.display = 'table'\tStyle CSS",
      "contents": "style.display = 'table'"
    },
    {
      "trigger": "display = 'table'\tStyle CSS",
      "contents": "display = 'table'"
    },
    {
      "trigger": "style.display = 'table-caption'\tStyle CSS",
      "contents": "style.display = 'table-caption'"
    },
    {
      "trigger": "display = 'table-caption'\tStyle CSS",
      "contents": "display = 'table-caption'"
    },
    {
      "trigger": "style.display = 'table-cell'\tStyle CSS",
      "contents": "style.display = 'table-cell'"
    },
    {
      "trigger": "display = 'table-cell'\tStyle CSS",
      "contents": "display = 'table-cell'"
    },
    {
      "trigger": "style.display = 'table-column'\tStyle CSS",
      "contents": "style.display = 'table-column'"
    },
    {
      "trigger": "display = 'table-column'\tStyle CSS",
      "contents": "display = 'table-column'"
    },
    {
      "trigger": "style.display = 'table-column-group'\tStyle CSS",
      "contents": "style.display = 'table-column-group'"
    },
    {
      "trigger": "display = 'table-column-group'\tStyle CSS",
      "contents": "display = 'table-column-group'"
    },
    {
      "trigger": "style.display = 'table-footer-group'\tStyle CSS",
      "contents": "style.display = 'table-footer-group'"
    },
    {
      "trigger": "display = 'table-footer-group'\tStyle CSS",
      "contents": "display = 'table-footer-group'"
    },
    {
      "trigger": "style.display = 'table-header-group'\tStyle CSS",
      "contents": "style.display = 'table-header-group'"
    },
    {
      "trigger": "display = 'table-header-group'\tStyle CSS",
      "contents": "display = 'table-header-group'"
    },
    {
      "trigger": "style.display = 'table-row'\tStyle CSS",
      "contents": "style.display = 'table-row'"
    },
    {
      "trigger": "display = 'table-row'\tStyle CSS",
      "contents": "display = 'table-row'"
    },
    {
      "trigger": "style.display = 'table-row-group'\tStyle CSS",
      "contents": "style.display = 'table-row-group'"
    },
    {
      "trigger": "display = 'table-row-group'\tStyle CSS",
      "contents": "display = 'table-row-group'"
    },
    {
      "trigger": "style.display = 'initial'\tStyle CSS",
      "contents": "style.display = 'initial'"
    },
    {
      "trigger": "display = 'initial'\tStyle CSS",
      "contents": "display = 'initial'"
    },
    {
      "trigger": "style.display = 'inherit'\tStyle CSS",
      "contents": "style.display = 'inherit'"
    },
    {
      "trigger": "display = 'inherit'\tStyle CSS",
      "contents": "display = 'inherit'"
    },
    {
      "trigger": "style.emptyCells\tStyle CSS",
      "contents": "style.emptyCells"
    },
    {
      "trigger": "emptyCells\tStyle CSS",
      "contents": "emptyCells"
    },
    {
      "trigger": "style.emptyCells = '$0'\tStyle CSS",
      "contents": "style.emptyCells = '$0'"
    },
    {
      "trigger": "emptyCells = '$0'\tStyle CSS",
      "contents": "emptyCells = '$0'"
    },
    {
      "trigger": "style.emptyCells = 'show'\tStyle CSS",
      "contents": "style.emptyCells = 'show'"
    },
    {
      "trigger": "emptyCells = 'show'\tStyle CSS",
      "contents": "emptyCells = 'show'"
    },
    {
      "trigger": "style.emptyCells = 'hide'\tStyle CSS",
      "contents": "style.emptyCells = 'hide'"
    },
    {
      "trigger": "emptyCells = 'hide'\tStyle CSS",
      "contents": "emptyCells = 'hide'"
    },
    {
      "trigger": "style.emptyCells = 'initial'\tStyle CSS",
      "contents": "style.emptyCells = 'initial'"
    },
    {
      "trigger": "emptyCells = 'initial'\tStyle CSS",
      "contents": "emptyCells = 'initial'"
    },
    {
      "trigger": "style.emptyCells = 'inherit'\tStyle CSS",
      "contents": "style.emptyCells = 'inherit'"
    },
    {
      "trigger": "emptyCells = 'inherit'\tStyle CSS",
      "contents": "emptyCells = 'inherit'"
    },
    {
      "trigger": "style.flex\tStyle CSS",
      "contents": "style.flex"
    },
    {
      "trigger": "flex\tStyle CSS",
      "contents": "flex"
    },
    {
      "trigger": "style.flex = '$0'\tStyle CSS",
      "contents": "style.flex = '$0'"
    },
    {
      "trigger": "flex = '$0'\tStyle CSS",
      "contents": "flex = '$0'"
    },
    {
      "trigger": "style.flex = 'auto'\tStyle CSS",
      "contents": "style.flex = 'auto'"
    },
    {
      "trigger": "flex = 'auto'\tStyle CSS",
      "contents": "flex = 'auto'"
    },
    {
      "trigger": "style.flex = 'initial'\tStyle CSS",
      "contents": "style.flex = 'initial'"
    },
    {
      "trigger": "flex = 'initial'\tStyle CSS",
      "contents": "flex = 'initial'"
    },
    {
      "trigger": "style.flex = 'none'\tStyle CSS",
      "contents": "style.flex = 'none'"
    },
    {
      "trigger": "flex = 'none'\tStyle CSS",
      "contents": "flex = 'none'"
    },
    {
      "trigger": "style.flex = 'inherit'\tStyle CSS",
      "contents": "style.flex = 'inherit'"
    },
    {
      "trigger": "flex = 'inherit'\tStyle CSS",
      "contents": "flex = 'inherit'"
    },
    {
      "trigger": "style.flexBasis\tStyle CSS",
      "contents": "style.flexBasis"
    },
    {
      "trigger": "flexBasis\tStyle CSS",
      "contents": "flexBasis"
    },
    {
      "trigger": "style.flexBasis = '$0'\tStyle CSS",
      "contents": "style.flexBasis = '$0'"
    },
    {
      "trigger": "flexBasis = '$0'\tStyle CSS",
      "contents": "flexBasis = '$0'"
    },
    {
      "trigger": "style.flexBasis = 'auto'\tStyle CSS",
      "contents": "style.flexBasis = 'auto'"
    },
    {
      "trigger": "flexBasis = 'auto'\tStyle CSS",
      "contents": "flexBasis = 'auto'"
    },
    {
      "trigger": "style.flexBasis = 'initial'\tStyle CSS",
      "contents": "style.flexBasis = 'initial'"
    },
    {
      "trigger": "flexBasis = 'initial'\tStyle CSS",
      "contents": "flexBasis = 'initial'"
    },
    {
      "trigger": "style.flexBasis = 'inherit'\tStyle CSS",
      "contents": "style.flexBasis = 'inherit'"
    },
    {
      "trigger": "flexBasis = 'inherit'\tStyle CSS",
      "contents": "flexBasis = 'inherit'"
    },
    {
      "trigger": "style.flexDirection\tStyle CSS",
      "contents": "style.flexDirection"
    },
    {
      "trigger": "flexDirection\tStyle CSS",
      "contents": "flexDirection"
    },
    {
      "trigger": "style.flexDirection = '$0'\tStyle CSS",
      "contents": "style.flexDirection = '$0'"
    },
    {
      "trigger": "flexDirection = '$0'\tStyle CSS",
      "contents": "flexDirection = '$0'"
    },
    {
      "trigger": "style.flexDirection = 'row'\tStyle CSS",
      "contents": "style.flexDirection = 'row'"
    },
    {
      "trigger": "flexDirection = 'row'\tStyle CSS",
      "contents": "flexDirection = 'row'"
    },
    {
      "trigger": "style.flexDirection = 'row-reverse'\tStyle CSS",
      "contents": "style.flexDirection = 'row-reverse'"
    },
    {
      "trigger": "flexDirection = 'row-reverse'\tStyle CSS",
      "contents": "flexDirection = 'row-reverse'"
    },
    {
      "trigger": "style.flexDirection = 'column'\tStyle CSS",
      "contents": "style.flexDirection = 'column'"
    },
    {
      "trigger": "flexDirection = 'column'\tStyle CSS",
      "contents": "flexDirection = 'column'"
    },
    {
      "trigger": "style.flexDirection = 'column-reverse'\tStyle CSS",
      "contents": "style.flexDirection = 'column-reverse'"
    },
    {
      "trigger": "flexDirection = 'column-reverse'\tStyle CSS",
      "contents": "flexDirection = 'column-reverse'"
    },
    {
      "trigger": "style.flexDirection = 'initial'\tStyle CSS",
      "contents": "style.flexDirection = 'initial'"
    },
    {
      "trigger": "flexDirection = 'initial'\tStyle CSS",
      "contents": "flexDirection = 'initial'"
    },
    {
      "trigger": "style.flexDirection = 'inherit'\tStyle CSS",
      "contents": "style.flexDirection = 'inherit'"
    },
    {
      "trigger": "flexDirection = 'inherit'\tStyle CSS",
      "contents": "flexDirection = 'inherit'"
    },
    {
      "trigger": "style.flexFlow\tStyle CSS",
      "contents": "style.flexFlow"
    },
    {
      "trigger": "flexFlow\tStyle CSS",
      "contents": "flexFlow"
    },
    {
      "trigger": "style.flexFlow = '$0'\tStyle CSS",
      "contents": "style.flexFlow = '$0'"
    },
    {
      "trigger": "flexFlow = '$0'\tStyle CSS",
      "contents": "flexFlow = '$0'"
    },
    {
      "trigger": "style.flexFlow = 'initial'\tStyle CSS",
      "contents": "style.flexFlow = 'initial'"
    },
    {
      "trigger": "flexFlow = 'initial'\tStyle CSS",
      "contents": "flexFlow = 'initial'"
    },
    {
      "trigger": "style.flexFlow = 'inherit'\tStyle CSS",
      "contents": "style.flexFlow = 'inherit'"
    },
    {
      "trigger": "flexFlow = 'inherit'\tStyle CSS",
      "contents": "flexFlow = 'inherit'"
    },
    {
      "trigger": "style.flexGrow\tStyle CSS",
      "contents": "style.flexGrow"
    },
    {
      "trigger": "flexGrow\tStyle CSS",
      "contents": "flexGrow"
    },
    {
      "trigger": "style.flexGrow = '$0'\tStyle CSS",
      "contents": "style.flexGrow = '$0'"
    },
    {
      "trigger": "flexGrow = '$0'\tStyle CSS",
      "contents": "flexGrow = '$0'"
    },
    {
      "trigger": "style.flexGrow = 'initial'\tStyle CSS",
      "contents": "style.flexGrow = 'initial'"
    },
    {
      "trigger": "flexGrow = 'initial'\tStyle CSS",
      "contents": "flexGrow = 'initial'"
    },
    {
      "trigger": "style.flexGrow = 'inherit'\tStyle CSS",
      "contents": "style.flexGrow = 'inherit'"
    },
    {
      "trigger": "flexGrow = 'inherit'\tStyle CSS",
      "contents": "flexGrow = 'inherit'"
    },
    {
      "trigger": "style.flexShrink\tStyle CSS",
      "contents": "style.flexShrink"
    },
    {
      "trigger": "flexShrink\tStyle CSS",
      "contents": "flexShrink"
    },
    {
      "trigger": "style.flexShrink = '$0'\tStyle CSS",
      "contents": "style.flexShrink = '$0'"
    },
    {
      "trigger": "flexShrink = '$0'\tStyle CSS",
      "contents": "flexShrink = '$0'"
    },
    {
      "trigger": "style.flexShrink = 'initial'\tStyle CSS",
      "contents": "style.flexShrink = 'initial'"
    },
    {
      "trigger": "flexShrink = 'initial'\tStyle CSS",
      "contents": "flexShrink = 'initial'"
    },
    {
      "trigger": "style.flexShrink = 'inherit'\tStyle CSS",
      "contents": "style.flexShrink = 'inherit'"
    },
    {
      "trigger": "flexShrink = 'inherit'\tStyle CSS",
      "contents": "flexShrink = 'inherit'"
    },
    {
      "trigger": "style.flexWrap\tStyle CSS",
      "contents": "style.flexWrap"
    },
    {
      "trigger": "flexWrap\tStyle CSS",
      "contents": "flexWrap"
    },
    {
      "trigger": "style.flexWrap = '$0'\tStyle CSS",
      "contents": "style.flexWrap = '$0'"
    },
    {
      "trigger": "flexWrap = '$0'\tStyle CSS",
      "contents": "flexWrap = '$0'"
    },
    {
      "trigger": "style.flexWrap = 'nowrap'\tStyle CSS",
      "contents": "style.flexWrap = 'nowrap'"
    },
    {
      "trigger": "flexWrap = 'nowrap'\tStyle CSS",
      "contents": "flexWrap = 'nowrap'"
    },
    {
      "trigger": "style.flexWrap = 'wrap'\tStyle CSS",
      "contents": "style.flexWrap = 'wrap'"
    },
    {
      "trigger": "flexWrap = 'wrap'\tStyle CSS",
      "contents": "flexWrap = 'wrap'"
    },
    {
      "trigger": "style.flexWrap = 'wrap-reverse'\tStyle CSS",
      "contents": "style.flexWrap = 'wrap-reverse'"
    },
    {
      "trigger": "flexWrap = 'wrap-reverse'\tStyle CSS",
      "contents": "flexWrap = 'wrap-reverse'"
    },
    {
      "trigger": "style.flexWrap = 'initial'\tStyle CSS",
      "contents": "style.flexWrap = 'initial'"
    },
    {
      "trigger": "flexWrap = 'initial'\tStyle CSS",
      "contents": "flexWrap = 'initial'"
    },
    {
      "trigger": "style.flexWrap = 'inherit'\tStyle CSS",
      "contents": "style.flexWrap = 'inherit'"
    },
    {
      "trigger": "flexWrap = 'inherit'\tStyle CSS",
      "contents": "flexWrap = 'inherit'"
    },
    {
      "trigger": "style.cssFloat\tStyle CSS",
      "contents": "style.cssFloat"
    },
    {
      "trigger": "cssFloat\tStyle CSS",
      "contents": "cssFloat"
    },
    {
      "trigger": "style.cssFloat = '$0'\tStyle CSS",
      "contents": "style.cssFloat = '$0'"
    },
    {
      "trigger": "cssFloat = '$0'\tStyle CSS",
      "contents": "cssFloat = '$0'"
    },
    {
      "trigger": "style.cssFloat = 'none'\tStyle CSS",
      "contents": "style.cssFloat = 'none'"
    },
    {
      "trigger": "cssFloat = 'none'\tStyle CSS",
      "contents": "cssFloat = 'none'"
    },
    {
      "trigger": "style.cssFloat = 'left'\tStyle CSS",
      "contents": "style.cssFloat = 'left'"
    },
    {
      "trigger": "cssFloat = 'left'\tStyle CSS",
      "contents": "cssFloat = 'left'"
    },
    {
      "trigger": "style.cssFloat = 'right'\tStyle CSS",
      "contents": "style.cssFloat = 'right'"
    },
    {
      "trigger": "cssFloat = 'right'\tStyle CSS",
      "contents": "cssFloat = 'right'"
    },
    {
      "trigger": "style.cssFloat = 'initial'\tStyle CSS",
      "contents": "style.cssFloat = 'initial'"
    },
    {
      "trigger": "cssFloat = 'initial'\tStyle CSS",
      "contents": "cssFloat = 'initial'"
    },
    {
      "trigger": "style.cssFloat = 'inherit'\tStyle CSS",
      "contents": "style.cssFloat = 'inherit'"
    },
    {
      "trigger": "cssFloat = 'inherit'\tStyle CSS",
      "contents": "cssFloat = 'inherit'"
    },
    {
      "trigger": "style.font\tStyle CSS",
      "contents": "style.font"
    },
    {
      "trigger": "font\tStyle CSS",
      "contents": "font"
    },
    {
      "trigger": "style.font = '$0'\tStyle CSS",
      "contents": "style.font = '$0'"
    },
    {
      "trigger": "font = '$0'\tStyle CSS",
      "contents": "font = '$0'"
    },
    {
      "trigger": "style.font = 'caption'\tStyle CSS",
      "contents": "style.font = 'caption'"
    },
    {
      "trigger": "font = 'caption'\tStyle CSS",
      "contents": "font = 'caption'"
    },
    {
      "trigger": "style.font = 'icon'\tStyle CSS",
      "contents": "style.font = 'icon'"
    },
    {
      "trigger": "font = 'icon'\tStyle CSS",
      "contents": "font = 'icon'"
    },
    {
      "trigger": "style.font = 'menu'\tStyle CSS",
      "contents": "style.font = 'menu'"
    },
    {
      "trigger": "font = 'menu'\tStyle CSS",
      "contents": "font = 'menu'"
    },
    {
      "trigger": "style.font = 'message-box'\tStyle CSS",
      "contents": "style.font = 'message-box'"
    },
    {
      "trigger": "font = 'message-box'\tStyle CSS",
      "contents": "font = 'message-box'"
    },
    {
      "trigger": "style.font = 'small-caption'\tStyle CSS",
      "contents": "style.font = 'small-caption'"
    },
    {
      "trigger": "font = 'small-caption'\tStyle CSS",
      "contents": "font = 'small-caption'"
    },
    {
      "trigger": "style.font = 'status-bar'\tStyle CSS",
      "contents": "style.font = 'status-bar'"
    },
    {
      "trigger": "font = 'status-bar'\tStyle CSS",
      "contents": "font = 'status-bar'"
    },
    {
      "trigger": "style.font = 'initial'\tStyle CSS",
      "contents": "style.font = 'initial'"
    },
    {
      "trigger": "font = 'initial'\tStyle CSS",
      "contents": "font = 'initial'"
    },
    {
      "trigger": "style.font = 'inherit'\tStyle CSS",
      "contents": "style.font = 'inherit'"
    },
    {
      "trigger": "font = 'inherit'\tStyle CSS",
      "contents": "font = 'inherit'"
    },
    {
      "trigger": "style.fontFamily\tStyle CSS",
      "contents": "style.fontFamily"
    },
    {
      "trigger": "fontFamily\tStyle CSS",
      "contents": "fontFamily"
    },
    {
      "trigger": "style.fontFamily = '$0'\tStyle CSS",
      "contents": "style.fontFamily = '$0'"
    },
    {
      "trigger": "fontFamily = '$0'\tStyle CSS",
      "contents": "fontFamily = '$0'"
    },
    {
      "trigger": "style.fontFamily = 'initial'\tStyle CSS",
      "contents": "style.fontFamily = 'initial'"
    },
    {
      "trigger": "fontFamily = 'initial'\tStyle CSS",
      "contents": "fontFamily = 'initial'"
    },
    {
      "trigger": "style.fontFamily = 'inherit'\tStyle CSS",
      "contents": "style.fontFamily = 'inherit'"
    },
    {
      "trigger": "fontFamily = 'inherit'\tStyle CSS",
      "contents": "fontFamily = 'inherit'"
    },
    {
      "trigger": "style.fontSize\tStyle CSS",
      "contents": "style.fontSize"
    },
    {
      "trigger": "fontSize\tStyle CSS",
      "contents": "fontSize"
    },
    {
      "trigger": "style.fontSize = '$0'\tStyle CSS",
      "contents": "style.fontSize = '$0'"
    },
    {
      "trigger": "fontSize = '$0'\tStyle CSS",
      "contents": "fontSize = '$0'"
    },
    {
      "trigger": "style.fontSize = 'xx-small'\tStyle CSS",
      "contents": "style.fontSize = 'xx-small'"
    },
    {
      "trigger": "fontSize = 'xx-small'\tStyle CSS",
      "contents": "fontSize = 'xx-small'"
    },
    {
      "trigger": "style.fontSize = 'x-small'\tStyle CSS",
      "contents": "style.fontSize = 'x-small'"
    },
    {
      "trigger": "fontSize = 'x-small'\tStyle CSS",
      "contents": "fontSize = 'x-small'"
    },
    {
      "trigger": "style.fontSize = 'small'\tStyle CSS",
      "contents": "style.fontSize = 'small'"
    },
    {
      "trigger": "fontSize = 'small'\tStyle CSS",
      "contents": "fontSize = 'small'"
    },
    {
      "trigger": "style.fontSize = 'medium'\tStyle CSS",
      "contents": "style.fontSize = 'medium'"
    },
    {
      "trigger": "fontSize = 'medium'\tStyle CSS",
      "contents": "fontSize = 'medium'"
    },
    {
      "trigger": "style.fontSize = 'large'\tStyle CSS",
      "contents": "style.fontSize = 'large'"
    },
    {
      "trigger": "fontSize = 'large'\tStyle CSS",
      "contents": "fontSize = 'large'"
    },
    {
      "trigger": "style.fontSize = 'x-large'\tStyle CSS",
      "contents": "style.fontSize = 'x-large'"
    },
    {
      "trigger": "fontSize = 'x-large'\tStyle CSS",
      "contents": "fontSize = 'x-large'"
    },
    {
      "trigger": "style.fontSize = 'xx-large'\tStyle CSS",
      "contents": "style.fontSize = 'xx-large'"
    },
    {
      "trigger": "fontSize = 'xx-large'\tStyle CSS",
      "contents": "fontSize = 'xx-large'"
    },
    {
      "trigger": "style.fontSize = 'smaller'\tStyle CSS",
      "contents": "style.fontSize = 'smaller'"
    },
    {
      "trigger": "fontSize = 'smaller'\tStyle CSS",
      "contents": "fontSize = 'smaller'"
    },
    {
      "trigger": "style.fontSize = 'larger'\tStyle CSS",
      "contents": "style.fontSize = 'larger'"
    },
    {
      "trigger": "fontSize = 'larger'\tStyle CSS",
      "contents": "fontSize = 'larger'"
    },
    {
      "trigger": "style.fontSize = 'initial'\tStyle CSS",
      "contents": "style.fontSize = 'initial'"
    },
    {
      "trigger": "fontSize = 'initial'\tStyle CSS",
      "contents": "fontSize = 'initial'"
    },
    {
      "trigger": "style.fontSize = 'inherit'\tStyle CSS",
      "contents": "style.fontSize = 'inherit'"
    },
    {
      "trigger": "fontSize = 'inherit'\tStyle CSS",
      "contents": "fontSize = 'inherit'"
    },
    {
      "trigger": "style.fontStyle\tStyle CSS",
      "contents": "style.fontStyle"
    },
    {
      "trigger": "fontStyle\tStyle CSS",
      "contents": "fontStyle"
    },
    {
      "trigger": "style.fontStyle = '$0'\tStyle CSS",
      "contents": "style.fontStyle = '$0'"
    },
    {
      "trigger": "fontStyle = '$0'\tStyle CSS",
      "contents": "fontStyle = '$0'"
    },
    {
      "trigger": "style.fontStyle = 'normal'\tStyle CSS",
      "contents": "style.fontStyle = 'normal'"
    },
    {
      "trigger": "fontStyle = 'normal'\tStyle CSS",
      "contents": "fontStyle = 'normal'"
    },
    {
      "trigger": "style.fontStyle = 'italic'\tStyle CSS",
      "contents": "style.fontStyle = 'italic'"
    },
    {
      "trigger": "fontStyle = 'italic'\tStyle CSS",
      "contents": "fontStyle = 'italic'"
    },
    {
      "trigger": "style.fontStyle = 'oblique'\tStyle CSS",
      "contents": "style.fontStyle = 'oblique'"
    },
    {
      "trigger": "fontStyle = 'oblique'\tStyle CSS",
      "contents": "fontStyle = 'oblique'"
    },
    {
      "trigger": "style.fontStyle = 'initial'\tStyle CSS",
      "contents": "style.fontStyle = 'initial'"
    },
    {
      "trigger": "fontStyle = 'initial'\tStyle CSS",
      "contents": "fontStyle = 'initial'"
    },
    {
      "trigger": "style.fontStyle = 'inherit'\tStyle CSS",
      "contents": "style.fontStyle = 'inherit'"
    },
    {
      "trigger": "fontStyle = 'inherit'\tStyle CSS",
      "contents": "fontStyle = 'inherit'"
    },
    {
      "trigger": "style.fontVariant\tStyle CSS",
      "contents": "style.fontVariant"
    },
    {
      "trigger": "fontVariant\tStyle CSS",
      "contents": "fontVariant"
    },
    {
      "trigger": "style.fontVariant = '$0'\tStyle CSS",
      "contents": "style.fontVariant = '$0'"
    },
    {
      "trigger": "fontVariant = '$0'\tStyle CSS",
      "contents": "fontVariant = '$0'"
    },
    {
      "trigger": "style.fontVariant = 'normal'\tStyle CSS",
      "contents": "style.fontVariant = 'normal'"
    },
    {
      "trigger": "fontVariant = 'normal'\tStyle CSS",
      "contents": "fontVariant = 'normal'"
    },
    {
      "trigger": "style.fontVariant = 'small-caps'\tStyle CSS",
      "contents": "style.fontVariant = 'small-caps'"
    },
    {
      "trigger": "fontVariant = 'small-caps'\tStyle CSS",
      "contents": "fontVariant = 'small-caps'"
    },
    {
      "trigger": "style.fontVariant = 'initial'\tStyle CSS",
      "contents": "style.fontVariant = 'initial'"
    },
    {
      "trigger": "fontVariant = 'initial'\tStyle CSS",
      "contents": "fontVariant = 'initial'"
    },
    {
      "trigger": "style.fontVariant = 'inherit'\tStyle CSS",
      "contents": "style.fontVariant = 'inherit'"
    },
    {
      "trigger": "fontVariant = 'inherit'\tStyle CSS",
      "contents": "fontVariant = 'inherit'"
    },
    {
      "trigger": "style.fontWeight\tStyle CSS",
      "contents": "style.fontWeight"
    },
    {
      "trigger": "fontWeight\tStyle CSS",
      "contents": "fontWeight"
    },
    {
      "trigger": "style.fontWeight = '$0'\tStyle CSS",
      "contents": "style.fontWeight = '$0'"
    },
    {
      "trigger": "fontWeight = '$0'\tStyle CSS",
      "contents": "fontWeight = '$0'"
    },
    {
      "trigger": "style.fontWeight = 'normal'\tStyle CSS",
      "contents": "style.fontWeight = 'normal'"
    },
    {
      "trigger": "fontWeight = 'normal'\tStyle CSS",
      "contents": "fontWeight = 'normal'"
    },
    {
      "trigger": "style.fontWeight = 'lighter'\tStyle CSS",
      "contents": "style.fontWeight = 'lighter'"
    },
    {
      "trigger": "fontWeight = 'lighter'\tStyle CSS",
      "contents": "fontWeight = 'lighter'"
    },
    {
      "trigger": "style.fontWeight = 'bold'\tStyle CSS",
      "contents": "style.fontWeight = 'bold'"
    },
    {
      "trigger": "fontWeight = 'bold'\tStyle CSS",
      "contents": "fontWeight = 'bold'"
    },
    {
      "trigger": "style.fontWeight = 'bolder'\tStyle CSS",
      "contents": "style.fontWeight = 'bolder'"
    },
    {
      "trigger": "fontWeight = 'bolder'\tStyle CSS",
      "contents": "fontWeight = 'bolder'"
    },
    {
      "trigger": "style.fontWeight = '100'\tStyle CSS",
      "contents": "style.fontWeight = '100'"
    },
    {
      "trigger": "fontWeight = '100'\tStyle CSS",
      "contents": "fontWeight = '100'"
    },
    {
      "trigger": "style.fontWeight = '200'\tStyle CSS",
      "contents": "style.fontWeight = '200'"
    },
    {
      "trigger": "fontWeight = '200'\tStyle CSS",
      "contents": "fontWeight = '200'"
    },
    {
      "trigger": "style.fontWeight = '300'\tStyle CSS",
      "contents": "style.fontWeight = '300'"
    },
    {
      "trigger": "fontWeight = '300'\tStyle CSS",
      "contents": "fontWeight = '300'"
    },
    {
      "trigger": "style.fontWeight = '400'\tStyle CSS",
      "contents": "style.fontWeight = '400'"
    },
    {
      "trigger": "fontWeight = '400'\tStyle CSS",
      "contents": "fontWeight = '400'"
    },
    {
      "trigger": "style.fontWeight = '500'\tStyle CSS",
      "contents": "style.fontWeight = '500'"
    },
    {
      "trigger": "fontWeight = '500'\tStyle CSS",
      "contents": "fontWeight = '500'"
    },
    {
      "trigger": "style.fontWeight = '600'\tStyle CSS",
      "contents": "style.fontWeight = '600'"
    },
    {
      "trigger": "fontWeight = '600'\tStyle CSS",
      "contents": "fontWeight = '600'"
    },
    {
      "trigger": "style.fontWeight = '700'\tStyle CSS",
      "contents": "style.fontWeight = '700'"
    },
    {
      "trigger": "fontWeight = '700'\tStyle CSS",
      "contents": "fontWeight = '700'"
    },
    {
      "trigger": "style.fontWeight = '800'\tStyle CSS",
      "contents": "style.fontWeight = '800'"
    },
    {
      "trigger": "fontWeight = '800'\tStyle CSS",
      "contents": "fontWeight = '800'"
    },
    {
      "trigger": "style.fontWeight = '900'\tStyle CSS",
      "contents": "style.fontWeight = '900'"
    },
    {
      "trigger": "fontWeight = '900'\tStyle CSS",
      "contents": "fontWeight = '900'"
    },
    {
      "trigger": "style.fontWeight = 'initial'\tStyle CSS",
      "contents": "style.fontWeight = 'initial'"
    },
    {
      "trigger": "fontWeight = 'initial'\tStyle CSS",
      "contents": "fontWeight = 'initial'"
    },
    {
      "trigger": "style.fontWeight = 'inherit'\tStyle CSS",
      "contents": "style.fontWeight = 'inherit'"
    },
    {
      "trigger": "fontWeight = 'inherit'\tStyle CSS",
      "contents": "fontWeight = 'inherit'"
    },
    {
      "trigger": "style.fontSizeAdjust\tStyle CSS",
      "contents": "style.fontSizeAdjust"
    },
    {
      "trigger": "fontSizeAdjust\tStyle CSS",
      "contents": "fontSizeAdjust"
    },
    {
      "trigger": "style.fontSizeAdjust = '$0'\tStyle CSS",
      "contents": "style.fontSizeAdjust = '$0'"
    },
    {
      "trigger": "fontSizeAdjust = '$0'\tStyle CSS",
      "contents": "fontSizeAdjust = '$0'"
    },
    {
      "trigger": "style.fontSizeAdjust = 'none'\tStyle CSS",
      "contents": "style.fontSizeAdjust = 'none'"
    },
    {
      "trigger": "fontSizeAdjust = 'none'\tStyle CSS",
      "contents": "fontSizeAdjust = 'none'"
    },
    {
      "trigger": "style.fontSizeAdjust = 'initial'\tStyle CSS",
      "contents": "style.fontSizeAdjust = 'initial'"
    },
    {
      "trigger": "fontSizeAdjust = 'initial'\tStyle CSS",
      "contents": "fontSizeAdjust = 'initial'"
    },
    {
      "trigger": "style.fontSizeAdjust = 'inherit'\tStyle CSS",
      "contents": "style.fontSizeAdjust = 'inherit'"
    },
    {
      "trigger": "fontSizeAdjust = 'inherit'\tStyle CSS",
      "contents": "fontSizeAdjust = 'inherit'"
    },
    {
      "trigger": "style.height\tStyle CSS",
      "contents": "style.height"
    },
    {
      "trigger": "height\tStyle CSS",
      "contents": "height"
    },
    {
      "trigger": "style.height = '$0'\tStyle CSS",
      "contents": "style.height = '$0'"
    },
    {
      "trigger": "height = '$0'\tStyle CSS",
      "contents": "height = '$0'"
    },
    {
      "trigger": "style.height = 'auto'\tStyle CSS",
      "contents": "style.height = 'auto'"
    },
    {
      "trigger": "height = 'auto'\tStyle CSS",
      "contents": "height = 'auto'"
    },
    {
      "trigger": "style.height = 'initial'\tStyle CSS",
      "contents": "style.height = 'initial'"
    },
    {
      "trigger": "height = 'initial'\tStyle CSS",
      "contents": "height = 'initial'"
    },
    {
      "trigger": "style.height = 'inherit'\tStyle CSS",
      "contents": "style.height = 'inherit'"
    },
    {
      "trigger": "height = 'inherit'\tStyle CSS",
      "contents": "height = 'inherit'"
    },
    {
      "trigger": "style.justifyContent\tStyle CSS",
      "contents": "style.justifyContent"
    },
    {
      "trigger": "justifyContent\tStyle CSS",
      "contents": "justifyContent"
    },
    {
      "trigger": "style.justifyContent = '$0'\tStyle CSS",
      "contents": "style.justifyContent = '$0'"
    },
    {
      "trigger": "justifyContent = '$0'\tStyle CSS",
      "contents": "justifyContent = '$0'"
    },
    {
      "trigger": "style.justifyContent = 'flex-start'\tStyle CSS",
      "contents": "style.justifyContent = 'flex-start'"
    },
    {
      "trigger": "justifyContent = 'flex-start'\tStyle CSS",
      "contents": "justifyContent = 'flex-start'"
    },
    {
      "trigger": "style.justifyContent = 'flex-end'\tStyle CSS",
      "contents": "style.justifyContent = 'flex-end'"
    },
    {
      "trigger": "justifyContent = 'flex-end'\tStyle CSS",
      "contents": "justifyContent = 'flex-end'"
    },
    {
      "trigger": "style.justifyContent = 'center'\tStyle CSS",
      "contents": "style.justifyContent = 'center'"
    },
    {
      "trigger": "justifyContent = 'center'\tStyle CSS",
      "contents": "justifyContent = 'center'"
    },
    {
      "trigger": "style.justifyContent = 'space-between'\tStyle CSS",
      "contents": "style.justifyContent = 'space-between'"
    },
    {
      "trigger": "justifyContent = 'space-between'\tStyle CSS",
      "contents": "justifyContent = 'space-between'"
    },
    {
      "trigger": "style.justifyContent = 'space-around'\tStyle CSS",
      "contents": "style.justifyContent = 'space-around'"
    },
    {
      "trigger": "justifyContent = 'space-around'\tStyle CSS",
      "contents": "justifyContent = 'space-around'"
    },
    {
      "trigger": "style.justifyContent = 'initial'\tStyle CSS",
      "contents": "style.justifyContent = 'initial'"
    },
    {
      "trigger": "justifyContent = 'initial'\tStyle CSS",
      "contents": "justifyContent = 'initial'"
    },
    {
      "trigger": "style.justifyContent = 'inherit'\tStyle CSS",
      "contents": "style.justifyContent = 'inherit'"
    },
    {
      "trigger": "justifyContent = 'inherit'\tStyle CSS",
      "contents": "justifyContent = 'inherit'"
    },
    {
      "trigger": "style.left\tStyle CSS",
      "contents": "style.left"
    },
    {
      "trigger": "left\tStyle CSS",
      "contents": "left"
    },
    {
      "trigger": "style.left = '$0'\tStyle CSS",
      "contents": "style.left = '$0'"
    },
    {
      "trigger": "left = '$0'\tStyle CSS",
      "contents": "left = '$0'"
    },
    {
      "trigger": "style.left = 'auto'\tStyle CSS",
      "contents": "style.left = 'auto'"
    },
    {
      "trigger": "left = 'auto'\tStyle CSS",
      "contents": "left = 'auto'"
    },
    {
      "trigger": "style.left = 'initial'\tStyle CSS",
      "contents": "style.left = 'initial'"
    },
    {
      "trigger": "left = 'initial'\tStyle CSS",
      "contents": "left = 'initial'"
    },
    {
      "trigger": "style.left = 'inherit'\tStyle CSS",
      "contents": "style.left = 'inherit'"
    },
    {
      "trigger": "left = 'inherit'\tStyle CSS",
      "contents": "left = 'inherit'"
    },
    {
      "trigger": "style.letterSpacing\tStyle CSS",
      "contents": "style.letterSpacing"
    },
    {
      "trigger": "letterSpacing\tStyle CSS",
      "contents": "letterSpacing"
    },
    {
      "trigger": "style.letterSpacing = '$0'\tStyle CSS",
      "contents": "style.letterSpacing = '$0'"
    },
    {
      "trigger": "letterSpacing = '$0'\tStyle CSS",
      "contents": "letterSpacing = '$0'"
    },
    {
      "trigger": "style.letterSpacing = 'normal'\tStyle CSS",
      "contents": "style.letterSpacing = 'normal'"
    },
    {
      "trigger": "letterSpacing = 'normal'\tStyle CSS",
      "contents": "letterSpacing = 'normal'"
    },
    {
      "trigger": "style.letterSpacing = 'initial'\tStyle CSS",
      "contents": "style.letterSpacing = 'initial'"
    },
    {
      "trigger": "letterSpacing = 'initial'\tStyle CSS",
      "contents": "letterSpacing = 'initial'"
    },
    {
      "trigger": "style.letterSpacing = 'inherit'\tStyle CSS",
      "contents": "style.letterSpacing = 'inherit'"
    },
    {
      "trigger": "letterSpacing = 'inherit'\tStyle CSS",
      "contents": "letterSpacing = 'inherit'"
    },
    {
      "trigger": "style.lineHeight\tStyle CSS",
      "contents": "style.lineHeight"
    },
    {
      "trigger": "lineHeight\tStyle CSS",
      "contents": "lineHeight"
    },
    {
      "trigger": "style.lineHeight = '$0'\tStyle CSS",
      "contents": "style.lineHeight = '$0'"
    },
    {
      "trigger": "lineHeight = '$0'\tStyle CSS",
      "contents": "lineHeight = '$0'"
    },
    {
      "trigger": "style.lineHeight = 'normal'\tStyle CSS",
      "contents": "style.lineHeight = 'normal'"
    },
    {
      "trigger": "lineHeight = 'normal'\tStyle CSS",
      "contents": "lineHeight = 'normal'"
    },
    {
      "trigger": "style.lineHeight = 'initial'\tStyle CSS",
      "contents": "style.lineHeight = 'initial'"
    },
    {
      "trigger": "lineHeight = 'initial'\tStyle CSS",
      "contents": "lineHeight = 'initial'"
    },
    {
      "trigger": "style.lineHeight = 'inherit'\tStyle CSS",
      "contents": "style.lineHeight = 'inherit'"
    },
    {
      "trigger": "lineHeight = 'inherit'\tStyle CSS",
      "contents": "lineHeight = 'inherit'"
    },
    {
      "trigger": "style.listStyle\tStyle CSS",
      "contents": "style.listStyle"
    },
    {
      "trigger": "listStyle\tStyle CSS",
      "contents": "listStyle"
    },
    {
      "trigger": "style.listStyle = '$0'\tStyle CSS",
      "contents": "style.listStyle = '$0'"
    },
    {
      "trigger": "listStyle = '$0'\tStyle CSS",
      "contents": "listStyle = '$0'"
    },
    {
      "trigger": "style.listStyle = 'initial'\tStyle CSS",
      "contents": "style.listStyle = 'initial'"
    },
    {
      "trigger": "listStyle = 'initial'\tStyle CSS",
      "contents": "listStyle = 'initial'"
    },
    {
      "trigger": "style.listStyle = 'inherit'\tStyle CSS",
      "contents": "style.listStyle = 'inherit'"
    },
    {
      "trigger": "listStyle = 'inherit'\tStyle CSS",
      "contents": "listStyle = 'inherit'"
    },
    {
      "trigger": "style.listStyleImage\tStyle CSS",
      "contents": "style.listStyleImage"
    },
    {
      "trigger": "listStyleImage\tStyle CSS",
      "contents": "listStyleImage"
    },
    {
      "trigger": "style.listStyleImage = '$0'\tStyle CSS",
      "contents": "style.listStyleImage = '$0'"
    },
    {
      "trigger": "listStyleImage = '$0'\tStyle CSS",
      "contents": "listStyleImage = '$0'"
    },
    {
      "trigger": "style.listStyleImage = 'none'\tStyle CSS",
      "contents": "style.listStyleImage = 'none'"
    },
    {
      "trigger": "listStyleImage = 'none'\tStyle CSS",
      "contents": "listStyleImage = 'none'"
    },
    {
      "trigger": "style.listStyleImage = 'initial'\tStyle CSS",
      "contents": "style.listStyleImage = 'initial'"
    },
    {
      "trigger": "listStyleImage = 'initial'\tStyle CSS",
      "contents": "listStyleImage = 'initial'"
    },
    {
      "trigger": "style.listStyleImage = 'inherit'\tStyle CSS",
      "contents": "style.listStyleImage = 'inherit'"
    },
    {
      "trigger": "listStyleImage = 'inherit'\tStyle CSS",
      "contents": "listStyleImage = 'inherit'"
    },
    {
      "trigger": "style.listStylePosition\tStyle CSS",
      "contents": "style.listStylePosition"
    },
    {
      "trigger": "listStylePosition\tStyle CSS",
      "contents": "listStylePosition"
    },
    {
      "trigger": "style.listStylePosition = '$0'\tStyle CSS",
      "contents": "style.listStylePosition = '$0'"
    },
    {
      "trigger": "listStylePosition = '$0'\tStyle CSS",
      "contents": "listStylePosition = '$0'"
    },
    {
      "trigger": "style.listStylePosition = 'outside'\tStyle CSS",
      "contents": "style.listStylePosition = 'outside'"
    },
    {
      "trigger": "listStylePosition = 'outside'\tStyle CSS",
      "contents": "listStylePosition = 'outside'"
    },
    {
      "trigger": "style.listStylePosition = 'inside'\tStyle CSS",
      "contents": "style.listStylePosition = 'inside'"
    },
    {
      "trigger": "listStylePosition = 'inside'\tStyle CSS",
      "contents": "listStylePosition = 'inside'"
    },
    {
      "trigger": "style.listStylePosition = 'initial'\tStyle CSS",
      "contents": "style.listStylePosition = 'initial'"
    },
    {
      "trigger": "listStylePosition = 'initial'\tStyle CSS",
      "contents": "listStylePosition = 'initial'"
    },
    {
      "trigger": "style.listStylePosition = 'inherit'\tStyle CSS",
      "contents": "style.listStylePosition = 'inherit'"
    },
    {
      "trigger": "listStylePosition = 'inherit'\tStyle CSS",
      "contents": "listStylePosition = 'inherit'"
    },

    {
      "trigger": "style.listStyleType\tStyle CSS",
      "contents": "style.listStyleType"
    },
    {
      "trigger": "listStyleType\tStyle CSS",
      "contents": "listStyleType"
    },
    {
      "trigger": "style.listStyleType = '$0'\tStyle CSS",
      "contents": "style.listStyleType = '$0'"
    },
    {
      "trigger": "listStyleType = '$0'\tStyle CSS",
      "contents": "listStyleType = '$0'"
    },
    {
      "trigger": "style.listStyleType = 'armenian'\tStyle CSS",
      "contents": "style.listStyleType = 'armenian'"
    },
    {
      "trigger": "listStyleType = 'armenian'\tStyle CSS",
      "contents": "listStyleType = 'armenian'"
    },
    {
      "trigger": "style.listStyleType = 'circle'\tStyle CSS",
      "contents": "style.listStyleType = 'circle'"
    },
    {
      "trigger": "listStyleType = 'circle'\tStyle CSS",
      "contents": "listStyleType = 'circle'"
    },
    {
      "trigger": "style.listStyleType = 'cjk-ideographic'\tStyle CSS",
      "contents": "style.listStyleType = 'cjk-ideographic'"
    },
    {
      "trigger": "listStyleType = 'cjk-ideographic'\tStyle CSS",
      "contents": "listStyleType = 'cjk-ideographic'"
    },
    {
      "trigger": "style.listStyleType = 'decimal'\tStyle CSS",
      "contents": "style.listStyleType = 'decimal'"
    },
    {
      "trigger": "listStyleType = 'decimal'\tStyle CSS",
      "contents": "listStyleType = 'decimal'"
    },
    {
      "trigger": "style.listStyleType = 'decimal-leading-zero'\tStyle CSS",
      "contents": "style.listStyleType = 'decimal-leading-zero'"
    },
    {
      "trigger": "listStyleType = 'decimal-leading-zero'\tStyle CSS",
      "contents": "listStyleType = 'decimal-leading-zero'"
    },
    {
      "trigger": "style.listStyleType = 'disc'\tStyle CSS",
      "contents": "style.listStyleType = 'disc'"
    },
    {
      "trigger": "listStyleType = 'disc'\tStyle CSS",
      "contents": "listStyleType = 'disc'"
    },
    {
      "trigger": "style.listStyleType = 'georgian'\tStyle CSS",
      "contents": "style.listStyleType = 'georgian'"
    },
    {
      "trigger": "listStyleType = 'georgian'\tStyle CSS",
      "contents": "listStyleType = 'georgian'"
    },
    {
      "trigger": "style.listStyleType = 'hebrew'\tStyle CSS",
      "contents": "style.listStyleType = 'hebrew'"
    },
    {
      "trigger": "listStyleType = 'hebrew'\tStyle CSS",
      "contents": "listStyleType = 'hebrew'"
    },
    {
      "trigger": "style.listStyleType = 'hiragana'\tStyle CSS",
      "contents": "style.listStyleType = 'hiragana'"
    },
    {
      "trigger": "listStyleType = 'hiragana'\tStyle CSS",
      "contents": "listStyleType = 'hiragana'"
    },
    {
      "trigger": "style.listStyleType = 'hiragana-iroha'\tStyle CSS",
      "contents": "style.listStyleType = 'hiragana-iroha'"
    },
    {
      "trigger": "listStyleType = 'hiragana-iroha'\tStyle CSS",
      "contents": "listStyleType = 'hiragana-iroha'"
    },
    {
      "trigger": "style.listStyleType = 'katakana'\tStyle CSS",
      "contents": "style.listStyleType = 'katakana'"
    },
    {
      "trigger": "listStyleType = 'katakana'\tStyle CSS",
      "contents": "listStyleType = 'katakana'"
    },
    {
      "trigger": "style.listStyleType = 'katakana-iroha'\tStyle CSS",
      "contents": "style.listStyleType = 'katakana-iroha'"
    },
    {
      "trigger": "listStyleType = 'katakana-iroha'\tStyle CSS",
      "contents": "listStyleType = 'katakana-iroha'"
    },
    {
      "trigger": "style.listStyleType = 'lower-alpha'\tStyle CSS",
      "contents": "style.listStyleType = 'lower-alpha'"
    },
    {
      "trigger": "listStyleType = 'lower-alpha'\tStyle CSS",
      "contents": "listStyleType = 'lower-alpha'"
    },
    {
      "trigger": "style.listStyleType = 'lower-greek'\tStyle CSS",
      "contents": "style.listStyleType = 'lower-greek'"
    },
    {
      "trigger": "listStyleType = 'lower-greek'\tStyle CSS",
      "contents": "listStyleType = 'lower-greek'"
    },
    {
      "trigger": "style.listStyleType = 'lower-latin'\tStyle CSS",
      "contents": "style.listStyleType = 'lower-latin'"
    },
    {
      "trigger": "listStyleType = 'lower-latin'\tStyle CSS",
      "contents": "listStyleType = 'lower-latin'"
    },
    {
      "trigger": "style.listStyleType = 'lower-roman'\tStyle CSS",
      "contents": "style.listStyleType = 'lower-roman'"
    },
    {
      "trigger": "listStyleType = 'lower-roman'\tStyle CSS",
      "contents": "listStyleType = 'lower-roman'"
    },
    {
      "trigger": "style.listStyleType = 'none'\tStyle CSS",
      "contents": "style.listStyleType = 'none'"
    },
    {
      "trigger": "listStyleType = 'none'\tStyle CSS",
      "contents": "listStyleType = 'none'"
    },
    {
      "trigger": "style.listStyleType = 'square'\tStyle CSS",
      "contents": "style.listStyleType = 'square'"
    },
    {
      "trigger": "listStyleType = 'square'\tStyle CSS",
      "contents": "listStyleType = 'square'"
    },
    {
      "trigger": "style.listStyleType = 'upper-alpha'\tStyle CSS",
      "contents": "style.listStyleType = 'upper-alpha'"
    },
    {
      "trigger": "listStyleType = 'upper-alpha'\tStyle CSS",
      "contents": "listStyleType = 'upper-alpha'"
    },
    {
      "trigger": "style.listStyleType = 'upper-latin'\tStyle CSS",
      "contents": "style.listStyleType = 'upper-latin'"
    },
    {
      "trigger": "listStyleType = 'upper-latin'\tStyle CSS",
      "contents": "listStyleType = 'upper-latin'"
    },
    {
      "trigger": "style.listStyleType = 'upper-roman'\tStyle CSS",
      "contents": "style.listStyleType = 'upper-roman'"
    },
    {
      "trigger": "listStyleType = 'upper-roman'\tStyle CSS",
      "contents": "listStyleType = 'upper-roman'"
    },
    {
      "trigger": "style.listStyleType = 'initial'\tStyle CSS",
      "contents": "style.listStyleType = 'initial'"
    },
    {
      "trigger": "listStyleType = 'initial'\tStyle CSS",
      "contents": "listStyleType = 'initial'"
    },
    {
      "trigger": "style.listStyleType = 'inherit'\tStyle CSS",
      "contents": "style.listStyleType = 'inherit'"
    },
    {
      "trigger": "listStyleType = 'inherit'\tStyle CSS",
      "contents": "listStyleType = 'inherit'"
    },
    {
      "trigger": "style.margin\tStyle CSS",
      "contents": "style.margin"
    },
    {
      "trigger": "margin\tStyle CSS",
      "contents": "margin"
    },
    {
      "trigger": "style.margin = '$0'\tStyle CSS",
      "contents": "style.margin = '$0'"
    },
    {
      "trigger": "margin = '$0'\tStyle CSS",
      "contents": "margin = '$0'"
    },
    {
      "trigger": "style.margin = 'auto'\tStyle CSS",
      "contents": "style.margin = 'auto'"
    },
    {
      "trigger": "margin = 'auto'\tStyle CSS",
      "contents": "margin = 'auto'"
    },
    {
      "trigger": "style.margin = 'initial'\tStyle CSS",
      "contents": "style.margin = 'initial'"
    },
    {
      "trigger": "margin = 'initial'\tStyle CSS",
      "contents": "margin = 'initial'"
    },
    {
      "trigger": "style.margin = 'inherit'\tStyle CSS",
      "contents": "style.margin = 'inherit'"
    },
    {
      "trigger": "margin = 'inherit'\tStyle CSS",
      "contents": "margin = 'inherit'"
    },
    {
      "trigger": "style.marginBottom\tStyle CSS",
      "contents": "style.marginBottom"
    },
    {
      "trigger": "marginBottom\tStyle CSS",
      "contents": "marginBottom"
    },
    {
      "trigger": "style.marginBottom = '$0'\tStyle CSS",
      "contents": "style.marginBottom = '$0'"
    },
    {
      "trigger": "marginBottom = '$0'\tStyle CSS",
      "contents": "marginBottom = '$0'"
    },
    {
      "trigger": "style.marginBottom = 'auto'\tStyle CSS",
      "contents": "style.marginBottom = 'auto'"
    },
    {
      "trigger": "marginBottom = 'auto'\tStyle CSS",
      "contents": "marginBottom = 'auto'"
    },
    {
      "trigger": "style.marginBottom = 'initial'\tStyle CSS",
      "contents": "style.marginBottom = 'initial'"
    },
    {
      "trigger": "marginBottom = 'initial'\tStyle CSS",
      "contents": "marginBottom = 'initial'"
    },
    {
      "trigger": "style.marginBottom = 'inherit'\tStyle CSS",
      "contents": "style.marginBottom = 'inherit'"
    },
    {
      "trigger": "marginBottom = 'inherit'\tStyle CSS",
      "contents": "marginBottom = 'inherit'"
    },
    {
      "trigger": "style.marginLeft\tStyle CSS",
      "contents": "style.marginLeft"
    },
    {
      "trigger": "marginLeft\tStyle CSS",
      "contents": "marginLeft"
    },
    {
      "trigger": "style.marginLeft = '$0'\tStyle CSS",
      "contents": "style.marginLeft = '$0'"
    },
    {
      "trigger": "marginLeft = '$0'\tStyle CSS",
      "contents": "marginLeft = '$0'"
    },
    {
      "trigger": "style.marginLeft = 'auto'\tStyle CSS",
      "contents": "style.marginLeft = 'auto'"
    },
    {
      "trigger": "marginLeft = 'auto'\tStyle CSS",
      "contents": "marginLeft = 'auto'"
    },
    {
      "trigger": "style.marginLeft = 'initial'\tStyle CSS",
      "contents": "style.marginLeft = 'initial'"
    },
    {
      "trigger": "marginLeft = 'initial'\tStyle CSS",
      "contents": "marginLeft = 'initial'"
    },
    {
      "trigger": "style.marginLeft = 'inherit'\tStyle CSS",
      "contents": "style.marginLeft = 'inherit'"
    },
    {
      "trigger": "marginLeft = 'inherit'\tStyle CSS",
      "contents": "marginLeft = 'inherit'"
    },
    {
      "trigger": "style.marginRight\tStyle CSS",
      "contents": "style.marginRight"
    },
    {
      "trigger": "marginRight\tStyle CSS",
      "contents": "marginRight"
    },
    {
      "trigger": "style.marginRight = '$0'\tStyle CSS",
      "contents": "style.marginRight = '$0'"
    },
    {
      "trigger": "marginRight = '$0'\tStyle CSS",
      "contents": "marginRight = '$0'"
    },
    {
      "trigger": "style.marginRight = 'auto'\tStyle CSS",
      "contents": "style.marginRight = 'auto'"
    },
    {
      "trigger": "marginRight = 'auto'\tStyle CSS",
      "contents": "marginRight = 'auto'"
    },
    {
      "trigger": "style.marginRight = 'initial'\tStyle CSS",
      "contents": "style.marginRight = 'initial'"
    },
    {
      "trigger": "marginRight = 'initial'\tStyle CSS",
      "contents": "marginRight = 'initial'"
    },
    {
      "trigger": "style.marginRight = 'inherit'\tStyle CSS",
      "contents": "style.marginRight = 'inherit'"
    },
    {
      "trigger": "marginRight = 'inherit'\tStyle CSS",
      "contents": "marginRight = 'inherit'"
    },
    {
      "trigger": "style.marginTop\tStyle CSS",
      "contents": "style.marginTop"
    },
    {
      "trigger": "marginTop\tStyle CSS",
      "contents": "marginTop"
    },
    {
      "trigger": "style.marginTop = '$0'\tStyle CSS",
      "contents": "style.marginTop = '$0'"
    },
    {
      "trigger": "marginTop = '$0'\tStyle CSS",
      "contents": "marginTop = '$0'"
    },
    {
      "trigger": "style.marginTop = 'auto'\tStyle CSS",
      "contents": "style.marginTop = 'auto'"
    },
    {
      "trigger": "marginTop = 'auto'\tStyle CSS",
      "contents": "marginTop = 'auto'"
    },
    {
      "trigger": "style.marginTop = 'initial'\tStyle CSS",
      "contents": "style.marginTop = 'initial'"
    },
    {
      "trigger": "marginTop = 'initial'\tStyle CSS",
      "contents": "marginTop = 'initial'"
    },
    {
      "trigger": "style.marginTop = 'inherit'\tStyle CSS",
      "contents": "style.marginTop = 'inherit'"
    },
    {
      "trigger": "marginTop = 'inherit'\tStyle CSS",
      "contents": "marginTop = 'inherit'"
    },
    {
      "trigger": "style.maxHeight\tStyle CSS",
      "contents": "style.maxHeight"
    },
    {
      "trigger": "maxHeight\tStyle CSS",
      "contents": "maxHeight"
    },
    {
      "trigger": "style.maxHeight = '$0'\tStyle CSS",
      "contents": "style.maxHeight = '$0'"
    },
    {
      "trigger": "maxHeight = '$0'\tStyle CSS",
      "contents": "maxHeight = '$0'"
    },
    {
      "trigger": "style.maxHeight = 'none'\tStyle CSS",
      "contents": "style.maxHeight = 'none'"
    },
    {
      "trigger": "maxHeight = 'none'\tStyle CSS",
      "contents": "maxHeight = 'none'"
    },
    {
      "trigger": "style.maxHeight = 'initial'\tStyle CSS",
      "contents": "style.maxHeight = 'initial'"
    },
    {
      "trigger": "maxHeight = 'initial'\tStyle CSS",
      "contents": "maxHeight = 'initial'"
    },
    {
      "trigger": "style.maxHeight = 'inherit'\tStyle CSS",
      "contents": "style.maxHeight = 'inherit'"
    },
    {
      "trigger": "maxHeight = 'inherit'\tStyle CSS",
      "contents": "maxHeight = 'inherit'"
    },
    {
      "trigger": "style.maxWidth\tStyle CSS",
      "contents": "style.maxWidth"
    },
    {
      "trigger": "maxWidth\tStyle CSS",
      "contents": "maxWidth"
    },
    {
      "trigger": "style.maxWidth = '$0'\tStyle CSS",
      "contents": "style.maxWidth = '$0'"
    },
    {
      "trigger": "maxWidth = '$0'\tStyle CSS",
      "contents": "maxWidth = '$0'"
    },
    {
      "trigger": "style.maxWidth = 'none'\tStyle CSS",
      "contents": "style.maxWidth = 'none'"
    },
    {
      "trigger": "maxWidth = 'none'\tStyle CSS",
      "contents": "maxWidth = 'none'"
    },
    {
      "trigger": "style.maxWidth = 'initial'\tStyle CSS",
      "contents": "style.maxWidth = 'initial'"
    },
    {
      "trigger": "maxWidth = 'initial'\tStyle CSS",
      "contents": "maxWidth = 'initial'"
    },
    {
      "trigger": "style.maxWidth = 'inherit'\tStyle CSS",
      "contents": "style.maxWidth = 'inherit'"
    },
    {
      "trigger": "maxWidth = 'inherit'\tStyle CSS",
      "contents": "maxWidth = 'inherit'"
    },
    {
      "trigger": "style.minHeight\tStyle CSS",
      "contents": "style.minHeight"
    },
    {
      "trigger": "minHeight\tStyle CSS",
      "contents": "minHeight"
    },
    {
      "trigger": "style.minHeight = '$0'\tStyle CSS",
      "contents": "style.minHeight = '$0'"
    },
    {
      "trigger": "minHeight = '$0'\tStyle CSS",
      "contents": "minHeight = '$0'"
    },
    {
      "trigger": "style.minHeight = 'initial'\tStyle CSS",
      "contents": "style.minHeight = 'initial'"
    },
    {
      "trigger": "minHeight = 'initial'\tStyle CSS",
      "contents": "minHeight = 'initial'"
    },
    {
      "trigger": "style.minHeight = 'inherit'\tStyle CSS",
      "contents": "style.minHeight = 'inherit'"
    },
    {
      "trigger": "minHeight = 'inherit'\tStyle CSS",
      "contents": "minHeight = 'inherit'"
    },
    {
      "trigger": "style.minWidth\tStyle CSS",
      "contents": "style.minWidth"
    },
    {
      "trigger": "minWidth\tStyle CSS",
      "contents": "minWidth"
    },
    {
      "trigger": "style.minWidth = '$0'\tStyle CSS",
      "contents": "style.minWidth = '$0'"
    },
    {
      "trigger": "minWidth = '$0'\tStyle CSS",
      "contents": "minWidth = '$0'"
    },
    {
      "trigger": "style.minWidth = 'initial'\tStyle CSS",
      "contents": "style.minWidth = 'initial'"
    },
    {
      "trigger": "minWidth = 'initial'\tStyle CSS",
      "contents": "minWidth = 'initial'"
    },
    {
      "trigger": "style.minWidth = 'inherit'\tStyle CSS",
      "contents": "style.minWidth = 'inherit'"
    },
    {
      "trigger": "minWidth = 'inherit'\tStyle CSS",
      "contents": "minWidth = 'inherit'"
    },
    {
      "trigger": "style.opacity\tStyle CSS",
      "contents": "style.opacity"
    },
    {
      "trigger": "opacity\tStyle CSS",
      "contents": "opacity"
    },
    {
      "trigger": "style.opacity = '$0'\tStyle CSS",
      "contents": "style.opacity = '$0'"
    },
    {
      "trigger": "opacity = '$0'\tStyle CSS",
      "contents": "opacity = '$0'"
    },
    {
      "trigger": "style.opacity = 'initial'\tStyle CSS",
      "contents": "style.opacity = 'initial'"
    },
    {
      "trigger": "opacity = 'initial'\tStyle CSS",
      "contents": "opacity = 'initial'"
    },
    {
      "trigger": "style.opacity = 'inherit'\tStyle CSS",
      "contents": "style.opacity = 'inherit'"
    },
    {
      "trigger": "opacity = 'inherit'\tStyle CSS",
      "contents": "opacity = 'inherit'"
    },
    {
      "trigger": "style.order\tStyle CSS",
      "contents": "style.order"
    },
    {
      "trigger": "order\tStyle CSS",
      "contents": "order"
    },
    {
      "trigger": "style.order = '$0'\tStyle CSS",
      "contents": "style.order = '$0'"
    },
    {
      "trigger": "order = '$0'\tStyle CSS",
      "contents": "order = '$0'"
    },
    {
      "trigger": "style.order = 'initial'\tStyle CSS",
      "contents": "style.order = 'initial'"
    },
    {
      "trigger": "order = 'initial'\tStyle CSS",
      "contents": "order = 'initial'"
    },
    {
      "trigger": "style.order = 'inherit'\tStyle CSS",
      "contents": "style.order = 'inherit'"
    },
    {
      "trigger": "order = 'inherit'\tStyle CSS",
      "contents": "order = 'inherit'"
    },
    {
      "trigger": "style.orphans\tStyle CSS",
      "contents": "style.orphans"
    },
    {
      "trigger": "orphans\tStyle CSS",
      "contents": "orphans"
    },
    {
      "trigger": "style.orphans = '$0'\tStyle CSS",
      "contents": "style.orphans = '$0'"
    },
    {
      "trigger": "orphans = '$0'\tStyle CSS",
      "contents": "orphans = '$0'"
    },
    {
      "trigger": "style.orphans = 'initial'\tStyle CSS",
      "contents": "style.orphans = 'initial'"
    },
    {
      "trigger": "orphans = 'initial'\tStyle CSS",
      "contents": "orphans = 'initial'"
    },
    {
      "trigger": "style.orphans = 'inherit'\tStyle CSS",
      "contents": "style.orphans = 'inherit'"
    },
    {
      "trigger": "orphans = 'inherit'\tStyle CSS",
      "contents": "orphans = 'inherit'"
    },
    {
      "trigger": "style.outline\tStyle CSS",
      "contents": "style.outline"
    },
    {
      "trigger": "outline\tStyle CSS",
      "contents": "outline"
    },
    {
      "trigger": "style.outline = '$0'\tStyle CSS",
      "contents": "style.outline = '$0'"
    },
    {
      "trigger": "outline = '$0'\tStyle CSS",
      "contents": "outline = '$0'"
    },
    {
      "trigger": "style.outline = 'initial'\tStyle CSS",
      "contents": "style.outline = 'initial'"
    },
    {
      "trigger": "outline = 'initial'\tStyle CSS",
      "contents": "outline = 'initial'"
    },
    {
      "trigger": "style.outline = 'inherit'\tStyle CSS",
      "contents": "style.outline = 'inherit'"
    },
    {
      "trigger": "outline = 'inherit'\tStyle CSS",
      "contents": "outline = 'inherit'"
    },
    {
      "trigger": "style.outlineColor\tStyle CSS",
      "contents": "style.outlineColor"
    },
    {
      "trigger": "outlineColor\tStyle CSS",
      "contents": "outlineColor"
    },
    {
      "trigger": "style.outlineColor = '$0'\tStyle CSS",
      "contents": "style.outlineColor = '$0'"
    },
    {
      "trigger": "outlineColor = '$0'\tStyle CSS",
      "contents": "outlineColor = '$0'"
    },
    {
      "trigger": "style.outlineColor = 'invert'\tStyle CSS",
      "contents": "style.outlineColor = 'invert'"
    },
    {
      "trigger": "outlineColor = 'invert'\tStyle CSS",
      "contents": "outlineColor = 'invert'"
    },
    {
      "trigger": "style.outlineColor = 'initial'\tStyle CSS",
      "contents": "style.outlineColor = 'initial'"
    },
    {
      "trigger": "outlineColor = 'initial'\tStyle CSS",
      "contents": "outlineColor = 'initial'"
    },
    {
      "trigger": "style.outlineColor = 'inherit'\tStyle CSS",
      "contents": "style.outlineColor = 'inherit'"
    },
    {
      "trigger": "outlineColor = 'inherit'\tStyle CSS",
      "contents": "outlineColor = 'inherit'"
    },
    {
      "trigger": "style.outlineOffset\tStyle CSS",
      "contents": "style.outlineOffset"
    },
    {
      "trigger": "outlineOffset\tStyle CSS",
      "contents": "outlineOffset"
    },
    {
      "trigger": "style.outlineOffset = '$0'\tStyle CSS",
      "contents": "style.outlineOffset = '$0'"
    },
    {
      "trigger": "outlineOffset = '$0'\tStyle CSS",
      "contents": "outlineOffset = '$0'"
    },
    {
      "trigger": "style.outlineOffset = 'initial'\tStyle CSS",
      "contents": "style.outlineOffset = 'initial'"
    },
    {
      "trigger": "outlineOffset = 'initial'\tStyle CSS",
      "contents": "outlineOffset = 'initial'"
    },
    {
      "trigger": "style.outlineOffset = 'inherit'\tStyle CSS",
      "contents": "style.outlineOffset = 'inherit'"
    },
    {
      "trigger": "outlineOffset = 'inherit'\tStyle CSS",
      "contents": "outlineOffset = 'inherit'"
    },
    {
      "trigger": "style.outlineStyle\tStyle CSS",
      "contents": "style.outlineStyle"
    },
    {
      "trigger": "outlineStyle\tStyle CSS",
      "contents": "outlineStyle"
    },
    {
      "trigger": "style.outlineStyle = '$0'\tStyle CSS",
      "contents": "style.outlineStyle = '$0'"
    },
    {
      "trigger": "outlineStyle = '$0'\tStyle CSS",
      "contents": "outlineStyle = '$0'"
    },
    {
      "trigger": "style.outlineStyle = 'none'\tStyle CSS",
      "contents": "style.outlineStyle = 'none'"
    },
    {
      "trigger": "outlineStyle = 'none'\tStyle CSS",
      "contents": "outlineStyle = 'none'"
    },
    {
      "trigger": "style.outlineStyle = 'hidden'\tStyle CSS",
      "contents": "style.outlineStyle = 'hidden'"
    },
    {
      "trigger": "outlineStyle = 'hidden'\tStyle CSS",
      "contents": "outlineStyle = 'hidden'"
    },
    {
      "trigger": "style.outlineStyle = 'dotted'\tStyle CSS",
      "contents": "style.outlineStyle = 'dotted'"
    },
    {
      "trigger": "outlineStyle = 'dotted'\tStyle CSS",
      "contents": "outlineStyle = 'dotted'"
    },
    {
      "trigger": "style.outlineStyle = 'dashed'\tStyle CSS",
      "contents": "style.outlineStyle = 'dashed'"
    },
    {
      "trigger": "outlineStyle = 'dashed'\tStyle CSS",
      "contents": "outlineStyle = 'dashed'"
    },
    {
      "trigger": "style.outlineStyle = 'solid'\tStyle CSS",
      "contents": "style.outlineStyle = 'solid'"
    },
    {
      "trigger": "outlineStyle = 'solid'\tStyle CSS",
      "contents": "outlineStyle = 'solid'"
    },
    {
      "trigger": "style.outlineStyle = 'double'\tStyle CSS",
      "contents": "style.outlineStyle = 'double'"
    },
    {
      "trigger": "outlineStyle = 'double'\tStyle CSS",
      "contents": "outlineStyle = 'double'"
    },
    {
      "trigger": "style.outlineStyle = 'groove'\tStyle CSS",
      "contents": "style.outlineStyle = 'groove'"
    },
    {
      "trigger": "outlineStyle = 'groove'\tStyle CSS",
      "contents": "outlineStyle = 'groove'"
    },
    {
      "trigger": "style.outlineStyle = 'ridge'\tStyle CSS",
      "contents": "style.outlineStyle = 'ridge'"
    },
    {
      "trigger": "outlineStyle = 'ridge'\tStyle CSS",
      "contents": "outlineStyle = 'ridge'"
    },
    {
      "trigger": "style.outlineStyle = 'inset'\tStyle CSS",
      "contents": "style.outlineStyle = 'inset'"
    },
    {
      "trigger": "outlineStyle = 'inset'\tStyle CSS",
      "contents": "outlineStyle = 'inset'"
    },
    {
      "trigger": "style.outlineStyle = 'outset'\tStyle CSS",
      "contents": "style.outlineStyle = 'outset'"
    },
    {
      "trigger": "outlineStyle = 'outset'\tStyle CSS",
      "contents": "outlineStyle = 'outset'"
    },
    {
      "trigger": "style.outlineStyle = 'initial'\tStyle CSS",
      "contents": "style.outlineStyle = 'initial'"
    },
    {
      "trigger": "outlineStyle = 'initial'\tStyle CSS",
      "contents": "outlineStyle = 'initial'"
    },
    {
      "trigger": "style.outlineStyle = 'inherit'\tStyle CSS",
      "contents": "style.outlineStyle = 'inherit'"
    },
    {
      "trigger": "outlineStyle = 'inherit'\tStyle CSS",
      "contents": "outlineStyle = 'inherit'"
    },
    {
      "trigger": "style.outlineWidth\tStyle CSS",
      "contents": "style.outlineWidth"
    },
    {
      "trigger": "outlineWidth\tStyle CSS",
      "contents": "outlineWidth"
    },
    {
      "trigger": "style.outlineWidth = '$0'\tStyle CSS",
      "contents": "style.outlineWidth = '$0'"
    },
    {
      "trigger": "outlineWidth = '$0'\tStyle CSS",
      "contents": "outlineWidth = '$0'"
    },
    {
      "trigger": "style.outlineWidth = 'thin'\tStyle CSS",
      "contents": "style.outlineWidth = 'thin'"
    },
    {
      "trigger": "outlineWidth = 'thin'\tStyle CSS",
      "contents": "outlineWidth = 'thin'"
    },
    {
      "trigger": "style.outlineWidth = 'medium'\tStyle CSS",
      "contents": "style.outlineWidth = 'medium'"
    },
    {
      "trigger": "outlineWidth = 'medium'\tStyle CSS",
      "contents": "outlineWidth = 'medium'"
    },
    {
      "trigger": "style.outlineWidth = 'thick'\tStyle CSS",
      "contents": "style.outlineWidth = 'thick'"
    },
    {
      "trigger": "outlineWidth = 'thick'\tStyle CSS",
      "contents": "outlineWidth = 'thick'"
    },
    {
      "trigger": "style.outlineWidth = 'initial'\tStyle CSS",
      "contents": "style.outlineWidth = 'initial'"
    },
    {
      "trigger": "outlineWidth = 'initial'\tStyle CSS",
      "contents": "outlineWidth = 'initial'"
    },
    {
      "trigger": "style.outlineWidth = 'inherit'\tStyle CSS",
      "contents": "style.outlineWidth = 'inherit'"
    },
    {
      "trigger": "outlineWidth = 'inherit'\tStyle CSS",
      "contents": "outlineWidth = 'inherit'"
    },
    {
      "trigger": "style.overflow\tStyle CSS",
      "contents": "style.overflow"
    },
    {
      "trigger": "overflow\tStyle CSS",
      "contents": "overflow"
    },
    {
      "trigger": "style.overflow = '$0'\tStyle CSS",
      "contents": "style.overflow = '$0'"
    },
    {
      "trigger": "overflow = '$0'\tStyle CSS",
      "contents": "overflow = '$0'"
    },
    {
      "trigger": "style.overflow = 'visible'\tStyle CSS",
      "contents": "style.overflow = 'visible'"
    },
    {
      "trigger": "overflow = 'visible'\tStyle CSS",
      "contents": "overflow = 'visible'"
    },
    {
      "trigger": "style.overflow = 'hidden'\tStyle CSS",
      "contents": "style.overflow = 'hidden'"
    },
    {
      "trigger": "overflow = 'hidden'\tStyle CSS",
      "contents": "overflow = 'hidden'"
    },
    {
      "trigger": "style.overflow = 'scroll'\tStyle CSS",
      "contents": "style.overflow = 'scroll'"
    },
    {
      "trigger": "overflow = 'scroll'\tStyle CSS",
      "contents": "overflow = 'scroll'"
    },
    {
      "trigger": "style.overflow = 'auto'\tStyle CSS",
      "contents": "style.overflow = 'auto'"
    },
    {
      "trigger": "overflow = 'auto'\tStyle CSS",
      "contents": "overflow = 'auto'"
    },
    {
      "trigger": "style.overflow = 'initial'\tStyle CSS",
      "contents": "style.overflow = 'initial'"
    },
    {
      "trigger": "overflow = 'initial'\tStyle CSS",
      "contents": "overflow = 'initial'"
    },
    {
      "trigger": "style.overflow = 'inherit'\tStyle CSS",
      "contents": "style.overflow = 'inherit'"
    },
    {
      "trigger": "overflow = 'inherit'\tStyle CSS",
      "contents": "overflow = 'inherit'"
    },
    {
      "trigger": "style.overflowX\tStyle CSS",
      "contents": "style.overflowX"
    },
    {
      "trigger": "overflowX\tStyle CSS",
      "contents": "overflowX"
    },
    {
      "trigger": "style.overflowX = '$0'\tStyle CSS",
      "contents": "style.overflowX = '$0'"
    },
    {
      "trigger": "overflowX = '$0'\tStyle CSS",
      "contents": "overflowX = '$0'"
    },
    {
      "trigger": "style.overflowX = 'visible'\tStyle CSS",
      "contents": "style.overflowX = 'visible'"
    },
    {
      "trigger": "overflowX = 'visible'\tStyle CSS",
      "contents": "overflowX = 'visible'"
    },
    {
      "trigger": "style.overflowX = 'hidden'\tStyle CSS",
      "contents": "style.overflowX = 'hidden'"
    },
    {
      "trigger": "overflowX = 'hidden'\tStyle CSS",
      "contents": "overflowX = 'hidden'"
    },
    {
      "trigger": "style.overflowX = 'scroll'\tStyle CSS",
      "contents": "style.overflowX = 'scroll'"
    },
    {
      "trigger": "overflowX = 'scroll'\tStyle CSS",
      "contents": "overflowX = 'scroll'"
    },
    {
      "trigger": "style.overflowX = 'auto'\tStyle CSS",
      "contents": "style.overflowX = 'auto'"
    },
    {
      "trigger": "overflowX = 'auto'\tStyle CSS",
      "contents": "overflowX = 'auto'"
    },
    {
      "trigger": "style.overflowX = 'initial'\tStyle CSS",
      "contents": "style.overflowX = 'initial'"
    },
    {
      "trigger": "overflowX = 'initial'\tStyle CSS",
      "contents": "overflowX = 'initial'"
    },
    {
      "trigger": "style.overflowX = 'inherit'\tStyle CSS",
      "contents": "style.overflowX = 'inherit'"
    },
    {
      "trigger": "overflowX = 'inherit'\tStyle CSS",
      "contents": "overflowX = 'inherit'"
    },
    {
      "trigger": "style.overflowY\tStyle CSS",
      "contents": "style.overflowY"
    },
    {
      "trigger": "overflowY\tStyle CSS",
      "contents": "overflowY"
    },
    {
      "trigger": "style.overflowY = '$0'\tStyle CSS",
      "contents": "style.overflowY = '$0'"
    },
    {
      "trigger": "overflowY = '$0'\tStyle CSS",
      "contents": "overflowY = '$0'"
    },
    {
      "trigger": "style.overflowY = 'visible'\tStyle CSS",
      "contents": "style.overflowY = 'visible'"
    },
    {
      "trigger": "overflowY = 'visible'\tStyle CSS",
      "contents": "overflowY = 'visible'"
    },
    {
      "trigger": "style.overflowY = 'hidden'\tStyle CSS",
      "contents": "style.overflowY = 'hidden'"
    },
    {
      "trigger": "overflowY = 'hidden'\tStyle CSS",
      "contents": "overflowY = 'hidden'"
    },
    {
      "trigger": "style.overflowY = 'scroll'\tStyle CSS",
      "contents": "style.overflowY = 'scroll'"
    },
    {
      "trigger": "overflowY = 'scroll'\tStyle CSS",
      "contents": "overflowY = 'scroll'"
    },
    {
      "trigger": "style.overflowY = 'auto'\tStyle CSS",
      "contents": "style.overflowY = 'auto'"
    },
    {
      "trigger": "overflowY = 'auto'\tStyle CSS",
      "contents": "overflowY = 'auto'"
    },
    {
      "trigger": "style.overflowY = 'initial'\tStyle CSS",
      "contents": "style.overflowY = 'initial'"
    },
    {
      "trigger": "overflowY = 'initial'\tStyle CSS",
      "contents": "overflowY = 'initial'"
    },
    {
      "trigger": "style.overflowY = 'inherit'\tStyle CSS",
      "contents": "style.overflowY = 'inherit'"
    },
    {
      "trigger": "overflowY = 'inherit'\tStyle CSS",
      "contents": "overflowY = 'inherit'"
    },
    {
      "trigger": "style.padding\tStyle CSS",
      "contents": "style.padding"
    },
    {
      "trigger": "padding\tStyle CSS",
      "contents": "padding"
    },
    {
      "trigger": "style.padding = '$0'\tStyle CSS",
      "contents": "style.padding = '$0'"
    },
    {
      "trigger": "padding = '$0'\tStyle CSS",
      "contents": "padding = '$0'"
    },
    {
      "trigger": "style.padding = 'initial'\tStyle CSS",
      "contents": "style.padding = 'initial'"
    },
    {
      "trigger": "padding = 'initial'\tStyle CSS",
      "contents": "padding = 'initial'"
    },
    {
      "trigger": "style.padding = 'inherit'\tStyle CSS",
      "contents": "style.padding = 'inherit'"
    },
    {
      "trigger": "padding = 'inherit'\tStyle CSS",
      "contents": "padding = 'inherit'"
    },
    {
      "trigger": "style.paddingBottom\tStyle CSS",
      "contents": "style.paddingBottom"
    },
    {
      "trigger": "paddingBottom\tStyle CSS",
      "contents": "paddingBottom"
    },
    {
      "trigger": "style.paddingBottom = '$0'\tStyle CSS",
      "contents": "style.paddingBottom = '$0'"
    },
    {
      "trigger": "paddingBottom = '$0'\tStyle CSS",
      "contents": "paddingBottom = '$0'"
    },
    {
      "trigger": "style.paddingBottom = 'initial'\tStyle CSS",
      "contents": "style.paddingBottom = 'initial'"
    },
    {
      "trigger": "paddingBottom = 'initial'\tStyle CSS",
      "contents": "paddingBottom = 'initial'"
    },
    {
      "trigger": "style.paddingBottom = 'inherit'\tStyle CSS",
      "contents": "style.paddingBottom = 'inherit'"
    },
    {
      "trigger": "paddingBottom = 'inherit'\tStyle CSS",
      "contents": "paddingBottom = 'inherit'"
    },
    {
      "trigger": "style.paddingLeft\tStyle CSS",
      "contents": "style.paddingLeft"
    },
    {
      "trigger": "paddingLeft\tStyle CSS",
      "contents": "paddingLeft"
    },
    {
      "trigger": "style.paddingLeft = '$0'\tStyle CSS",
      "contents": "style.paddingLeft = '$0'"
    },
    {
      "trigger": "paddingLeft = '$0'\tStyle CSS",
      "contents": "paddingLeft = '$0'"
    },
    {
      "trigger": "style.paddingLeft = 'initial'\tStyle CSS",
      "contents": "style.paddingLeft = 'initial'"
    },
    {
      "trigger": "paddingLeft = 'initial'\tStyle CSS",
      "contents": "paddingLeft = 'initial'"
    },
    {
      "trigger": "style.paddingLeft = 'inherit'\tStyle CSS",
      "contents": "style.paddingLeft = 'inherit'"
    },
    {
      "trigger": "paddingLeft = 'inherit'\tStyle CSS",
      "contents": "paddingLeft = 'inherit'"
    },
    {
      "trigger": "style.paddingRight\tStyle CSS",
      "contents": "style.paddingRight"
    },
    {
      "trigger": "paddingRight\tStyle CSS",
      "contents": "paddingRight"
    },
    {
      "trigger": "style.paddingRight = '$0'\tStyle CSS",
      "contents": "style.paddingRight = '$0'"
    },
    {
      "trigger": "paddingRight = '$0'\tStyle CSS",
      "contents": "paddingRight = '$0'"
    },
    {
      "trigger": "style.paddingRight = 'initial'\tStyle CSS",
      "contents": "style.paddingRight = 'initial'"
    },
    {
      "trigger": "paddingRight = 'initial'\tStyle CSS",
      "contents": "paddingRight = 'initial'"
    },
    {
      "trigger": "style.paddingRight = 'inherit'\tStyle CSS",
      "contents": "style.paddingRight = 'inherit'"
    },
    {
      "trigger": "paddingRight = 'inherit'\tStyle CSS",
      "contents": "paddingRight = 'inherit'"
    },
    {
      "trigger": "style.paddingTop\tStyle CSS",
      "contents": "style.paddingTop"
    },
    {
      "trigger": "paddingTop\tStyle CSS",
      "contents": "paddingTop"
    },
    {
      "trigger": "style.paddingTop = '$0'\tStyle CSS",
      "contents": "style.paddingTop = '$0'"
    },
    {
      "trigger": "paddingTop = '$0'\tStyle CSS",
      "contents": "paddingTop = '$0'"
    },
    {
      "trigger": "style.paddingTop = 'initial'\tStyle CSS",
      "contents": "style.paddingTop = 'initial'"
    },
    {
      "trigger": "paddingTop = 'initial'\tStyle CSS",
      "contents": "paddingTop = 'initial'"
    },
    {
      "trigger": "style.paddingTop = 'inherit'\tStyle CSS",
      "contents": "style.paddingTop = 'inherit'"
    },
    {
      "trigger": "paddingTop = 'inherit'\tStyle CSS",
      "contents": "paddingTop = 'inherit'"
    },
    {
      "trigger": "style.pageBreakAfter\tStyle CSS",
      "contents": "style.pageBreakAfter"
    },
    {
      "trigger": "pageBreakAfter\tStyle CSS",
      "contents": "pageBreakAfter"
    },
    {
      "trigger": "style.pageBreakAfter = '$0'\tStyle CSS",
      "contents": "style.pageBreakAfter = '$0'"
    },
    {
      "trigger": "pageBreakAfter = '$0'\tStyle CSS",
      "contents": "pageBreakAfter = '$0'"
    },
    {
      "trigger": "style.pageBreakAfter = 'auto'\tStyle CSS",
      "contents": "style.pageBreakAfter = 'auto'"
    },
    {
      "trigger": "pageBreakAfter = 'auto'\tStyle CSS",
      "contents": "pageBreakAfter = 'auto'"
    },
    {
      "trigger": "style.pageBreakAfter = 'always'\tStyle CSS",
      "contents": "style.pageBreakAfter = 'always'"
    },
    {
      "trigger": "pageBreakAfter = 'always'\tStyle CSS",
      "contents": "pageBreakAfter = 'always'"
    },
    {
      "trigger": "style.pageBreakAfter = 'avoid'\tStyle CSS",
      "contents": "style.pageBreakAfter = 'avoid'"
    },
    {
      "trigger": "pageBreakAfter = 'avoid'\tStyle CSS",
      "contents": "pageBreakAfter = 'avoid'"
    },
    {
      "trigger": "style.pageBreakAfter = 'left'\tStyle CSS",
      "contents": "style.pageBreakAfter = 'left'"
    },
    {
      "trigger": "pageBreakAfter = 'left'\tStyle CSS",
      "contents": "pageBreakAfter = 'left'"
    },
    {
      "trigger": "style.pageBreakAfter = 'right'\tStyle CSS",
      "contents": "style.pageBreakAfter = 'right'"
    },
    {
      "trigger": "pageBreakAfter = 'right'\tStyle CSS",
      "contents": "pageBreakAfter = 'right'"
    },
    {
      "trigger": "style.pageBreakAfter = 'initial'\tStyle CSS",
      "contents": "style.pageBreakAfter = 'initial'"
    },
    {
      "trigger": "pageBreakAfter = 'initial'\tStyle CSS",
      "contents": "pageBreakAfter = 'initial'"
    },
    {
      "trigger": "style.pageBreakAfter = 'inherit'\tStyle CSS",
      "contents": "style.pageBreakAfter = 'inherit'"
    },
    {
      "trigger": "pageBreakAfter = 'inherit'\tStyle CSS",
      "contents": "pageBreakAfter = 'inherit'"
    },
    {
      "trigger": "style.pageBreakBefore\tStyle CSS",
      "contents": "style.pageBreakBefore"
    },
    {
      "trigger": "pageBreakBefore\tStyle CSS",
      "contents": "pageBreakBefore"
    },
    {
      "trigger": "style.pageBreakBefore = '$0'\tStyle CSS",
      "contents": "style.pageBreakBefore = '$0'"
    },
    {
      "trigger": "pageBreakBefore = '$0'\tStyle CSS",
      "contents": "pageBreakBefore = '$0'"
    },
    {
      "trigger": "style.pageBreakBefore = 'auto'\tStyle CSS",
      "contents": "style.pageBreakBefore = 'auto'"
    },
    {
      "trigger": "pageBreakBefore = 'auto'\tStyle CSS",
      "contents": "pageBreakBefore = 'auto'"
    },
    {
      "trigger": "style.pageBreakBefore = 'always'\tStyle CSS",
      "contents": "style.pageBreakBefore = 'always'"
    },
    {
      "trigger": "pageBreakBefore = 'always'\tStyle CSS",
      "contents": "pageBreakBefore = 'always'"
    },
    {
      "trigger": "style.pageBreakBefore = 'avoid'\tStyle CSS",
      "contents": "style.pageBreakBefore = 'avoid'"
    },
    {
      "trigger": "pageBreakBefore = 'avoid'\tStyle CSS",
      "contents": "pageBreakBefore = 'avoid'"
    },
    {
      "trigger": "style.pageBreakBefore = 'left'\tStyle CSS",
      "contents": "style.pageBreakBefore = 'left'"
    },
    {
      "trigger": "pageBreakBefore = 'left'\tStyle CSS",
      "contents": "pageBreakBefore = 'left'"
    },
    {
      "trigger": "style.pageBreakBefore = 'right'\tStyle CSS",
      "contents": "style.pageBreakBefore = 'right'"
    },
    {
      "trigger": "pageBreakBefore = 'right'\tStyle CSS",
      "contents": "pageBreakBefore = 'right'"
    },
    {
      "trigger": "style.pageBreakBefore = 'initial'\tStyle CSS",
      "contents": "style.pageBreakBefore = 'initial'"
    },
    {
      "trigger": "pageBreakBefore = 'initial'\tStyle CSS",
      "contents": "pageBreakBefore = 'initial'"
    },
    {
      "trigger": "style.pageBreakBefore = 'inherit'\tStyle CSS",
      "contents": "style.pageBreakBefore = 'inherit'"
    },
    {
      "trigger": "pageBreakBefore = 'inherit'\tStyle CSS",
      "contents": "pageBreakBefore = 'inherit'"
    },
    {
      "trigger": "style.pageBreakInside\tStyle CSS",
      "contents": "style.pageBreakInside"
    },
    {
      "trigger": "pageBreakInside\tStyle CSS",
      "contents": "pageBreakInside"
    },
    {
      "trigger": "style.pageBreakInside = '$0'\tStyle CSS",
      "contents": "style.pageBreakInside = '$0'"
    },
    {
      "trigger": "pageBreakInside = '$0'\tStyle CSS",
      "contents": "pageBreakInside = '$0'"
    },
    {
      "trigger": "style.pageBreakInside = 'auto'\tStyle CSS",
      "contents": "style.pageBreakInside = 'auto'"
    },
    {
      "trigger": "pageBreakInside = 'auto'\tStyle CSS",
      "contents": "pageBreakInside = 'auto'"
    },
    {
      "trigger": "style.pageBreakInside = 'avoid'\tStyle CSS",
      "contents": "style.pageBreakInside = 'avoid'"
    },
    {
      "trigger": "pageBreakInside = 'avoid'\tStyle CSS",
      "contents": "pageBreakInside = 'avoid'"
    },
    {
      "trigger": "style.pageBreakInside = 'initial'\tStyle CSS",
      "contents": "style.pageBreakInside = 'initial'"
    },
    {
      "trigger": "pageBreakInside = 'initial'\tStyle CSS",
      "contents": "pageBreakInside = 'initial'"
    },
    {
      "trigger": "style.pageBreakInside = 'inherit'\tStyle CSS",
      "contents": "style.pageBreakInside = 'inherit'"
    },
    {
      "trigger": "pageBreakInside = 'inherit'\tStyle CSS",
      "contents": "pageBreakInside = 'inherit'"
    },
    {
      "trigger": "style.perspective\tStyle CSS",
      "contents": "style.perspective"
    },
    {
      "trigger": "perspective\tStyle CSS",
      "contents": "perspective"
    },
    {
      "trigger": "style.perspective = '$0'\tStyle CSS",
      "contents": "style.perspective = '$0'"
    },
    {
      "trigger": "perspective = '$0'\tStyle CSS",
      "contents": "perspective = '$0'"
    },
    {
      "trigger": "style.perspective = 'none'\tStyle CSS",
      "contents": "style.perspective = 'none'"
    },
    {
      "trigger": "perspective = 'none'\tStyle CSS",
      "contents": "perspective = 'none'"
    },
    {
      "trigger": "style.perspective = 'initial'\tStyle CSS",
      "contents": "style.perspective = 'initial'"
    },
    {
      "trigger": "perspective = 'initial'\tStyle CSS",
      "contents": "perspective = 'initial'"
    },
    {
      "trigger": "style.perspective = 'inherit'\tStyle CSS",
      "contents": "style.perspective = 'inherit'"
    },
    {
      "trigger": "perspective = 'inherit'\tStyle CSS",
      "contents": "perspective = 'inherit'"
    },
    {
      "trigger": "style.perspectiveOrigin\tStyle CSS",
      "contents": "style.perspectiveOrigin"
    },
    {
      "trigger": "perspectiveOrigin\tStyle CSS",
      "contents": "perspectiveOrigin"
    },
    {
      "trigger": "style.perspectiveOrigin = '$0'\tStyle CSS",
      "contents": "style.perspectiveOrigin = '$0'"
    },
    {
      "trigger": "perspectiveOrigin = '$0'\tStyle CSS",
      "contents": "perspectiveOrigin = '$0'"
    },
    {
      "trigger": "style.perspectiveOrigin = 'initial'\tStyle CSS",
      "contents": "style.perspectiveOrigin = 'initial'"
    },
    {
      "trigger": "perspectiveOrigin = 'initial'\tStyle CSS",
      "contents": "perspectiveOrigin = 'initial'"
    },
    {
      "trigger": "style.perspectiveOrigin = 'inherit'\tStyle CSS",
      "contents": "style.perspectiveOrigin = 'inherit'"
    },
    {
      "trigger": "perspectiveOrigin = 'inherit'\tStyle CSS",
      "contents": "perspectiveOrigin = 'inherit'"
    },
    {
      "trigger": "style.position\tStyle CSS",
      "contents": "style.position"
    },
    {
      "trigger": "position\tStyle CSS",
      "contents": "position"
    },
    {
      "trigger": "style.position = '$0'\tStyle CSS",
      "contents": "style.position = '$0'"
    },
    {
      "trigger": "position = '$0'\tStyle CSS",
      "contents": "position = '$0'"
    },
    {
      "trigger": "style.position = 'static'\tStyle CSS",
      "contents": "style.position = 'static'"
    },
    {
      "trigger": "position = 'static'\tStyle CSS",
      "contents": "position = 'static'"
    },
    {
      "trigger": "style.position = 'absolute'\tStyle CSS",
      "contents": "style.position = 'absolute'"
    },
    {
      "trigger": "position = 'absolute'\tStyle CSS",
      "contents": "position = 'absolute'"
    },
    {
      "trigger": "style.position = 'fixed'\tStyle CSS",
      "contents": "style.position = 'fixed'"
    },
    {
      "trigger": "position = 'fixed'\tStyle CSS",
      "contents": "position = 'fixed'"
    },
    {
      "trigger": "style.position = 'relative'\tStyle CSS",
      "contents": "style.position = 'relative'"
    },
    {
      "trigger": "position = 'relative'\tStyle CSS",
      "contents": "position = 'relative'"
    },
    {
      "trigger": "style.position = 'initial'\tStyle CSS",
      "contents": "style.position = 'initial'"
    },
    {
      "trigger": "position = 'initial'\tStyle CSS",
      "contents": "position = 'initial'"
    },
    {
      "trigger": "style.position = 'inherit'\tStyle CSS",
      "contents": "style.position = 'inherit'"
    },
    {
      "trigger": "position = 'inherit'\tStyle CSS",
      "contents": "position = 'inherit'"
    },
    {
      "trigger": "style.quotes\tStyle CSS",
      "contents": "style.quotes"
    },
    {
      "trigger": "quotes\tStyle CSS",
      "contents": "quotes"
    },
    {
      "trigger": "style.quotes = '$0'\tStyle CSS",
      "contents": "style.quotes = '$0'"
    },
    {
      "trigger": "quotes = '$0'\tStyle CSS",
      "contents": "quotes = '$0'"
    },
    {
      "trigger": "style.quotes = 'none'\tStyle CSS",
      "contents": "style.quotes = 'none'"
    },
    {
      "trigger": "quotes = 'none'\tStyle CSS",
      "contents": "quotes = 'none'"
    },
    {
      "trigger": "style.quotes = 'initial'\tStyle CSS",
      "contents": "style.quotes = 'initial'"
    },
    {
      "trigger": "quotes = 'initial'\tStyle CSS",
      "contents": "quotes = 'initial'"
    },
    {
      "trigger": "style.quotes = 'inherit'\tStyle CSS",
      "contents": "style.quotes = 'inherit'"
    },
    {
      "trigger": "quotes = 'inherit'\tStyle CSS",
      "contents": "quotes = 'inherit'"
    },
    {
      "trigger": "style.resize\tStyle CSS",
      "contents": "style.resize"
    },
    {
      "trigger": "resize\tStyle CSS",
      "contents": "resize"
    },
    {
      "trigger": "style.resize = '$0'\tStyle CSS",
      "contents": "style.resize = '$0'"
    },
    {
      "trigger": "resize = '$0'\tStyle CSS",
      "contents": "resize = '$0'"
    },
    {
      "trigger": "style.resize = 'none'\tStyle CSS",
      "contents": "style.resize = 'none'"
    },
    {
      "trigger": "resize = 'none'\tStyle CSS",
      "contents": "resize = 'none'"
    },
    {
      "trigger": "style.resize = 'both'\tStyle CSS",
      "contents": "style.resize = 'both'"
    },
    {
      "trigger": "resize = 'both'\tStyle CSS",
      "contents": "resize = 'both'"
    },
    {
      "trigger": "style.resize = 'horizontal'\tStyle CSS",
      "contents": "style.resize = 'horizontal'"
    },
    {
      "trigger": "resize = 'horizontal'\tStyle CSS",
      "contents": "resize = 'horizontal'"
    },
    {
      "trigger": "style.resize = 'vertical'\tStyle CSS",
      "contents": "style.resize = 'vertical'"
    },
    {
      "trigger": "resize = 'vertical'\tStyle CSS",
      "contents": "resize = 'vertical'"
    },
    {
      "trigger": "style.resize = 'initial'\tStyle CSS",
      "contents": "style.resize = 'initial'"
    },
    {
      "trigger": "resize = 'initial'\tStyle CSS",
      "contents": "resize = 'initial'"
    },
    {
      "trigger": "style.resize = 'inherit'\tStyle CSS",
      "contents": "style.resize = 'inherit'"
    },
    {
      "trigger": "resize = 'inherit'\tStyle CSS",
      "contents": "resize = 'inherit'"
    },
    {
      "trigger": "style.right\tStyle CSS",
      "contents": "style.right"
    },
    {
      "trigger": "right\tStyle CSS",
      "contents": "right"
    },
    {
      "trigger": "style.right = '$0'\tStyle CSS",
      "contents": "style.right = '$0'"
    },
    {
      "trigger": "right = '$0'\tStyle CSS",
      "contents": "right = '$0'"
    },
    {
      "trigger": "style.right = 'auto'\tStyle CSS",
      "contents": "style.right = 'auto'"
    },
    {
      "trigger": "right = 'auto'\tStyle CSS",
      "contents": "right = 'auto'"
    },
    {
      "trigger": "style.right = 'initial'\tStyle CSS",
      "contents": "style.right = 'initial'"
    },
    {
      "trigger": "right = 'initial'\tStyle CSS",
      "contents": "right = 'initial'"
    },
    {
      "trigger": "style.right = 'inherit'\tStyle CSS",
      "contents": "style.right = 'inherit'"
    },
    {
      "trigger": "right = 'inherit'\tStyle CSS",
      "contents": "right = 'inherit'"
    },

    {
      "trigger": "style.tableLayout\tStyle CSS",
      "contents": "style.tableLayout"
    },
    {
      "trigger": "tableLayout\tStyle CSS",
      "contents": "tableLayout"
    },
    {
      "trigger": "style.tableLayout = '$0'\tStyle CSS",
      "contents": "style.tableLayout = '$0'"
    },
    {
      "trigger": "tableLayout = '$0'\tStyle CSS",
      "contents": "tableLayout = '$0'"
    },
    {
      "trigger": "style.tableLayout = 'auto'\tStyle CSS",
      "contents": "style.tableLayout = 'auto'"
    },
    {
      "trigger": "tableLayout = 'auto'\tStyle CSS",
      "contents": "tableLayout = 'auto'"
    },
    {
      "trigger": "style.tableLayout = 'fixed'\tStyle CSS",
      "contents": "style.tableLayout = 'fixed'"
    },
    {
      "trigger": "tableLayout = 'fixed'\tStyle CSS",
      "contents": "tableLayout = 'fixed'"
    },
    {
      "trigger": "style.tableLayout = 'initial'\tStyle CSS",
      "contents": "style.tableLayout = 'initial'"
    },
    {
      "trigger": "tableLayout = 'initial'\tStyle CSS",
      "contents": "tableLayout = 'initial'"
    },
    {
      "trigger": "style.tableLayout = 'inherit'\tStyle CSS",
      "contents": "style.tableLayout = 'inherit'"
    },
    {
      "trigger": "tableLayout = 'inherit'\tStyle CSS",
      "contents": "tableLayout = 'inherit'"
    },
    {
      "trigger": "style.tabSize\tStyle CSS",
      "contents": "style.tabSize"
    },
    {
      "trigger": "tabSize\tStyle CSS",
      "contents": "tabSize"
    },
    {
      "trigger": "style.tabSize = '$0'\tStyle CSS",
      "contents": "style.tabSize = '$0'"
    },
    {
      "trigger": "tabSize = '$0'\tStyle CSS",
      "contents": "tabSize = '$0'"
    },
    {
      "trigger": "style.tabSize = 'initial'\tStyle CSS",
      "contents": "style.tabSize = 'initial'"
    },
    {
      "trigger": "tabSize = 'initial'\tStyle CSS",
      "contents": "tabSize = 'initial'"
    },
    {
      "trigger": "style.tabSize = 'inherit'\tStyle CSS",
      "contents": "style.tabSize = 'inherit'"
    },
    {
      "trigger": "tabSize = 'inherit'\tStyle CSS",
      "contents": "tabSize = 'inherit'"
    },
    {
      "trigger": "style.textAlign\tStyle CSS",
      "contents": "style.textAlign"
    },
    {
      "trigger": "textAlign\tStyle CSS",
      "contents": "textAlign"
    },
    {
      "trigger": "style.textAlign = '$0'\tStyle CSS",
      "contents": "style.textAlign = '$0'"
    },
    {
      "trigger": "textAlign = '$0'\tStyle CSS",
      "contents": "textAlign = '$0'"
    },
    {
      "trigger": "style.textAlign = 'left'\tStyle CSS",
      "contents": "style.textAlign = 'left'"
    },
    {
      "trigger": "textAlign = 'left'\tStyle CSS",
      "contents": "textAlign = 'left'"
    },
    {
      "trigger": "style.textAlign = 'right'\tStyle CSS",
      "contents": "style.textAlign = 'right'"
    },
    {
      "trigger": "textAlign = 'right'\tStyle CSS",
      "contents": "textAlign = 'right'"
    },
    {
      "trigger": "style.textAlign = 'center'\tStyle CSS",
      "contents": "style.textAlign = 'center'"
    },
    {
      "trigger": "textAlign = 'center'\tStyle CSS",
      "contents": "textAlign = 'center'"
    },
    {
      "trigger": "style.textAlign = 'justify'\tStyle CSS",
      "contents": "style.textAlign = 'justify'"
    },
    {
      "trigger": "textAlign = 'justify'\tStyle CSS",
      "contents": "textAlign = 'justify'"
    },
    {
      "trigger": "style.textAlign = 'initial'\tStyle CSS",
      "contents": "style.textAlign = 'initial'"
    },
    {
      "trigger": "textAlign = 'initial'\tStyle CSS",
      "contents": "textAlign = 'initial'"
    },
    {
      "trigger": "style.textAlign = 'inherit'\tStyle CSS",
      "contents": "style.textAlign = 'inherit'"
    },
    {
      "trigger": "textAlign = 'inherit'\tStyle CSS",
      "contents": "textAlign = 'inherit'"
    },
    {
      "trigger": "style.textAlignLast\tStyle CSS",
      "contents": "style.textAlignLast"
    },
    {
      "trigger": "textAlignLast\tStyle CSS",
      "contents": "textAlignLast"
    },
    {
      "trigger": "style.textAlignLast = '$0'\tStyle CSS",
      "contents": "style.textAlignLast = '$0'"
    },
    {
      "trigger": "textAlignLast = '$0'\tStyle CSS",
      "contents": "textAlignLast = '$0'"
    },
    {
      "trigger": "style.textAlignLast = 'auto'\tStyle CSS",
      "contents": "style.textAlignLast = 'auto'"
    },
    {
      "trigger": "textAlignLast = 'auto'\tStyle CSS",
      "contents": "textAlignLast = 'auto'"
    },
    {
      "trigger": "style.textAlignLast = 'left'\tStyle CSS",
      "contents": "style.textAlignLast = 'left'"
    },
    {
      "trigger": "textAlignLast = 'left'\tStyle CSS",
      "contents": "textAlignLast = 'left'"
    },
    {
      "trigger": "style.textAlignLast = 'right'\tStyle CSS",
      "contents": "style.textAlignLast = 'right'"
    },
    {
      "trigger": "textAlignLast = 'right'\tStyle CSS",
      "contents": "textAlignLast = 'right'"
    },
    {
      "trigger": "style.textAlignLast = 'center'\tStyle CSS",
      "contents": "style.textAlignLast = 'center'"
    },
    {
      "trigger": "textAlignLast = 'center'\tStyle CSS",
      "contents": "textAlignLast = 'center'"
    },
    {
      "trigger": "style.textAlignLast = 'justify'\tStyle CSS",
      "contents": "style.textAlignLast = 'justify'"
    },
    {
      "trigger": "textAlignLast = 'justify'\tStyle CSS",
      "contents": "textAlignLast = 'justify'"
    },
    {
      "trigger": "style.textAlignLast = 'start'\tStyle CSS",
      "contents": "style.textAlignLast = 'start'"
    },
    {
      "trigger": "textAlignLast = 'start'\tStyle CSS",
      "contents": "textAlignLast = 'start'"
    },
    {
      "trigger": "style.textAlignLast = 'end'\tStyle CSS",
      "contents": "style.textAlignLast = 'end'"
    },
    {
      "trigger": "textAlignLast = 'end'\tStyle CSS",
      "contents": "textAlignLast = 'end'"
    },
    {
      "trigger": "style.textAlignLast = 'initial'\tStyle CSS",
      "contents": "style.textAlignLast = 'initial'"
    },
    {
      "trigger": "textAlignLast = 'initial'\tStyle CSS",
      "contents": "textAlignLast = 'initial'"
    },
    {
      "trigger": "style.textAlignLast = 'inherit'\tStyle CSS",
      "contents": "style.textAlignLast = 'inherit'"
    },
    {
      "trigger": "textAlignLast = 'inherit'\tStyle CSS",
      "contents": "textAlignLast = 'inherit'"
    },
    {
      "trigger": "style.textDecoration\tStyle CSS",
      "contents": "style.textDecoration"
    },
    {
      "trigger": "textDecoration\tStyle CSS",
      "contents": "textDecoration"
    },
    {
      "trigger": "style.textDecoration = '$0'\tStyle CSS",
      "contents": "style.textDecoration = '$0'"
    },
    {
      "trigger": "textDecoration = '$0'\tStyle CSS",
      "contents": "textDecoration = '$0'"
    },
    {
      "trigger": "style.textDecoration = 'none'\tStyle CSS",
      "contents": "style.textDecoration = 'none'"
    },
    {
      "trigger": "textDecoration = 'none'\tStyle CSS",
      "contents": "textDecoration = 'none'"
    },
    {
      "trigger": "style.textDecoration = 'underline'\tStyle CSS",
      "contents": "style.textDecoration = 'underline'"
    },
    {
      "trigger": "textDecoration = 'underline'\tStyle CSS",
      "contents": "textDecoration = 'underline'"
    },
    {
      "trigger": "style.textDecoration = 'overline'\tStyle CSS",
      "contents": "style.textDecoration = 'overline'"
    },
    {
      "trigger": "textDecoration = 'overline'\tStyle CSS",
      "contents": "textDecoration = 'overline'"
    },
    {
      "trigger": "style.textDecoration = 'line-through'\tStyle CSS",
      "contents": "style.textDecoration = 'line-through'"
    },
    {
      "trigger": "textDecoration = 'line-through'\tStyle CSS",
      "contents": "textDecoration = 'line-through'"
    },
    {
      "trigger": "style.textDecoration = 'initial'\tStyle CSS",
      "contents": "style.textDecoration = 'initial'"
    },
    {
      "trigger": "textDecoration = 'initial'\tStyle CSS",
      "contents": "textDecoration = 'initial'"
    },
    {
      "trigger": "style.textDecoration = 'inherit'\tStyle CSS",
      "contents": "style.textDecoration = 'inherit'"
    },
    {
      "trigger": "textDecoration = 'inherit'\tStyle CSS",
      "contents": "textDecoration = 'inherit'"
    },
    {
      "trigger": "style.textDecorationColor\tStyle CSS",
      "contents": "style.textDecorationColor"
    },
    {
      "trigger": "textDecorationColor\tStyle CSS",
      "contents": "textDecorationColor"
    },
    {
      "trigger": "style.textDecorationColor = '$0'\tStyle CSS",
      "contents": "style.textDecorationColor = '$0'"
    },
    {
      "trigger": "textDecorationColor = '$0'\tStyle CSS",
      "contents": "textDecorationColor = '$0'"
    },
    {
      "trigger": "style.textDecorationColor = 'initial'\tStyle CSS",
      "contents": "style.textDecorationColor = 'initial'"
    },
    {
      "trigger": "textDecorationColor = 'initial'\tStyle CSS",
      "contents": "textDecorationColor = 'initial'"
    },
    {
      "trigger": "style.textDecorationColor = 'inherit'\tStyle CSS",
      "contents": "style.textDecorationColor = 'inherit'"
    },
    {
      "trigger": "textDecorationColor = 'inherit'\tStyle CSS",
      "contents": "textDecorationColor = 'inherit'"
    },
    {
      "trigger": "style.textDecorationLine\tStyle CSS",
      "contents": "style.textDecorationLine"
    },
    {
      "trigger": "textDecorationLine\tStyle CSS",
      "contents": "textDecorationLine"
    },
    {
      "trigger": "style.textDecorationLine = '$0'\tStyle CSS",
      "contents": "style.textDecorationLine = '$0'"
    },
    {
      "trigger": "textDecorationLine = '$0'\tStyle CSS",
      "contents": "textDecorationLine = '$0'"
    },
    {
      "trigger": "style.textDecorationLine = 'none'\tStyle CSS",
      "contents": "style.textDecorationLine = 'none'"
    },
    {
      "trigger": "textDecorationLine = 'none'\tStyle CSS",
      "contents": "textDecorationLine = 'none'"
    },
    {
      "trigger": "style.textDecorationLine = 'underline'\tStyle CSS",
      "contents": "style.textDecorationLine = 'underline'"
    },
    {
      "trigger": "textDecorationLine = 'underline'\tStyle CSS",
      "contents": "textDecorationLine = 'underline'"
    },
    {
      "trigger": "style.textDecorationLine = 'overline'\tStyle CSS",
      "contents": "style.textDecorationLine = 'overline'"
    },
    {
      "trigger": "textDecorationLine = 'overline'\tStyle CSS",
      "contents": "textDecorationLine = 'overline'"
    },
    {
      "trigger": "style.textDecorationLine = 'line-through'\tStyle CSS",
      "contents": "style.textDecorationLine = 'line-through'"
    },
    {
      "trigger": "textDecorationLine = 'line-through'\tStyle CSS",
      "contents": "textDecorationLine = 'line-through'"
    },
    {
      "trigger": "style.textDecorationLine = 'initial'\tStyle CSS",
      "contents": "style.textDecorationLine = 'initial'"
    },
    {
      "trigger": "textDecorationLine = 'initial'\tStyle CSS",
      "contents": "textDecorationLine = 'initial'"
    },
    {
      "trigger": "style.textDecorationLine = 'inherit'\tStyle CSS",
      "contents": "style.textDecorationLine = 'inherit'"
    },
    {
      "trigger": "textDecorationLine = 'inherit'\tStyle CSS",
      "contents": "textDecorationLine = 'inherit'"
    },
    {
      "trigger": "style.textDecorationStyle\tStyle CSS",
      "contents": "style.textDecorationStyle"
    },
    {
      "trigger": "textDecorationStyle\tStyle CSS",
      "contents": "textDecorationStyle"
    },
    {
      "trigger": "style.textDecorationStyle = '$0'\tStyle CSS",
      "contents": "style.textDecorationStyle = '$0'"
    },
    {
      "trigger": "textDecorationStyle = '$0'\tStyle CSS",
      "contents": "textDecorationStyle = '$0'"
    },
    {
      "trigger": "style.textDecorationStyle = 'solid'\tStyle CSS",
      "contents": "style.textDecorationStyle = 'solid'"
    },
    {
      "trigger": "textDecorationStyle = 'solid'\tStyle CSS",
      "contents": "textDecorationStyle = 'solid'"
    },
    {
      "trigger": "style.textDecorationStyle = 'double'\tStyle CSS",
      "contents": "style.textDecorationStyle = 'double'"
    },
    {
      "trigger": "textDecorationStyle = 'double'\tStyle CSS",
      "contents": "textDecorationStyle = 'double'"
    },
    {
      "trigger": "style.textDecorationStyle = 'dotted'\tStyle CSS",
      "contents": "style.textDecorationStyle = 'dotted'"
    },
    {
      "trigger": "textDecorationStyle = 'dotted'\tStyle CSS",
      "contents": "textDecorationStyle = 'dotted'"
    },
    {
      "trigger": "style.textDecorationStyle = 'dashed'\tStyle CSS",
      "contents": "style.textDecorationStyle = 'dashed'"
    },
    {
      "trigger": "textDecorationStyle = 'dashed'\tStyle CSS",
      "contents": "textDecorationStyle = 'dashed'"
    },
    {
      "trigger": "style.textDecorationStyle = 'wavy'\tStyle CSS",
      "contents": "style.textDecorationStyle = 'wavy'"
    },
    {
      "trigger": "textDecorationStyle = 'wavy'\tStyle CSS",
      "contents": "textDecorationStyle = 'wavy'"
    },
    {
      "trigger": "style.textDecorationStyle = 'initial'\tStyle CSS",
      "contents": "style.textDecorationStyle = 'initial'"
    },
    {
      "trigger": "textDecorationStyle = 'initial'\tStyle CSS",
      "contents": "textDecorationStyle = 'initial'"
    },
    {
      "trigger": "style.textDecorationStyle = 'inherit'\tStyle CSS",
      "contents": "style.textDecorationStyle = 'inherit'"
    },
    {
      "trigger": "textDecorationStyle = 'inherit'\tStyle CSS",
      "contents": "textDecorationStyle = 'inherit'"
    },
    {
      "trigger": "style.textIndent\tStyle CSS",
      "contents": "style.textIndent"
    },
    {
      "trigger": "textIndent\tStyle CSS",
      "contents": "textIndent"
    },
    {
      "trigger": "style.textIndent = '$0'\tStyle CSS",
      "contents": "style.textIndent = '$0'"
    },
    {
      "trigger": "textIndent = '$0'\tStyle CSS",
      "contents": "textIndent = '$0'"
    },
    {
      "trigger": "style.textIndent = 'initial'\tStyle CSS",
      "contents": "style.textIndent = 'initial'"
    },
    {
      "trigger": "textIndent = 'initial'\tStyle CSS",
      "contents": "textIndent = 'initial'"
    },
    {
      "trigger": "style.textIndent = 'inherit'\tStyle CSS",
      "contents": "style.textIndent = 'inherit'"
    },
    {
      "trigger": "textIndent = 'inherit'\tStyle CSS",
      "contents": "textIndent = 'inherit'"
    },
    {
      "trigger": "style.textOverflow\tStyle CSS",
      "contents": "style.textOverflow"
    },
    {
      "trigger": "textOverflow\tStyle CSS",
      "contents": "textOverflow"
    },
    {
      "trigger": "style.textOverflow = '$0'\tStyle CSS",
      "contents": "style.textOverflow = '$0'"
    },
    {
      "trigger": "textOverflow = '$0'\tStyle CSS",
      "contents": "textOverflow = '$0'"
    },
    {
      "trigger": "style.textOverflow = 'clip'\tStyle CSS",
      "contents": "style.textOverflow = 'clip'"
    },
    {
      "trigger": "textOverflow = 'clip'\tStyle CSS",
      "contents": "textOverflow = 'clip'"
    },
    {
      "trigger": "style.textOverflow = 'ellipsis'\tStyle CSS",
      "contents": "style.textOverflow = 'ellipsis'"
    },
    {
      "trigger": "textOverflow = 'ellipsis'\tStyle CSS",
      "contents": "textOverflow = 'ellipsis'"
    },
    {
      "trigger": "style.textOverflow = 'initial'\tStyle CSS",
      "contents": "style.textOverflow = 'initial'"
    },
    {
      "trigger": "textOverflow = 'initial'\tStyle CSS",
      "contents": "textOverflow = 'initial'"
    },
    {
      "trigger": "style.textOverflow = 'inherit'\tStyle CSS",
      "contents": "style.textOverflow = 'inherit'"
    },
    {
      "trigger": "textOverflow = 'inherit'\tStyle CSS",
      "contents": "textOverflow = 'inherit'"
    },
    {
      "trigger": "style.textShadow\tStyle CSS",
      "contents": "style.textShadow"
    },
    {
      "trigger": "textShadow\tStyle CSS",
      "contents": "textShadow"
    },
    {
      "trigger": "style.textShadow = '$0'\tStyle CSS",
      "contents": "style.textShadow = '$0'"
    },
    {
      "trigger": "textShadow = '$0'\tStyle CSS",
      "contents": "textShadow = '$0'"
    },
    {
      "trigger": "style.textShadow = 'none'\tStyle CSS",
      "contents": "style.textShadow = 'none'"
    },
    {
      "trigger": "textShadow = 'none'\tStyle CSS",
      "contents": "textShadow = 'none'"
    },
    {
      "trigger": "style.textShadow = 'initial'\tStyle CSS",
      "contents": "style.textShadow = 'initial'"
    },
    {
      "trigger": "textShadow = 'initial'\tStyle CSS",
      "contents": "textShadow = 'initial'"
    },
    {
      "trigger": "style.textShadow = 'inherit'\tStyle CSS",
      "contents": "style.textShadow = 'inherit'"
    },
    {
      "trigger": "textShadow = 'inherit'\tStyle CSS",
      "contents": "textShadow = 'inherit'"
    },
    {
      "trigger": "style.textTransform\tStyle CSS",
      "contents": "style.textTransform"
    },
    {
      "trigger": "textTransform\tStyle CSS",
      "contents": "textTransform"
    },
    {
      "trigger": "style.textTransform = '$0'\tStyle CSS",
      "contents": "style.textTransform = '$0'"
    },
    {
      "trigger": "textTransform = '$0'\tStyle CSS",
      "contents": "textTransform = '$0'"
    },
    {
      "trigger": "style.textTransform = 'none'\tStyle CSS",
      "contents": "style.textTransform = 'none'"
    },
    {
      "trigger": "textTransform = 'none'\tStyle CSS",
      "contents": "textTransform = 'none'"
    },
    {
      "trigger": "style.textTransform = 'capitalize'\tStyle CSS",
      "contents": "style.textTransform = 'capitalize'"
    },
    {
      "trigger": "textTransform = 'capitalize'\tStyle CSS",
      "contents": "textTransform = 'capitalize'"
    },
    {
      "trigger": "style.textTransform = 'uppercase'\tStyle CSS",
      "contents": "style.textTransform = 'uppercase'"
    },
    {
      "trigger": "textTransform = 'uppercase'\tStyle CSS",
      "contents": "textTransform = 'uppercase'"
    },
    {
      "trigger": "style.textTransform = 'lowercase'\tStyle CSS",
      "contents": "style.textTransform = 'lowercase'"
    },
    {
      "trigger": "textTransform = 'lowercase'\tStyle CSS",
      "contents": "textTransform = 'lowercase'"
    },
    {
      "trigger": "style.textTransform = 'initial'\tStyle CSS",
      "contents": "style.textTransform = 'initial'"
    },
    {
      "trigger": "textTransform = 'initial'\tStyle CSS",
      "contents": "textTransform = 'initial'"
    },
    {
      "trigger": "style.textTransform = 'inherit'\tStyle CSS",
      "contents": "style.textTransform = 'inherit'"
    },
    {
      "trigger": "textTransform = 'inherit'\tStyle CSS",
      "contents": "textTransform = 'inherit'"
    },
    {
      "trigger": "style.top\tStyle CSS",
      "contents": "style.top"
    },
    {
      "trigger": "top\tStyle CSS",
      "contents": "top"
    },
    {
      "trigger": "style.top = '$0'\tStyle CSS",
      "contents": "style.top = '$0'"
    },
    {
      "trigger": "top = '$0'\tStyle CSS",
      "contents": "top = '$0'"
    },
    {
      "trigger": "style.top = 'auto'\tStyle CSS",
      "contents": "style.top = 'auto'"
    },
    {
      "trigger": "top = 'auto'\tStyle CSS",
      "contents": "top = 'auto'"
    },
    {
      "trigger": "style.top = 'initial'\tStyle CSS",
      "contents": "style.top = 'initial'"
    },
    {
      "trigger": "top = 'initial'\tStyle CSS",
      "contents": "top = 'initial'"
    },
    {
      "trigger": "style.top = 'inherit'\tStyle CSS",
      "contents": "style.top = 'inherit'"
    },
    {
      "trigger": "top = 'inherit'\tStyle CSS",
      "contents": "top = 'inherit'"
    },
    {
      "trigger": "style.transform\tStyle CSS",
      "contents": "style.transform"
    },
    {
      "trigger": "transform\tStyle CSS",
      "contents": "transform"
    },
    {
      "trigger": "style.transform = '$0'\tStyle CSS",
      "contents": "style.transform = '$0'"
    },
    {
      "trigger": "transform = '$0'\tStyle CSS",
      "contents": "transform = '$0'"
    },
    {
      "trigger": "style.transform = 'none'\tStyle CSS",
      "contents": "style.transform = 'none'"
    },
    {
      "trigger": "transform = 'none'\tStyle CSS",
      "contents": "transform = 'none'"
    },
    {
      "trigger": "style.transform = 'matrix($0n,n,n,n,n,n)'\tStyle CSS",
      "contents": "style.transform = 'matrix($0n,n,n,n,n,n)'"
    },
    {
      "trigger": "transform = 'matrix($0n,n,n,n,n,n)'\tStyle CSS",
      "contents": "transform = 'matrix($0n,n,n,n,n,n)'"
    },
    {
      "trigger": "style.transform = 'matrix3d($0n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)'\tStyle CSS",
      "contents": "style.transform = 'matrix3d($0n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)'"
    },
    {
      "trigger": "transform = 'matrix3d($0n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)'\tStyle CSS",
      "contents": "transform = 'matrix3d($0n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)'"
    },
    {
      "trigger": "style.transform = 'translate($0x,y)'\tStyle CSS",
      "contents": "style.transform = 'translate($0x,y)'"
    },
    {
      "trigger": "transform = 'translate($0x,y)'\tStyle CSS",
      "contents": "transform = 'translate($0x,y)'"
    },
    {
      "trigger": "style.transform = 'translate3d($0x,y,z)'\tStyle CSS",
      "contents": "style.transform = 'translate3d($0x,y,z)'"
    },
    {
      "trigger": "transform = 'translate3d($0x,y,z)'\tStyle CSS",
      "contents": "transform = 'translate3d($0x,y,z)'"
    },
    {
      "trigger": "style.transform = 'translateX($0x)'\tStyle CSS",
      "contents": "style.transform = 'translateX($0x)'"
    },
    {
      "trigger": "transform = 'translateX($0x)'\tStyle CSS",
      "contents": "transform = 'translateX($0x)'"
    },
    {
      "trigger": "style.transform = 'translateY($0y)'\tStyle CSS",
      "contents": "style.transform = 'translateY($0y)'"
    },
    {
      "trigger": "transform = 'translateY($0y)'\tStyle CSS",
      "contents": "transform = 'translateY($0y)'"
    },
    {
      "trigger": "style.transform = 'translateZ($0z)'\tStyle CSS",
      "contents": "style.transform = 'translateZ($0z)'"
    },
    {
      "trigger": "transform = 'translateZ($0z)'\tStyle CSS",
      "contents": "transform = 'translateZ($0z)'"
    },
    {
      "trigger": "style.transform = 'scale($0x,y)'\tStyle CSS",
      "contents": "style.transform = 'scale($0x,y)'"
    },
    {
      "trigger": "transform = 'scale($0x,y)'\tStyle CSS",
      "contents": "transform = 'scale($0x,y)'"
    },
    {
      "trigger": "style.transform = 'scale3d($0x,y,z)'\tStyle CSS",
      "contents": "style.transform = 'scale3d($0x,y,z)'"
    },
    {
      "trigger": "transform = 'scale3d($0x,y,z)'\tStyle CSS",
      "contents": "transform = 'scale3d($0x,y,z)'"
    },
    {
      "trigger": "style.transform = 'scaleX($0x)'\tStyle CSS",
      "contents": "style.transform = 'scaleX($0x)'"
    },
    {
      "trigger": "transform = 'scaleX($0x)'\tStyle CSS",
      "contents": "transform = 'scaleX($0x)'"
    },
    {
      "trigger": "style.transform = 'scaleY($0y)'\tStyle CSS",
      "contents": "style.transform = 'scaleY($0y)'"
    },
    {
      "trigger": "transform = 'scaleY($0y)'\tStyle CSS",
      "contents": "transform = 'scaleY($0y)'"
    },
    {
      "trigger": "style.transform = 'scaleZ($0z)'\tStyle CSS",
      "contents": "style.transform = 'scaleZ($0z)'"
    },
    {
      "trigger": "transform = 'scaleZ($0z)'\tStyle CSS",
      "contents": "transform = 'scaleZ($0z)'"
    },
    {
      "trigger": "style.transform = 'rotate($0angle)'\tStyle CSS",
      "contents": "style.transform = 'rotate($0angle)'"
    },
    {
      "trigger": "transform = 'rotate($0angle)'\tStyle CSS",
      "contents": "transform = 'rotate($0angle)'"
    },
    {
      "trigger": "style.transform = 'rotate3d($0x,y,z,angle)'\tStyle CSS",
      "contents": "style.transform = 'rotate3d($0x,y,z,angle)'"
    },
    {
      "trigger": "transform = 'rotate3d($0x,y,z,angle)'\tStyle CSS",
      "contents": "transform = 'rotate3d($0x,y,z,angle)'"
    },
    {
      "trigger": "style.transform = 'rotateX($0angle)'\tStyle CSS",
      "contents": "style.transform = 'rotateX($0angle)'"
    },
    {
      "trigger": "transform = 'rotateX($0angle)'\tStyle CSS",
      "contents": "transform = 'rotateX($0angle)'"
    },
    {
      "trigger": "style.transform = 'rotateY($0angle)'\tStyle CSS",
      "contents": "style.transform = 'rotateY($0angle)'"
    },
    {
      "trigger": "transform = 'rotateY($0angle)'\tStyle CSS",
      "contents": "transform = 'rotateY($0angle)'"
    },
    {
      "trigger": "style.transform = 'rotateZ($0angle)'\tStyle CSS",
      "contents": "style.transform = 'rotateZ($0angle)'"
    },
    {
      "trigger": "transform = 'rotateZ($0angle)'\tStyle CSS",
      "contents": "transform = 'rotateZ($0angle)'"
    },
    {
      "trigger": "style.transform = 'skew($0x-angle,y-angle)'\tStyle CSS",
      "contents": "style.transform = 'skew($0x-angle,y-angle)'"
    },
    {
      "trigger": "transform = 'skew($0x-angle,y-angle)'\tStyle CSS",
      "contents": "transform = 'skew($0x-angle,y-angle)'"
    },
    {
      "trigger": "style.transform = 'skewX($0angle)'\tStyle CSS",
      "contents": "style.transform = 'skewX($0angle)'"
    },
    {
      "trigger": "transform = 'skewX($0angle)'\tStyle CSS",
      "contents": "transform = 'skewX($0angle)'"
    },
    {
      "trigger": "style.transform = 'skewY($0angle)'\tStyle CSS",
      "contents": "style.transform = 'skewY($0angle)'"
    },
    {
      "trigger": "transform = 'skewY($0angle)'\tStyle CSS",
      "contents": "transform = 'skewY($0angle)'"
    },
    {
      "trigger": "style.transform = 'perspective($0n)'\tStyle CSS",
      "contents": "style.transform = 'perspective($0n)'"
    },
    {
      "trigger": "transform = 'perspective($0n)'\tStyle CSS",
      "contents": "transform = 'perspective($0n)'"
    },
    {
      "trigger": "style.transform = 'initial'\tStyle CSS",
      "contents": "style.transform = 'initial'"
    },
    {
      "trigger": "transform = 'initial'\tStyle CSS",
      "contents": "transform = 'initial'"
    },
    {
      "trigger": "style.transform = 'inherit'\tStyle CSS",
      "contents": "style.transform = 'inherit'"
    },
    {
      "trigger": "transform = 'inherit'\tStyle CSS",
      "contents": "transform = 'inherit'"
    },
    {
      "trigger": "style.transformOrigin\tStyle CSS",
      "contents": "style.transformOrigin"
    },
    {
      "trigger": "transformOrigin\tStyle CSS",
      "contents": "transformOrigin"
    },
    {
      "trigger": "style.transformOrigin = '$0'\tStyle CSS",
      "contents": "style.transformOrigin = '$0'"
    },
    {
      "trigger": "transformOrigin = '$0'\tStyle CSS",
      "contents": "transformOrigin = '$0'"
    },
    {
      "trigger": "style.transformOrigin = 'initial'\tStyle CSS",
      "contents": "style.transformOrigin = 'initial'"
    },
    {
      "trigger": "transformOrigin = 'initial'\tStyle CSS",
      "contents": "transformOrigin = 'initial'"
    },
    {
      "trigger": "style.transformOrigin = 'inherit'\tStyle CSS",
      "contents": "style.transformOrigin = 'inherit'"
    },
    {
      "trigger": "transformOrigin = 'inherit'\tStyle CSS",
      "contents": "transformOrigin = 'inherit'"
    },
    {
      "trigger": "style.transformStyle\tStyle CSS",
      "contents": "style.transformStyle"
    },
    {
      "trigger": "transformStyle\tStyle CSS",
      "contents": "transformStyle"
    },
    {
      "trigger": "style.transformStyle = '$0'\tStyle CSS",
      "contents": "style.transformStyle = '$0'"
    },
    {
      "trigger": "transformStyle = '$0'\tStyle CSS",
      "contents": "transformStyle = '$0'"
    },
    {
      "trigger": "style.transformStyle = 'flat'\tStyle CSS",
      "contents": "style.transformStyle = 'flat'"
    },
    {
      "trigger": "transformStyle = 'flat'\tStyle CSS",
      "contents": "transformStyle = 'flat'"
    },
    {
      "trigger": "style.transformStyle = 'preserve-3d'\tStyle CSS",
      "contents": "style.transformStyle = 'preserve-3d'"
    },
    {
      "trigger": "transformStyle = 'preserve-3d'\tStyle CSS",
      "contents": "transformStyle = 'preserve-3d'"
    },
    {
      "trigger": "style.transformStyle = 'initial'\tStyle CSS",
      "contents": "style.transformStyle = 'initial'"
    },
    {
      "trigger": "transformStyle = 'initial'\tStyle CSS",
      "contents": "transformStyle = 'initial'"
    },
    {
      "trigger": "style.transformStyle = 'inherit'\tStyle CSS",
      "contents": "style.transformStyle = 'inherit'"
    },
    {
      "trigger": "transformStyle = 'inherit'\tStyle CSS",
      "contents": "transformStyle = 'inherit'"
    },
    {
      "trigger": "style.transition\tStyle CSS",
      "contents": "style.transition"
    },
    {
      "trigger": "transition\tStyle CSS",
      "contents": "transition"
    },
    {
      "trigger": "style.transition = '$0'\tStyle CSS",
      "contents": "style.transition = '$0'"
    },
    {
      "trigger": "transition = '$0'\tStyle CSS",
      "contents": "transition = '$0'"
    },
    {
      "trigger": "style.transition = 'initial'\tStyle CSS",
      "contents": "style.transition = 'initial'"
    },
    {
      "trigger": "transition = 'initial'\tStyle CSS",
      "contents": "transition = 'initial'"
    },
    {
      "trigger": "style.transition = 'inherit'\tStyle CSS",
      "contents": "style.transition = 'inherit'"
    },
    {
      "trigger": "transition = 'inherit'\tStyle CSS",
      "contents": "transition = 'inherit'"
    },
    {
      "trigger": "style.transitionProperty\tStyle CSS",
      "contents": "style.transitionProperty"
    },
    {
      "trigger": "transitionProperty\tStyle CSS",
      "contents": "transitionProperty"
    },
    {
      "trigger": "style.transitionProperty = '$0'\tStyle CSS",
      "contents": "style.transitionProperty = '$0'"
    },
    {
      "trigger": "transitionProperty = '$0'\tStyle CSS",
      "contents": "transitionProperty = '$0'"
    },
    {
      "trigger": "style.transitionProperty = 'none'\tStyle CSS",
      "contents": "style.transitionProperty = 'none'"
    },
    {
      "trigger": "transitionProperty = 'none'\tStyle CSS",
      "contents": "transitionProperty = 'none'"
    },
    {
      "trigger": "style.transitionProperty = 'all'\tStyle CSS",
      "contents": "style.transitionProperty = 'all'"
    },
    {
      "trigger": "transitionProperty = 'all'\tStyle CSS",
      "contents": "transitionProperty = 'all'"
    },
    {
      "trigger": "style.transitionProperty = 'initial'\tStyle CSS",
      "contents": "style.transitionProperty = 'initial'"
    },
    {
      "trigger": "transitionProperty = 'initial'\tStyle CSS",
      "contents": "transitionProperty = 'initial'"
    },
    {
      "trigger": "style.transitionProperty = 'inherit'\tStyle CSS",
      "contents": "style.transitionProperty = 'inherit'"
    },
    {
      "trigger": "transitionProperty = 'inherit'\tStyle CSS",
      "contents": "transitionProperty = 'inherit'"
    },
    {
      "trigger": "style.transitionDuration\tStyle CSS",
      "contents": "style.transitionDuration"
    },
    {
      "trigger": "transitionDuration\tStyle CSS",
      "contents": "transitionDuration"
    },
    {
      "trigger": "style.transitionDuration = '$0'\tStyle CSS",
      "contents": "style.transitionDuration = '$0'"
    },
    {
      "trigger": "transitionDuration = '$0'\tStyle CSS",
      "contents": "transitionDuration = '$0'"
    },
    {
      "trigger": "style.transitionDuration = 'initial'\tStyle CSS",
      "contents": "style.transitionDuration = 'initial'"
    },
    {
      "trigger": "transitionDuration = 'initial'\tStyle CSS",
      "contents": "transitionDuration = 'initial'"
    },
    {
      "trigger": "style.transitionDuration = 'inherit'\tStyle CSS",
      "contents": "style.transitionDuration = 'inherit'"
    },
    {
      "trigger": "transitionDuration = 'inherit'\tStyle CSS",
      "contents": "transitionDuration = 'inherit'"
    },
    {
      "trigger": "style.transitionTimingFunction\tStyle CSS",
      "contents": "style.transitionTimingFunction"
    },
    {
      "trigger": "transitionTimingFunction\tStyle CSS",
      "contents": "transitionTimingFunction"
    },
    {
      "trigger": "style.transitionTimingFunction = '$0'\tStyle CSS",
      "contents": "style.transitionTimingFunction = '$0'"
    },
    {
      "trigger": "transitionTimingFunction = '$0'\tStyle CSS",
      "contents": "transitionTimingFunction = '$0'"
    },
    {
      "trigger": "style.transitionTimingFunction = 'ease'\tStyle CSS",
      "contents": "style.transitionTimingFunction = 'ease'"
    },
    {
      "trigger": "transitionTimingFunction = 'ease'\tStyle CSS",
      "contents": "transitionTimingFunction = 'ease'"
    },
    {
      "trigger": "style.transitionTimingFunction = 'linear'\tStyle CSS",
      "contents": "style.transitionTimingFunction = 'linear'"
    },
    {
      "trigger": "transitionTimingFunction = 'linear'\tStyle CSS",
      "contents": "transitionTimingFunction = 'linear'"
    },
    {
      "trigger": "style.transitionTimingFunction = 'ease-in'\tStyle CSS",
      "contents": "style.transitionTimingFunction = 'ease-in'"
    },
    {
      "trigger": "transitionTimingFunction = 'ease-in'\tStyle CSS",
      "contents": "transitionTimingFunction = 'ease-in'"
    },
    {
      "trigger": "style.transitionTimingFunction = 'ease-out'\tStyle CSS",
      "contents": "style.transitionTimingFunction = 'ease-out'"
    },
    {
      "trigger": "transitionTimingFunction = 'ease-out'\tStyle CSS",
      "contents": "transitionTimingFunction = 'ease-out'"
    },
    {
      "trigger": "style.transitionTimingFunction = 'ease-in-out'\tStyle CSS",
      "contents": "style.transitionTimingFunction = 'ease-in-out'"
    },
    {
      "trigger": "transitionTimingFunction = 'ease-in-out'\tStyle CSS",
      "contents": "transitionTimingFunction = 'ease-in-out'"
    },
    {
      "trigger": "style.transitionTimingFunction = 'cubic-bezier($0n,n,n,n)'\tStyle CSS",
      "contents": "style.transitionTimingFunction = 'cubic-bezier($0n,n,n,n)'"
    },
    {
      "trigger": "transitionTimingFunction = 'cubic-bezier($0n,n,n,n)'\tStyle CSS",
      "contents": "transitionTimingFunction = 'cubic-bezier($0n,n,n,n)'"
    },
    {
      "trigger": "style.transitionTimingFunction = 'initial'\tStyle CSS",
      "contents": "style.transitionTimingFunction = 'initial'"
    },
    {
      "trigger": "transitionTimingFunction = 'initial'\tStyle CSS",
      "contents": "transitionTimingFunction = 'initial'"
    },
    {
      "trigger": "style.transitionTimingFunction = 'inherit'\tStyle CSS",
      "contents": "style.transitionTimingFunction = 'inherit'"
    },
    {
      "trigger": "transitionTimingFunction = 'inherit'\tStyle CSS",
      "contents": "transitionTimingFunction = 'inherit'"
    },
    {
      "trigger": "style.transitionDelay\tStyle CSS",
      "contents": "style.transitionDelay"
    },
    {
      "trigger": "transitionDelay\tStyle CSS",
      "contents": "transitionDelay"
    },
    {
      "trigger": "style.transitionDelay = '$0'\tStyle CSS",
      "contents": "style.transitionDelay = '$0'"
    },
    {
      "trigger": "transitionDelay = '$0'\tStyle CSS",
      "contents": "transitionDelay = '$0'"
    },
    {
      "trigger": "style.transitionDelay = 'initial'\tStyle CSS",
      "contents": "style.transitionDelay = 'initial'"
    },
    {
      "trigger": "transitionDelay = 'initial'\tStyle CSS",
      "contents": "transitionDelay = 'initial'"
    },
    {
      "trigger": "style.transitionDelay = 'inherit'\tStyle CSS",
      "contents": "style.transitionDelay = 'inherit'"
    },
    {
      "trigger": "transitionDelay = 'inherit'\tStyle CSS",
      "contents": "transitionDelay = 'inherit'"
    },
    {
      "trigger": "style.unicodeBidi\tStyle CSS",
      "contents": "style.unicodeBidi"
    },
    {
      "trigger": "unicodeBidi\tStyle CSS",
      "contents": "unicodeBidi"
    },
    {
      "trigger": "style.unicodeBidi = '$0'\tStyle CSS",
      "contents": "style.unicodeBidi = '$0'"
    },
    {
      "trigger": "unicodeBidi = '$0'\tStyle CSS",
      "contents": "unicodeBidi = '$0'"
    },
    {
      "trigger": "style.unicodeBidi = 'normal'\tStyle CSS",
      "contents": "style.unicodeBidi = 'normal'"
    },
    {
      "trigger": "unicodeBidi = 'normal'\tStyle CSS",
      "contents": "unicodeBidi = 'normal'"
    },
    {
      "trigger": "style.unicodeBidi = 'embed'\tStyle CSS",
      "contents": "style.unicodeBidi = 'embed'"
    },
    {
      "trigger": "unicodeBidi = 'embed'\tStyle CSS",
      "contents": "unicodeBidi = 'embed'"
    },
    {
      "trigger": "style.unicodeBidi = 'bidi-override'\tStyle CSS",
      "contents": "style.unicodeBidi = 'bidi-override'"
    },
    {
      "trigger": "unicodeBidi = 'bidi-override'\tStyle CSS",
      "contents": "unicodeBidi = 'bidi-override'"
    },
    {
      "trigger": "style.unicodeBidi = 'initial'\tStyle CSS",
      "contents": "style.unicodeBidi = 'initial'"
    },
    {
      "trigger": "unicodeBidi = 'initial'\tStyle CSS",
      "contents": "unicodeBidi = 'initial'"
    },
    {
      "trigger": "style.unicodeBidi = 'inherit'\tStyle CSS",
      "contents": "style.unicodeBidi = 'inherit'"
    },
    {
      "trigger": "unicodeBidi = 'inherit'\tStyle CSS",
      "contents": "unicodeBidi = 'inherit'"
    },
    {
      "trigger": "style.verticalAlign\tStyle CSS",
      "contents": "style.verticalAlign"
    },
    {
      "trigger": "verticalAlign\tStyle CSS",
      "contents": "verticalAlign"
    },
    {
      "trigger": "style.verticalAlign = '$0'\tStyle CSS",
      "contents": "style.verticalAlign = '$0'"
    },
    {
      "trigger": "verticalAlign = '$0'\tStyle CSS",
      "contents": "verticalAlign = '$0'"
    },
    {
      "trigger": "style.verticalAlign = 'baseline'\tStyle CSS",
      "contents": "style.verticalAlign = 'baseline'"
    },
    {
      "trigger": "verticalAlign = 'baseline'\tStyle CSS",
      "contents": "verticalAlign = 'baseline'"
    },
    {
      "trigger": "style.verticalAlign = 'sub'\tStyle CSS",
      "contents": "style.verticalAlign = 'sub'"
    },
    {
      "trigger": "verticalAlign = 'sub'\tStyle CSS",
      "contents": "verticalAlign = 'sub'"
    },
    {
      "trigger": "style.verticalAlign = 'super'\tStyle CSS",
      "contents": "style.verticalAlign = 'super'"
    },
    {
      "trigger": "verticalAlign = 'super'\tStyle CSS",
      "contents": "verticalAlign = 'super'"
    },
    {
      "trigger": "style.verticalAlign = 'top'\tStyle CSS",
      "contents": "style.verticalAlign = 'top'"
    },
    {
      "trigger": "verticalAlign = 'top'\tStyle CSS",
      "contents": "verticalAlign = 'top'"
    },
    {
      "trigger": "style.verticalAlign = 'text-top'\tStyle CSS",
      "contents": "style.verticalAlign = 'text-top'"
    },
    {
      "trigger": "verticalAlign = 'text-top'\tStyle CSS",
      "contents": "verticalAlign = 'text-top'"
    },
    {
      "trigger": "style.verticalAlign = 'middle'\tStyle CSS",
      "contents": "style.verticalAlign = 'middle'"
    },
    {
      "trigger": "verticalAlign = 'middle'\tStyle CSS",
      "contents": "verticalAlign = 'middle'"
    },
    {
      "trigger": "style.verticalAlign = 'bottom'\tStyle CSS",
      "contents": "style.verticalAlign = 'bottom'"
    },
    {
      "trigger": "verticalAlign = 'bottom'\tStyle CSS",
      "contents": "verticalAlign = 'bottom'"
    },
    {
      "trigger": "style.verticalAlign = 'text-bottom'\tStyle CSS",
      "contents": "style.verticalAlign = 'text-bottom'"
    },
    {
      "trigger": "verticalAlign = 'text-bottom'\tStyle CSS",
      "contents": "verticalAlign = 'text-bottom'"
    },
    {
      "trigger": "style.verticalAlign = 'initial'\tStyle CSS",
      "contents": "style.verticalAlign = 'initial'"
    },
    {
      "trigger": "verticalAlign = 'initial'\tStyle CSS",
      "contents": "verticalAlign = 'initial'"
    },
    {
      "trigger": "style.verticalAlign = 'inherit'\tStyle CSS",
      "contents": "style.verticalAlign = 'inherit'"
    },
    {
      "trigger": "verticalAlign = 'inherit'\tStyle CSS",
      "contents": "verticalAlign = 'inherit'"
    },
    {
      "trigger": "style.visibility\tStyle CSS",
      "contents": "style.visibility"
    },
    {
      "trigger": "visibility\tStyle CSS",
      "contents": "visibility"
    },
    {
      "trigger": "style.visibility = '$0'\tStyle CSS",
      "contents": "style.visibility = '$0'"
    },
    {
      "trigger": "visibility = '$0'\tStyle CSS",
      "contents": "visibility = '$0'"
    },
    {
      "trigger": "style.visibility = 'visible'\tStyle CSS",
      "contents": "style.visibility = 'visible'"
    },
    {
      "trigger": "visibility = 'visible'\tStyle CSS",
      "contents": "visibility = 'visible'"
    },
    {
      "trigger": "style.visibility = 'hidden'\tStyle CSS",
      "contents": "style.visibility = 'hidden'"
    },
    {
      "trigger": "visibility = 'hidden'\tStyle CSS",
      "contents": "visibility = 'hidden'"
    },
    {
      "trigger": "style.visibility = 'collapse'\tStyle CSS",
      "contents": "style.visibility = 'collapse'"
    },
    {
      "trigger": "visibility = 'collapse'\tStyle CSS",
      "contents": "visibility = 'collapse'"
    },
    {
      "trigger": "style.visibility = 'initial'\tStyle CSS",
      "contents": "style.visibility = 'initial'"
    },
    {
      "trigger": "visibility = 'initial'\tStyle CSS",
      "contents": "visibility = 'initial'"
    },
    {
      "trigger": "style.visibility = 'inherit'\tStyle CSS",
      "contents": "style.visibility = 'inherit'"
    },
    {
      "trigger": "visibility = 'inherit'\tStyle CSS",
      "contents": "visibility = 'inherit'"
    },
    {
      "trigger": "style.whiteSpace\tStyle CSS",
      "contents": "style.whiteSpace"
    },
    {
      "trigger": "whiteSpace\tStyle CSS",
      "contents": "whiteSpace"
    },
    {
      "trigger": "style.whiteSpace = '$0'\tStyle CSS",
      "contents": "style.whiteSpace = '$0'"
    },
    {
      "trigger": "whiteSpace = '$0'\tStyle CSS",
      "contents": "whiteSpace = '$0'"
    },
    {
      "trigger": "style.whiteSpace = 'normal'\tStyle CSS",
      "contents": "style.whiteSpace = 'normal'"
    },
    {
      "trigger": "whiteSpace = 'normal'\tStyle CSS",
      "contents": "whiteSpace = 'normal'"
    },
    {
      "trigger": "style.whiteSpace = 'nowrap'\tStyle CSS",
      "contents": "style.whiteSpace = 'nowrap'"
    },
    {
      "trigger": "whiteSpace = 'nowrap'\tStyle CSS",
      "contents": "whiteSpace = 'nowrap'"
    },
    {
      "trigger": "style.whiteSpace = 'pre'\tStyle CSS",
      "contents": "style.whiteSpace = 'pre'"
    },
    {
      "trigger": "whiteSpace = 'pre'\tStyle CSS",
      "contents": "whiteSpace = 'pre'"
    },
    {
      "trigger": "style.whiteSpace = 'pre-line'\tStyle CSS",
      "contents": "style.whiteSpace = 'pre-line'"
    },
    {
      "trigger": "whiteSpace = 'pre-line'\tStyle CSS",
      "contents": "whiteSpace = 'pre-line'"
    },
    {
      "trigger": "style.whiteSpace = 'pre-wrap'\tStyle CSS",
      "contents": "style.whiteSpace = 'pre-wrap'"
    },
    {
      "trigger": "whiteSpace = 'pre-wrap'\tStyle CSS",
      "contents": "whiteSpace = 'pre-wrap'"
    },
    {
      "trigger": "style.whiteSpace = 'initial'\tStyle CSS",
      "contents": "style.whiteSpace = 'initial'"
    },
    {
      "trigger": "whiteSpace = 'initial'\tStyle CSS",
      "contents": "whiteSpace = 'initial'"
    },
    {
      "trigger": "style.whiteSpace = 'inherit'\tStyle CSS",
      "contents": "style.whiteSpace = 'inherit'"
    },
    {
      "trigger": "whiteSpace = 'inherit'\tStyle CSS",
      "contents": "whiteSpace = 'inherit'"
    },
    {
      "trigger": "style.width\tStyle CSS",
      "contents": "style.width"
    },
    {
      "trigger": "width\tStyle CSS",
      "contents": "width"
    },
    {
      "trigger": "style.width = '$0'\tStyle CSS",
      "contents": "style.width = '$0'"
    },
    {
      "trigger": "width = '$0'\tStyle CSS",
      "contents": "width = '$0'"
    },
    {
      "trigger": "style.width = 'auto'\tStyle CSS",
      "contents": "style.width = 'auto'"
    },
    {
      "trigger": "width = 'auto'\tStyle CSS",
      "contents": "width = 'auto'"
    },
    {
      "trigger": "style.width = 'initial'\tStyle CSS",
      "contents": "style.width = 'initial'"
    },
    {
      "trigger": "width = 'initial'\tStyle CSS",
      "contents": "width = 'initial'"
    },
    {
      "trigger": "style.width = 'inherit'\tStyle CSS",
      "contents": "style.width = 'inherit'"
    },
    {
      "trigger": "width = 'inherit'\tStyle CSS",
      "contents": "width = 'inherit'"
    },
    {
      "trigger": "style.wordBreak\tStyle CSS",
      "contents": "style.wordBreak"
    },
    {
      "trigger": "wordBreak\tStyle CSS",
      "contents": "wordBreak"
    },
    {
      "trigger": "style.wordBreak = '$0'\tStyle CSS",
      "contents": "style.wordBreak = '$0'"
    },
    {
      "trigger": "wordBreak = '$0'\tStyle CSS",
      "contents": "wordBreak = '$0'"
    },
    {
      "trigger": "style.wordBreak = 'normal'\tStyle CSS",
      "contents": "style.wordBreak = 'normal'"
    },
    {
      "trigger": "wordBreak = 'normal'\tStyle CSS",
      "contents": "wordBreak = 'normal'"
    },
    {
      "trigger": "style.wordBreak = 'break-all'\tStyle CSS",
      "contents": "style.wordBreak = 'break-all'"
    },
    {
      "trigger": "wordBreak = 'break-all'\tStyle CSS",
      "contents": "wordBreak = 'break-all'"
    },
    {
      "trigger": "style.wordBreak = 'keep-all '\tStyle CSS",
      "contents": "style.wordBreak = 'keep-all '"
    },
    {
      "trigger": "wordBreak = 'keep-all '\tStyle CSS",
      "contents": "wordBreak = 'keep-all '"
    },
    {
      "trigger": "style.wordBreak = 'initial'\tStyle CSS",
      "contents": "style.wordBreak = 'initial'"
    },
    {
      "trigger": "wordBreak = 'initial'\tStyle CSS",
      "contents": "wordBreak = 'initial'"
    },
    {
      "trigger": "style.wordBreak = 'inherit'\tStyle CSS",
      "contents": "style.wordBreak = 'inherit'"
    },
    {
      "trigger": "wordBreak = 'inherit'\tStyle CSS",
      "contents": "wordBreak = 'inherit'"
    },
    {
      "trigger": "style.wordSpacing\tStyle CSS",
      "contents": "style.wordSpacing"
    },
    {
      "trigger": "wordSpacing\tStyle CSS",
      "contents": "wordSpacing"
    },
    {
      "trigger": "style.wordSpacing = '$0'\tStyle CSS",
      "contents": "style.wordSpacing = '$0'"
    },
    {
      "trigger": "wordSpacing = '$0'\tStyle CSS",
      "contents": "wordSpacing = '$0'"
    },
    {
      "trigger": "style.wordSpacing = 'normal'\tStyle CSS",
      "contents": "style.wordSpacing = 'normal'"
    },
    {
      "trigger": "wordSpacing = 'normal'\tStyle CSS",
      "contents": "wordSpacing = 'normal'"
    },
    {
      "trigger": "style.wordSpacing = 'initial'\tStyle CSS",
      "contents": "style.wordSpacing = 'initial'"
    },
    {
      "trigger": "wordSpacing = 'initial'\tStyle CSS",
      "contents": "wordSpacing = 'initial'"
    },
    {
      "trigger": "style.wordSpacing = 'inherit'\tStyle CSS",
      "contents": "style.wordSpacing = 'inherit'"
    },
    {
      "trigger": "wordSpacing = 'inherit'\tStyle CSS",
      "contents": "wordSpacing = 'inherit'"
    },
    {
      "trigger": "style.wordWrap\tStyle CSS",
      "contents": "style.wordWrap"
    },
    {
      "trigger": "wordWrap\tStyle CSS",
      "contents": "wordWrap"
    },
    {
      "trigger": "style.wordWrap = '$0'\tStyle CSS",
      "contents": "style.wordWrap = '$0'"
    },
    {
      "trigger": "wordWrap = '$0'\tStyle CSS",
      "contents": "wordWrap = '$0'"
    },
    {
      "trigger": "style.wordWrap = 'normal'\tStyle CSS",
      "contents": "style.wordWrap = 'normal'"
    },
    {
      "trigger": "wordWrap = 'normal'\tStyle CSS",
      "contents": "wordWrap = 'normal'"
    },
    {
      "trigger": "style.wordWrap = 'break-word'\tStyle CSS",
      "contents": "style.wordWrap = 'break-word'"
    },
    {
      "trigger": "wordWrap = 'break-word'\tStyle CSS",
      "contents": "wordWrap = 'break-word'"
    },
    {
      "trigger": "style.wordWrap = 'initial'\tStyle CSS",
      "contents": "style.wordWrap = 'initial'"
    },
    {
      "trigger": "wordWrap = 'initial'\tStyle CSS",
      "contents": "wordWrap = 'initial'"
    },
    {
      "trigger": "style.wordWrap = 'inherit'\tStyle CSS",
      "contents": "style.wordWrap = 'inherit'"
    },
    {
      "trigger": "wordWrap = 'inherit'\tStyle CSS",
      "contents": "wordWrap = 'inherit'"
    },
    {
      "trigger": "style.widows\tStyle CSS",
      "contents": "style.widows"
    },
    {
      "trigger": "widows\tStyle CSS",
      "contents": "widows"
    },
    {
      "trigger": "style.widows = '$0'\tStyle CSS",
      "contents": "style.widows = '$0'"
    },
    {
      "trigger": "widows = '$0'\tStyle CSS",
      "contents": "widows = '$0'"
    },
    {
      "trigger": "style.widows = 'initial'\tStyle CSS",
      "contents": "style.widows = 'initial'"
    },
    {
      "trigger": "widows = 'initial'\tStyle CSS",
      "contents": "widows = 'initial'"
    },
    {
      "trigger": "style.widows = 'inherit'\tStyle CSS",
      "contents": "style.widows = 'inherit'"
    },
    {
      "trigger": "widows = 'inherit'\tStyle CSS",
      "contents": "widows = 'inherit'"
    },
    {
      "trigger": "style.zIndex\tStyle CSS",
      "contents": "style.zIndex"
    },
    {
      "trigger": "zIndex\tStyle CSS",
      "contents": "zIndex"
    },
    {
      "trigger": "style.zIndex = '$0'\tStyle CSS",
      "contents": "style.zIndex = '$0'"
    },
    {
      "trigger": "zIndex = '$0'\tStyle CSS",
      "contents": "zIndex = '$0'"
    },
    {
      "trigger": "style.zIndex = 'auto'\tStyle CSS",
      "contents": "style.zIndex = 'auto'"
    },
    {
      "trigger": "zIndex = 'auto'\tStyle CSS",
      "contents": "zIndex = 'auto'"
    },
    {
      "trigger": "style.zIndex = 'initial'\tStyle CSS",
      "contents": "style.zIndex = 'initial'"
    },
    {
      "trigger": "zIndex = 'initial'\tStyle CSS",
      "contents": "zIndex = 'initial'"
    },
    {
      "trigger": "style.zIndex = 'inherit'\tStyle CSS",
      "contents": "style.zIndex = 'inherit'"
    },
    {
      "trigger": "zIndex = 'inherit'\tStyle CSS",
      "contents": "zIndex = 'inherit'"
    },
    {
      "trigger": "style.boxDecorationBreak\tStyle CSS",
      "contents": "style.boxDecorationBreak"
    },
    {
      "trigger": "boxDecorationBreak\tStyle CSS",
      "contents": "boxDecorationBreak"
    },
    {
      "trigger": "style.boxDecorationBreak = '$0'\tStyle CSS",
      "contents": "style.boxDecorationBreak = '$0'"
    },
    {
      "trigger": "boxDecorationBreak = '$0'\tStyle CSS",
      "contents": "boxDecorationBreak = '$0'"
    },
    {
      "trigger": "style.content\tStyle CSS",
      "contents": "style.content"
    },
    {
      "trigger": "content\tStyle CSS",
      "contents": "content"
    },
    {
      "trigger": "style.content = '$0'\tStyle CSS",
      "contents": "style.content = '$0'"
    },
    {
      "trigger": "content = '$0'\tStyle CSS",
      "contents": "content = '$0'"
    },
    {
      "trigger": "style.fontStretch\tStyle CSS",
      "contents": "style.fontStretch"
    },
    {
      "trigger": "fontStretch\tStyle CSS",
      "contents": "fontStretch"
    },
    {
      "trigger": "style.fontStretch = '$0'\tStyle CSS",
      "contents": "style.fontStretch = '$0'"
    },
    {
      "trigger": "fontStretch = '$0'\tStyle CSS",
      "contents": "fontStretch = '$0'"
    },
    {
      "trigger": "style.hangingPunctuation\tStyle CSS",
      "contents": "style.hangingPunctuation"
    },
    {
      "trigger": "hangingPunctuation\tStyle CSS",
      "contents": "hangingPunctuation"
    },
    {
      "trigger": "style.hangingPunctuation = '$0'\tStyle CSS",
      "contents": "style.hangingPunctuation = '$0'"
    },
    {
      "trigger": "hangingPunctuation = '$0'\tStyle CSS",
      "contents": "hangingPunctuation = '$0'"
    },
    {
      "trigger": "style.hyphens\tStyle CSS",
      "contents": "style.hyphens"
    },
    {
      "trigger": "hyphens\tStyle CSS",
      "contents": "hyphens"
    },
    {
      "trigger": "style.hyphens = '$0'\tStyle CSS",
      "contents": "style.hyphens = '$0'"
    },
    {
      "trigger": "hyphens = '$0'\tStyle CSS",
      "contents": "hyphens = '$0'"
    },
    {
      "trigger": "style.icon\tStyle CSS",
      "contents": "style.icon"
    },
    {
      "trigger": "icon\tStyle CSS",
      "contents": "icon"
    },
    {
      "trigger": "style.icon = '$0'\tStyle CSS",
      "contents": "style.icon = '$0'"
    },
    {
      "trigger": "icon = '$0'\tStyle CSS",
      "contents": "icon = '$0'"
    },
    {
      "trigger": "style.imageOrientation\tStyle CSS",
      "contents": "style.imageOrientation"
    },
    {
      "trigger": "imageOrientation\tStyle CSS",
      "contents": "imageOrientation"
    },
    {
      "trigger": "style.imageOrientation = '$0'\tStyle CSS",
      "contents": "style.imageOrientation = '$0'"
    },
    {
      "trigger": "imageOrientation = '$0'\tStyle CSS",
      "contents": "imageOrientation = '$0'"
    },
    {
      "trigger": "style.navDown\tStyle CSS",
      "contents": "style.navDown"
    },
    {
      "trigger": "navDown\tStyle CSS",
      "contents": "navDown"
    },
    {
      "trigger": "style.navDown = '$0'\tStyle CSS",
      "contents": "style.navDown = '$0'"
    },
    {
      "trigger": "navDown = '$0'\tStyle CSS",
      "contents": "navDown = '$0'"
    },
    {
      "trigger": "style.navIndex\tStyle CSS",
      "contents": "style.navIndex"
    },
    {
      "trigger": "navIndex\tStyle CSS",
      "contents": "navIndex"
    },
    {
      "trigger": "style.navIndex = '$0'\tStyle CSS",
      "contents": "style.navIndex = '$0'"
    },
    {
      "trigger": "navIndex = '$0'\tStyle CSS",
      "contents": "navIndex = '$0'"
    },
    {
      "trigger": "style.navLeft\tStyle CSS",
      "contents": "style.navLeft"
    },
    {
      "trigger": "navLeft\tStyle CSS",
      "contents": "navLeft"
    },
    {
      "trigger": "style.navLeft = '$0'\tStyle CSS",
      "contents": "style.navLeft = '$0'"
    },
    {
      "trigger": "navLeft = '$0'\tStyle CSS",
      "contents": "navLeft = '$0'"
    },
    {
      "trigger": "style.navRight\tStyle CSS",
      "contents": "style.navRight"
    },
    {
      "trigger": "navRight\tStyle CSS",
      "contents": "navRight"
    },
    {
      "trigger": "style.navRight = '$0'\tStyle CSS",
      "contents": "style.navRight = '$0'"
    },
    {
      "trigger": "navRight = '$0'\tStyle CSS",
      "contents": "navRight = '$0'"
    },
    {
      "trigger": "style.navUp\tStyle CSS",
      "contents": "style.navUp"
    },
    {
      "trigger": "navUp\tStyle CSS",
      "contents": "navUp"
    },
    {
      "trigger": "style.navUp = '$0'\tStyle CSS",
      "contents": "style.navUp = '$0'"
    },
    {
      "trigger": "navUp = '$0'\tStyle CSS",
      "contents": "navUp = '$0'"
    },
    {
      "trigger": "style.textJustify\tStyle CSS",
      "contents": "style.textJustify"
    },
    {
      "trigger": "textJustify\tStyle CSS",
      "contents": "textJustify"
    },
    {
      "trigger": "style.textJustify = '$0'\tStyle CSS",
      "contents": "style.textJustify = '$0'"
    },
    {
      "trigger": "textJustify = '$0'\tStyle CSS",
      "contents": "textJustify = '$0'"
    }
  ]
}